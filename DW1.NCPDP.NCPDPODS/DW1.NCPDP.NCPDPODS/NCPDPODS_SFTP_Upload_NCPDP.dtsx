<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="2/5/2019 9:25:43 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="AAP-N097"
  DTS:CreatorName="AAP\yhaile"
  DTS:DTSID="{C8557446-C6B6-4D39-B61C-43BEE1A20B40}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="13.0.2165.0"
  DTS:LocaleID="1033"
  DTS:MaxErrorCount="0"
  DTS:ObjectName="NCPDPODS_SFTP_Upload_NCPDP"
  DTS:PackageType="5"
  DTS:VersionBuild="38"
  DTS:VersionGUID="{9A1462F2-9B2D-4ABC-BF1D-6A2038F896DC}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B65818AC-D72C-4FA7-9594-4A7DEACB486D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ftpPassword">
      <DTS:VariableValue
        DTS:DataType="8">8SJ9pMf44v62zYqA</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EB00044B-0B7A-4297-BBD3-FF2C85B71FE6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ftpSite">
      <DTS:VariableValue
        DTS:DataType="8">ftp.rxaap.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{80D6B559-DDE8-4EB4-9916-91B0E74C1BB9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ftpUsername">
      <DTS:VariableValue
        DTS:DataType="8">gbergmann</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E830E971-1595-4789-BC89-9666C7A095CC}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="localPath">
      <DTS:VariableValue
        DTS:DataType="8">\\fs1.aap.local\server\IT Department\NCPDP\Staging</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{90E9666C-FA62-407C-BBA4-4A3834643C68}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="remoteFTPDirectory">
      <DTS:VariableValue
        DTS:DataType="8">/sftp</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{10288C5B-DF4B-483D-A013-8F49EDC2CF26}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sshKey">
      <DTS:VariableValue
        DTS:DataType="8">ssh-ed25519 255 96:e7:c6:de:7f:14:33:39:7e:d5:c8:e9:51:7c:1d:fa</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{312AFDA9-8515-4412-9291-665336FB0769}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varErrorLogDbName">
      <DTS:VariableValue
        DTS:DataType="8">ODSIntake</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D8E9ECD7-9D37-4A1F-A486-8F70439AD2E2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varErrorLogServer">
      <DTS:VariableValue
        DTS:DataType="8">AAPDW1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5059E372-5E75-45FE-BE8D-223EBCA15F00}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varFileLogDbName">
      <DTS:VariableValue
        DTS:DataType="8">NCPDPODS</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5A786D36-CF19-4B59-A559-AC0A73F3E1B9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varFileLogServer">
      <DTS:VariableValue
        DTS:DataType="8">AAPDW1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{66A1FF4F-5B59-4C35-A1D9-D1C905F91D1E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varProcess">
      <DTS:VariableValue
        DTS:DataType="8">NCPDP</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A4518DA0-CDFE-4067-9D9A-73E3204FA1BB}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="winSCPLog">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DD1B4E04-D4F3-43CF-AAF9-2F25F491A207}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="winSCPLogPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\WINscp\WINscpLog.txt</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1D266C2E-19A6-4F30-9037-955E963A4B43}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="winSCPPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Program Files (x86)\WinSCP\winscp.exe</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Download using WinSCP"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{736A8EF1-4354-4D6E-A634-3B116A458685}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:MaxErrorCount="0"
      DTS:ObjectName="Download using WinSCP"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_0d320d74dbf6425b9e790fc3b00f3a71"
          VSTAMajorVersion="14"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::ftpPassword,User::ftpSite,User::ftpUsername,User::localPath,User::remoteFTPDirectory,User::sshKey,User::varErrorLogDbName,User::varErrorLogServer,User::varFileLogDbName,User::varFileLogServer,User::varProcess,User::winSCPLog,User::winSCPLogPath,User::winSCPPath">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_0d320d74dbf6425b9e790fc3b00f3a71")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_0d320d74dbf6425b9e790fc3b00f3a71")]
[assembly: AssemblyCopyright("Copyright @  2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using System.Data.SqlClient;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using WinSCP;
#endregion

namespace ST_0d320d74dbf6425b9e790fc3b00f3a71
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            string winscpPath = Dts.Variables["winSCPPath"].Value.ToString();
            string username = Dts.Variables["ftpUsername"].Value.ToString();
            string password = Dts.Variables["ftpPassword"].Value.ToString();
            string ftpSite = Dts.Variables["ftpSite"].Value.ToString();
            string localPath = Dts.Variables["localPath"].Value.ToString();
            string remoteFTPDirectory = Dts.Variables["remoteFTPDirectory"].Value.ToString();
            string sshKey = Dts.Variables["sshKey"].Value.ToString();
            Boolean winSCPLog = (Boolean)Dts.Variables["winSCPLog"].Value;
            string winSCPLogPath = Dts.Variables["winSCPLogPath"].Value.ToString();
            string fileLogServer = Dts.Variables["varFileLogServer"].Value.ToString();
            string fileLogDbName = Dts.Variables["varFileLogDbName"].Value.ToString();
            string errorLogServer = Dts.Variables["varErrorLogServer"].Value.ToString();
            string errorLogDbName = Dts.Variables["varErrorLogDbName"].Value.ToString();
            string strProcess = Dts.Variables["varProcess"].Value.ToString();

            SessionOptions sessionOptions = new SessionOptions
            {
                Protocol = Protocol.Sftp,
                HostName = ftpSite,
                UserName = username,
                Password = password,
                SshHostKeyFingerprint = sshKey
            };


         try
            {
                using (Session session = new Session())
                {
                    // WinSCP .NET assembly must be in GAC to be used with SSIS,
                    // set path to WinSCP.exe explicitly, if using non-default path.
                    session.ExecutablePath = winscpPath;
                    session.DisableVersionCheck = true;

                    //if (winSCPLog)
                    //{
                        //session.SessionLogPath = @winSCPLogPath + @"WinscpSessionLog.txt";
                        //session.DebugLogPath = @winSCPLogPath + @"WinscpDebugLog.txt";
                    //}

                    // Connect
                    session.Timeout = new TimeSpan(0, 2, 0); // two minutes
                    session.Open(sessionOptions);

                    TransferOptions transferOptions = new TransferOptions();
                    transferOptions.TransferMode = TransferMode.Binary;

                     try
                    {

                        var sessionresults = session.GetFiles(remoteFTPDirectory, localPath, false, transferOptions);

                        sessionresults.Check();

                        //Log file name and datetime for each file downloaded
                        foreach (TransferEventArgs transfer in sessionresults.Transfers)
                        {
                            using (SqlConnection oRemoteConn =
                                      new SqlConnection("Data Source = " + fileLogServer + "; Initial Catalog = " + fileLogDbName + "; Integrated Security = true;"))
                             try
                                {

                                    SqlCommand oCmd = new SqlCommand();
                                    oCmd.Connection = oRemoteConn;
                                    oCmd.CommandType = CommandType.StoredProcedure;

                                    oCmd.CommandText = "dbo.usp_FileLog";
                                    oCmd.Parameters.AddWithValue("@FileName", transfer.FileName.ToString());
                                    oCmd.Parameters.AddWithValue("@Process", strProcess.ToString());

                                    oRemoteConn.Open();
                                    oCmd.ExecuteNonQuery();
                                }

                             catch (SqlException exSql)
                                {

                                    using (SqlConnection oErrorConn =
                                        new SqlConnection("Data Source = " + errorLogServer + "; Initial Catalog = " + errorLogDbName + "; Integrated Security = true;"))

                                        try
                                        {

                                            SqlCommand errorCmd = new SqlCommand();
                                            errorCmd.Connection = oErrorConn;
                                            errorCmd.CommandType = CommandType.StoredProcedure;

                                            errorCmd.CommandText = "Error.usp_ErrorInsert_ManagedErrorLog";
                                            errorCmd.Parameters.AddWithValue("@Process", strProcess.ToString());
                                            errorCmd.Parameters.AddWithValue("@Message", exSql.Message.ToString());
                                            errorCmd.Parameters.AddWithValue("@StackTrace", exSql.StackTrace.ToString());
                                            errorCmd.Parameters.AddWithValue("@Source", exSql.Source.ToString());
                                            errorCmd.Parameters.AddWithValue("@Procedure", exSql.Procedure.ToString());
                                            errorCmd.Parameters.AddWithValue("@LineNumber", exSql.LineNumber);
                                            errorCmd.Parameters.AddWithValue("@InnerException", exSql.InnerException.ToString());
                                            errorCmd.Parameters.AddWithValue("@Number", exSql.Number);
                                            errorCmd.Parameters.AddWithValue("@State", exSql.State);
                                            errorCmd.Parameters.AddWithValue("@TargetSite", exSql.TargetSite.ToString());
                                            errorCmd.Parameters.AddWithValue("@HelpLink", exSql.HelpLink.ToString());
                                            errorCmd.Parameters.AddWithValue("@SQLErrorCode", exSql.ErrorCode.ToString());
                                            errorCmd.Parameters.AddWithValue("@SQLSeverity", exSql.Class.ToString());
                                            errorCmd.Parameters.AddWithValue("@Data", exSql.Data.ToString());
                                            errorCmd.Parameters.AddWithValue("@Server", exSql.Server.ToString());
                                            errorCmd.Parameters.AddWithValue("@ExceptionType", exSql.GetType().ToString());

                                            oErrorConn.Open();
                                            errorCmd.ExecuteNonQuery();

                                        }

                                        catch (SqlException errorexSql)
                                        {
                                            throw new Exception("", errorexSql);
                                        }

                                }

                            session.RemoveFiles("/*.zip");

                            //Console.WriteLine("Download of {0} succeeded", transfer.FileName);
                        }

                    }

                     catch (Exception e)
                     {
                         Dts.Events.FireError(0, null,
                         string.Format("Error when using WinSCP to download file: {0}", e), null, 0);
                         Dts.TaskResult = (int)DTSExecResult.Failure;
                     }
                }

            }

         catch (Exception e)
         {

         }

			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_0d320d74dbf6425b9e790fc3b00f3a71.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{646DD039-A813-4D26-B3B0-CB893E178988}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_0d320d74dbf6425b9e790fc3b00f3a71</RootNamespace>
    <AssemblyName>ST_0d320d74dbf6425b9e790fc3b00f3a71</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="WinSCPnet">
      <HintPath>C:\Program Files (x86)\WinSCP\WinSCPnet.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_0d320d74dbf6425b9e790fc3b00f3a71</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_0d320d74dbf6425b9e790fc3b00f3a71</msb:DisplayName>
		<msb:ProjectId>{23C3BFF4-6FD0-450E-A927-70831E2AB13B}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_0d320d74dbf6425b9e790fc3b00f3a71.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0d320d74dbf6425b9e790fc3b00f3a71.Properties.Settings.get_Default():ST_0d320d74dbf6425b9e790fc3b00f3a71.Properties.Sett" +
    "ings")]

namespace ST_0d320d74dbf6425b9e790fc3b00f3a71.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0d320d74dbf6425b9e790fc3b00f3a71.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0d320d74dbf6425b9e790fc3b00f3a71.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0d320d74dbf6425b9e790fc3b00f3a71.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_0d320d74dbf6425b9e790fc3b00f3a71.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_0d320d74dbf6425b9e790fc3b00f3a71.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_0d320d74dbf6425b9e790fc3b00f3a71.dll">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
9wc0ABIA5gX0CBIABgb0CAYAAAEaBQYAHAYaBQYAIQUaBQYAcQLQBgYAmQgaBQYAYwYiBwYAOQZw
BRYAMgLGBBYAogLGBBYA9AFbBQYAVgICBwoAtASLBBoAuAdXARoA9wBXAQYAMgUaBQ4ACAU0AAYA
OgUaBQ4A3gA0AA4A3Ag0AA4ADAI0AA4ArgU0AAYALQQaBRIAigD0CBIAgAAmBhIAewFiABIAlwX0
CA4A4Ac0ABIAhwb0CBIA2QUmBgYAJQAaBQYA7wMaBQYAzQGFBQYA9AXjBgYAYgkJCAYAigEaBQ4A
xQg0AAoAcwaLBAYADAEaBQYAWQmFBQAAAAArAAAAAAABAAEAAQAQAEgFAQA5AAEAAQAAABAAKQeF
B2kAAQADAAABEADXB4UHfQADAAcAAwEAAHIIAABhAAQACgARACYFPQERAL0BQQERALEARQEGBloA
SQFWgGIITAFWgJ0BTAFQIAAAAACGAE4FBgABAAgnAAAAAIYYwwYGAAEAECcAAAAAgxjDBgYAAQAY
JwAAAACTCF8GUAEBAEQnAAAAAJMIpQFVAQEASycAAAAAkwixAVoBAQBTJwAAAACWCKoIYAECAFon
AAAAAIYYwwYGAAIAYicAAAAAkRjJBmUBAgAAAAEACwQJAMMGAQARAMMGBgAZAMMGCgApAMMGEAAx
AMMGEAA5AMMGEABBAMMGEABJAMMGEABRAMMGEABZAMMGEABhAMMGEABpAMMGBgDJAMMGBgDxAMMG
FQABAcMGBgBxAGoIQgAJAbQHSAARAREFTgAZAfQDVQDRACsEWQB5AMMGBgB5AAQFXQB5AEoBEAB5
AD0BEAB5AJUAEAB5ABYJEACBAMMGBgCBADQEEACBAEcEZAAxAcMGaQCBADAJcACBAEMFdwCJAMMG
BgCJANoAfQCBAM4HhABJAVkEBgBBATsIjwBRAbUGlQCRAAoJVQBZAYsImgChAMMGEABhAcMGBgBh
AcoFoABpAXcBpgBpAUUJEABhAUkIrQCBATABWQB5Af4DswCRAUMFBgBpAW4JuwC5AOsAWQC5AKIA
WQC5AMEAWQCpAI8BWQCpAFAGuwC5ABMGvwCpAEUGuwCpACgCxAC5AEcCyAC5AF8EWQCxAcwAuwCZ
ASsEWQCpAFgIxAChASsEWQC5AG4AzgCpAJQGWQC5AIcB1AC5AMMG2gCxACACBgCBAMIH4QCRADwJ
6AAJAYAI7ABZAZII8gDRAZ8G+AAJAbYIAQBxAMMGBgDRAMMGBgDBAR4BAQHBAVUJCgHZAMMGEAH5
AMMGBgAIABQAMwEIABgAOAEpAHMAoAEuAAsAeAEuABMAgQEuABsAoAEuACMAqQEuACsA0gEuADMA
0gEuADsA0gEuAEMAqQEuAEsA2AEuAFMA0gEuAFsA7wFDAGMAOAFJAHMAoAFhAHsAOAFjAGsAOAEb
AAMAAQAEAAMAAABjBmkBAADFAW4BAACuCHMBAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcABIAAAAEA
AACzHN+PAAAAAAAAAQAAAAQAAAAAAAAAAAAAABgBdwAAAAAADQAAAAAAAAAAAAAAIQFsBAAAAAAB
AAYABQDFJgAAAAAqAaAIAAAAAAQAAAAAAAAAAAAAABgBYgAAAAAABAAAAAAAAAAAAAAAGAEaBQAA
AAANAAAAAAAAAAAAAAAhATsAAAAAAAAAAAABAAAAMwcAAAUAAgAAAAAAAFNUXzBkMzIwZDc0ZGJm
NjQyNWI5ZTc5MGZjM2IwMGYzYTcxAEludDMyADxNb2R1bGU+AFdpblNDUABNaWNyb3NvZnQuU3Fs
U2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBTeXN0ZW0uRGF0YQBnZXRfRGF0YQBtc2NvcmxpYgBE
YkNvbW1hbmQAU3FsQ29tbWFuZABzZXRfUGFzc3dvcmQAZ2V0X1N0YWNrVHJhY2UAZGVmYXVsdElu
c3RhbmNlAGdldF9Tb3VyY2UAZ2V0X0Vycm9yQ29kZQBzZXRfVHJhbnNmZXJNb2RlAGdldF9NZXNz
YWdlAFZhcmlhYmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFu
ZGxlAGdldF9GaWxlTmFtZQBzZXRfVXNlck5hbWUAc2V0X0hvc3ROYW1lAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuRHRzLlJ1bnRpbWUAc2V0X0NvbW1hbmRUeXBlAEdldFR5cGUAZ2V0X1Byb2NlZHVyZQBG
YWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBNZXRob2RCYXNl
AFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBPcGVy
YXRpb25SZXN1bHRCYXNlAERpc3Bvc2UAZ2V0X1N0YXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAGdl
dF9UYXJnZXRTaXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNv
ZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUA
QXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRG
cmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5
RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3Nl
bWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1Njcmlw
dFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1l
Q29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBCeXRlAGdldF9WYWx1ZQBBZGRXaXRoVmFsdWUAdmFsdWUA
U3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBzZXRfRXhlY3V0YWJsZVBhdGgAc2V0
X0Rpc2FibGVWZXJzaW9uQ2hlY2sAZ2V0X0hlbHBMaW5rAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2Ny
aXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9i
amVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF8wZDMyMGQ3NGRiZjY0MjViOWU3OTBm
YzNiMDBmM2E3MS5kbGwAc2V0X1Byb3RvY29sAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNl
TWFuAEJvb2xlYW4AVGltZVNwYW4AT3BlbgBTY3JpcHRNYWluAFNlc3Npb24AU3lzdGVtLkNvbmZp
Z3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AU3FsUGFyYW1l
dGVyQ29sbGVjdGlvbgBUcmFuc2ZlckV2ZW50QXJnc0NvbGxlY3Rpb24Ac2V0X0Nvbm5lY3Rpb24A
RGJDb25uZWN0aW9uAFNxbENvbm5lY3Rpb24ARXh0ZXJuYWxFeGNlcHRpb24AU3FsRXhjZXB0aW9u
AGdldF9Jbm5lckV4Y2VwdGlvbgBTeXN0ZW0uRGF0YS5Db21tb24AQ3VsdHVyZUluZm8AZ2V0X051
bWJlcgBnZXRfTGluZU51bWJlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAEV2ZW50c09iamVjdFdyYXBw
ZXIAU3FsUGFyYW1ldGVyAGdldF9TZXJ2ZXIARmlyZUVycm9yAElFbnVtZXJhdG9yAEdldEVudW1l
cmF0b3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5JbnRl
cm9wU2VydmljZXMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3Vy
Y2VzAFNUXzBkMzIwZDc0ZGJmNjQyNWI5ZTc5MGZjM2IwMGYzYTcxLlByb3BlcnRpZXMuUmVzb3Vy
Y2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF8wZDMyMGQ3NGRiZjY0MjViOWU3OTBmYzNi
MDBmM2E3MS5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMAUmVtb3ZlRmlsZXMAR2V0RmlsZXMAU2V0
dGluZ3MARmlsZU9wZXJhdGlvbkV2ZW50QXJncwBUcmFuc2ZlckV2ZW50QXJncwBTeXN0ZW0uQ29s
bGVjdGlvbnMAU2Vzc2lvbk9wdGlvbnMAVHJhbnNmZXJPcHRpb25zAGdldF9UcmFuc2ZlcnMAZ2V0
X1BhcmFtZXRlcnMAZ2V0X0NsYXNzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAGdldF9F
dmVudHMAQ29uY2F0AEZvcm1hdABPYmplY3QAV2luU0NQbmV0AGdldF9EZWZhdWx0AHNldF9UYXNr
UmVzdWx0AFJlbW92YWxPcGVyYXRpb25SZXN1bHQAVHJhbnNmZXJPcGVyYXRpb25SZXN1bHQAU3lz
dGVtLkRhdGEuU3FsQ2xpZW50AGdldF9DdXJyZW50AHNldF9Tc2hIb3N0S2V5RmluZ2VycHJpbnQA
c2V0X1RpbWVvdXQATW92ZU5leHQAc2V0X0NvbW1hbmRUZXh0AGdldF9Bc3NlbWJseQBJRGljdGlv
bmFyeQBFeGVjdXRlTm9uUXVlcnkAAAAAFXcAaQBuAFMAQwBQAFAAYQB0AGgAABdmAHQAcABVAHMA
ZQByAG4AYQBtAGUAABdmAHQAcABQAGEAcwBzAHcAbwByAGQAAA9mAHQAcABTAGkAdABlAAATbABv
AGMAYQBsAFAAYQB0AGgAACVyAGUAbQBvAHQAZQBGAFQAUABEAGkAcgBlAGMAdABvAHIAeQAADXMA
cwBoAEsAZQB5AAATdwBpAG4AUwBDAFAATABvAGcAABt3AGkAbgBTAEMAUABMAG8AZwBQAGEAdABo
AAAhdgBhAHIARgBpAGwAZQBMAG8AZwBTAGUAcgB2AGUAcgAAIXYAYQByAEYAaQBsAGUATABvAGcA
RABiAE4AYQBtAGUAACN2AGEAcgBFAHIAcgBvAHIATABvAGcAUwBlAHIAdgBlAHIAACN2AGEAcgBF
AHIAcgBvAHIATABvAGcARABiAE4AYQBtAGUAABV2AGEAcgBQAHIAbwBjAGUAcwBzAAAdRABhAHQA
YQAgAFMAbwB1AHIAYwBlACAAPQAgAAApOwAgAEkAbgBpAHQAaQBhAGwAIABDAGEAdABhAGwAbwBn
ACAAPQAgAAA7OwAgAEkAbgB0AGUAZwByAGEAdABlAGQAIABTAGUAYwB1AHIAaQB0AHkAIAA9ACAA
dAByAHUAZQA7AAAfZABiAG8ALgB1AHMAcABfAEYAaQBsAGUATABvAGcAABNAAEYAaQBsAGUATgBh
AG0AZQAAEUAAUAByAG8AYwBlAHMAcwAAS0UAcgByAG8AcgAuAHUAcwBwAF8ARQByAHIAbwByAEkA
bgBzAGUAcgB0AF8ATQBhAG4AYQBnAGUAZABFAHIAcgBvAHIATABvAGcAABFAAE0AZQBzAHMAYQBn
AGUAABdAAFMAdABhAGMAawBUAHIAYQBjAGUAAA9AAFMAbwB1AHIAYwBlAAAVQABQAHIAbwBjAGUA
ZAB1AHIAZQAAF0AATABpAG4AZQBOAHUAbQBiAGUAcgAAH0AASQBuAG4AZQByAEUAeABjAGUAcAB0
AGkAbwBuAAAPQABOAHUAbQBiAGUAcgAADUAAUwB0AGEAdABlAAAXQABUAGEAcgBnAGUAdABTAGkA
dABlAAATQABIAGUAbABwAEwAaQBuAGsAABtAAFMAUQBMAEUAcgByAG8AcgBDAG8AZABlAAAZQABT
AFEATABTAGUAdgBlAHIAaQB0AHkAAAtAAEQAYQB0AGEAAA9AAFMAZQByAHYAZQByAAAdQABFAHgA
YwBlAHAAdABpAG8AbgBUAHkAcABlAAABAA0vACoALgB6AGkAcAAAW0UAcgByAG8AcgAgAHcAaABl
AG4AIAB1AHMAaQBuAGcAIABXAGkAbgBTAEMAUAAgAHQAbwAgAGQAbwB3AG4AbABvAGEAZAAgAGYA
aQBsAGUAOgAgAHsAMAB9AABxUwBUAF8AMABkADMAMgAwAGQANwA0AGQAYgBmADYANAAyADUAYgA5
AGUANwA5ADAAZgBjADMAYgAwADAAZgAzAGEANwAxAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIA
ZQBzAG8AdQByAGMAZQBzAAAAAOszf/gkCECsdiNbIiBVIgAEIAEBCAMgAAEFIAEBEREEIAEBDgUg
AQERdSYHGQ4ODg4ODg4ODg4ODhI9EkESRRJJEk0SURJVElEIBRJVElkSXQUgABKAhQUgABKAiQYg
ARKAjRwDIAAcAyAADgYgAQERgJUEIAEBAgYgAwEICAgGIAEBEYCZBSABARI9BiABARGAnQogBBKA
oQ4OAhJFBSAAEoCpBCAAEkkFAAEOHQ4FIAEBElEGIAEBEYC5BSAAEoC9ByACEoDFDhwDIAAIBCAA
El0DIAAFBSAAEoDVBSAAEoDdBSAAEoDhBiACAQ4SXQYgARKA5Q4DIAACBSAAEoDpBQACDg4cCCAF
AggODg4ICAABEoDhEYDtBSAAEoDxByACAQ4SgPEIt3pcVhk04IkIiYRdzYCAzJEIInHsSjxW0L8E
AAAAAAQBAAAAAwYSbQMGEnEDBhIQAgYIAwYRFAQAABJtBAAAEnEFAAEBEnEEAAASEAMAAAEECAAS
bQQIABJxBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAA
AAAAKAEAI1NUXzBkMzIwZDc0ZGJmNjQyNWI5ZTc5MGZjM2IwMGYzYTcxAAAFAQAAAAAWAQARQ29w
eXJpZ2h0IEAgIDIwMTkAAEcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3
b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5S
ZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1
cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3Vy
Y2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAED8AAAAAAAAAAAAA
Kj8AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAABw/AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNj
b3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQ
AAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhA
AAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv
/gAAAQAAAAEA34+zHAAAAQDfj7McPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYA
YQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAA
ALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAwADQA
YgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBh
AG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQA
XwAwAGQAMwAyADAAZAA3ADQAZABiAGYANgA0ADIANQBiADkAZQA3ADkAMABmAGMAMwBiADAAMABm
ADMAYQA3ADEAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANwAzADQA
NwAuADMANgA4ADMAMQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwAw
AGQAMwAyADAAZAA3ADQAZABiAGYANgA0ADIANQBiADkAZQA3ADkAMABmAGMAMwBiADAAMABmADMA
YQA3ADEALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBw
AHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEAOQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUA
bQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAA
AFMAVABfADAAZAAzADIAMABkADcANABkAGIAZgA2ADQAMgA1AGIAOQBlADcAOQAwAGYAYwAzAGIA
MAAwAGYAMwBhADcAMQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABT
AFQAXwAwAGQAMwAyADAAZAA3ADQAZABiAGYANgA0ADIANQBiADkAZQA3ADkAMABmAGMAMwBiADAA
MABmADMAYQA3ADEAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAu
ADcAMwA0ADcALgAzADYAOAAzADEAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMA
aQBvAG4AAAAxAC4AMAAuADcAMwA0ADcALgAzADYAOAAzADEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAPD8AAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="174,42"
          Id="Package\Download using WinSCP"
          TopLeft="523,70" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>