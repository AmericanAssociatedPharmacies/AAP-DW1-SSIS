<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="11/14/2017 3:32:49 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="AAP-N202"
  DTS:CreatorName="AAP\sedwards"
  DTS:DelayValidation="True"
  DTS:DTSID="{17A1C19C-2540-4A5B-A4CE-1D3C92391E31}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="13.0.2165.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="CAH_FormularyFile_ODSIntake_DataLoad"
  DTS:PackageType="5"
  DTS:VersionBuild="23"
  DTS:VersionGUID="{49AF7387-A1B5-4D19-85AD-B1AC03F9D9E8}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[AAPDW1.ODSIntake]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{1FC80623-5133-477F-8676-2BFF7C385ABD}"
      DTS:ObjectName="AAPDW1.ODSIntake">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=AAPDW1;Initial Catalog=ODSIntake;Provider=SQLNCLI11.1;Integrated Security=SSPI;Packet Size=32767;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{58CB4509-7B8E-493B-8D1B-997C8C46DBE7}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ADORecordSet">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D22A861B-8251-4757-8B16-BBFB2216342A}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varDateKey">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{62CF06D6-DFCB-4FEC-A722-FEA948FD604A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varFileDir">
      <DTS:VariableValue
        DTS:DataType="8">\\fs1.aap.local\Server\IT Department\Cardinal\FormularyFiles</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B2CFC67B-9525-4C4F-B0CC-05216E823258}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varStagingFile">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:DelayValidation="True"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{F78F3FE6-C42B-4DA4-A75F-E9D0875F2E83}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{DCB94D21-BA81-40BB-88DC-4D0857B113C6}"
        DTS:ObjectName="{DCB94D21-BA81-40BB-88DC-4D0857B113C6}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateRowsInFirstTable"
            VarName="User::ADORecordSet" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Delete File"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:DelayValidation="True"
          DTS:Description="File System Task"
          DTS:Disabled="True"
          DTS:DTSID="{413685A6-079E-401B-8D47-642EB6B3F7CD}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Delete File"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2012; Â© 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="DeleteFile"
              TaskSourcePath="User::varStagingFile"
              TaskIsSourceVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Load Raw File"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{1B49FE68-B456-484A-A7BB-D3CDE595EFDA}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Load Raw File"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Error].[ErrorOutput]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[AAPDW1.ODSIntake]"
                      connectionManagerRefId="Package.ConnectionManagers[AAPDW1.ODSIntake]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ErrorDateTime]"
                          cachedDataType="dbTimeStamp"
                          cachedName="ErrorDateTime"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ErrorDateTime]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[ErrorDateTime]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[FQNFileName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1000"
                          cachedName="FQNFileName"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FQNFileName]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[FQNFileName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[FileErrorRowNumber]"
                          cachedDataType="i4"
                          cachedName="FileErrorRowNumber"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FileErrorRowNumber]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[FileErrorRowNumber]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ErrorData]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="8000"
                          cachedName="ErrorData"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ErrorData]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[ErrorData]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ErrorDescription]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="8000"
                          cachedName="ErrorDescription"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ErrorDescription]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[ErrorDescription]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RowID]"
                          dataType="i4"
                          name="RowID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ErrorDateTime]"
                          dataType="dbTimeStamp"
                          name="ErrorDateTime" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FQNFileName]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="FQNFileName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FileErrorRowNumber]"
                          dataType="i4"
                          name="FileErrorRowNumber" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ErrorData]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          name="ErrorData" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ErrorDescription]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          name="ErrorDescription" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RowCreatedDate]"
                          dataType="dbTimeStamp"
                          name="RowCreatedDate" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination 1"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Staging].[CAH_FormularyFile]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[AAPDW1.ODSIntake]"
                      connectionManagerRefId="Package.ConnectionManagers[AAPDW1.ODSIntake]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[FileRowID]"
                          cachedDataType="i4"
                          cachedName="FileRowID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[FileRowID]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[FileRowID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[DateKey]"
                          cachedDataType="i4"
                          cachedName="DateKey"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[DateKey]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[DateKey]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[CIN]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="CIN"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[CIN]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[CIN]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[Description]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="Description"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Description]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[Description]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[Size]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="Size"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Size]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[Size]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[AAPSell]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="AAPSell"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[AAPSell]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[AAPSell]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[Supplier]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="Supplier"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Supplier]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[Supplier]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[BrandName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="BrandName"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[BrandName]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[BrandName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[Form]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="Form"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Form]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[Form]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[NDCUPC]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="NDCUPC"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[NDCUPC]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[NDCUPC]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[DPNum]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="DPNum"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[DPNum]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[DPNum]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[UOM]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="UOM"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[UOM]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[UOM]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[PricePerUnit]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="PricePerUnit"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[PricePerUnit]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[PricePerUnit]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[GPIID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="GPIID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[GPIID]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[GPIID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[GCN]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="GCN"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[GCN]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[GCN]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[GCNSEQ]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="GCNSEQ"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[GCNSEQ]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[GCNSEQ]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[Color]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="Color"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Color]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[Color]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[FileProcessed]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="FileProcessed"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[FileProcessed]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[FileProcessed]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[RowCreatedDate]"
                          cachedDataType="dbTimeStamp"
                          cachedName="RowCreatedDate"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[RowCreatedDate]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[RowCreatedDate]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[RowID]"
                          dataType="i4"
                          name="RowID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[FileRowID]"
                          dataType="i4"
                          name="FileRowID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[DateKey]"
                          dataType="i4"
                          name="DateKey" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[CAHFileType]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="CAHFileType" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[CIN]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="CIN" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Description]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="Description" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Size]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="Size" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[AAPSell]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="AAPSell" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Supplier]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="Supplier" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[BrandName]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="BrandName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Form]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="Form" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[NDCUPC]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="NDCUPC" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[DPNum]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="DPNum" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[UOM]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="UOM" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[PricePerUnit]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="PricePerUnit" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[GPIID]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="GPIID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[GCN]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="GCN" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[GCNSEQ]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="GCNSEQ" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Color]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="Color" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[FileProcessed]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="FileProcessed" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[CorrectedNDCUPC]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="CorrectedNDCUPC" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[RowCreatedDate]"
                          dataType="dbTimeStamp"
                          name="RowCreatedDate" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Load Raw File\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="10">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public CAHOutBuffer CAHOutBuffer;

    public ErrorOutBuffer ErrorOutBuffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != CAHOutBuffer)
        {
            CAHOutBuffer.SetEndOfRowset();
            CAHOutBuffer = null;
        }

        if (null != ErrorOutBuffer)
        {
            ErrorOutBuffer.SetEndOfRowset();
            ErrorOutBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"CAHOut"))
            {
                CAHOutBuffer = new CAHOutBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"ErrorOut"))
            {
                ErrorOutBuffer = new ErrorOutBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public Int32 varDateKey
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["varDateKey"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String varStagingFile
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["varStagingFile"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.IO;
using System.Text.RegularExpressions;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    enum col
    {
        CIN = 0,
        Description,
        Size,
        AAPSell,
        Supplier,
        BrandName,
        Form,
        NDCUPC,
        DPNum,
        UOM,
        PricePerUnit,
        GPIID,
        GCN,
        GCNSEQ,
        Color,

        MaxCols
    };


    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    private string left(string inString, int inInt)
    {
        inString = inString.Trim();

        if (inInt > inString.Length)
            inInt = inString.Length;

        return inString.Substring(0, inInt);
    }

    private void WriteError(DateTime dt, string fn, Int32 rc, string ErrRow, string ErrDesc)
    {

        ErrorOutBuffer.AddRow();
        ErrorOutBuffer.ErrorDateTime = dt;
        ErrorOutBuffer.FQNFileName = fn;
        ErrorOutBuffer.FileErrorRowNumber = rc;
        ErrorOutBuffer.ErrorData = ErrRow;
        ErrorOutBuffer.ErrorDescription = ErrDesc;

    }

    private bool NonPrintableChars(string inp)
    {
        //Regex reg = new Regex("[^A-Za-z0-9_]");
        Regex reg = new Regex("[\x00-\x1f]");
        return (reg.IsMatch(inp));
    }


    public override void CreateNewOutputRows()
    {
        string inpFileNameAndPath = Variables.varStagingFile.ToString();
        int intDateKey = Variables.varDateKey;
        string inp;
        string[] x;
        char[] delimiterChars = { ',' };
        int MinCols = ((int)col.MaxCols) - 1;
        Int32 RowCount = -1;
        Int32 FileRowID = 0;
        string strfiledir;

        strfiledir = inpFileNameAndPath.ToString();

        using (StreamReader sr = new StreamReader(inpFileNameAndPath))
        {
            while ((inp = sr.ReadLine()) != null)

                try
                {

                    {
                        RowCount++;
                        FileRowID++;

                        ////Replace any commas inside double quotes with a semicolon  
                        inp = Regex.Replace(inp, @",(?=[^""]*""(?:[^""]*""[^""]*"")*[^""]*$)", ";").ToString();

                        inp = inp.Replace(",", ";");

                        //Strip any double quotes. Replace double white spaces or greater with single white space, and trim leading and trailing white spaces   
                        inp = inp.Replace("\"", "").Replace("  ", " ").Replace("   ", " ").Trim().ToString();

                        // Split the inp into the array;
                        x = inp.Split(delimiterChars);

                        // Check for errors.
                        // Non-printable characters
                        //if (NonPrintableChars(inp.Replace("\t", "")) == true)
                        //{
                        //    DateTime ErrorFileDate = DateTime.Now;

                        //    WriteError(ErrorFileDate, inpFileNameAndPath, RowCount, inp, "Nonprintable data found in the row.");
                        //    continue;
                        //}


                        // Too few columns
                        if (x.GetLength(0) < MinCols)
                        {
                            DateTime ErrorFileDate = DateTime.Now;

                            WriteError(ErrorFileDate, inpFileNameAndPath, RowCount, inp, "Not enough columns in row");
                            continue;
                        }

                        //int DateKey = int.Parse(DateTime.Now.ToString("yyyyMMdd"));

                        {
                            //This will skip over the column name row
                            if (RowCount > 0)
                            {

                                // Map this to our output variables.
                                CAHOutBuffer.AddRow();

                                CAHOutBuffer.FileRowID = FileRowID;
                                CAHOutBuffer.DateKey = intDateKey;
                                CAHOutBuffer.CIN = left(x[(int)col.CIN].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                                CAHOutBuffer.Description = left(x[(int)col.Description].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                                CAHOutBuffer.Size = left(x[(int)col.Size].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                                CAHOutBuffer.AAPSell = left(x[(int)col.AAPSell].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                                CAHOutBuffer.Supplier = left(x[(int)col.Supplier].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                                CAHOutBuffer.BrandName = left(x[(int)col.BrandName].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                                CAHOutBuffer.Form = left(x[(int)col.Form].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                                CAHOutBuffer.NDCUPC = left(x[(int)col.NDCUPC].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                                CAHOutBuffer.DPNum = left(x[(int)col.DPNum].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                                CAHOutBuffer.UOM = left(x[(int)col.UOM].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                                CAHOutBuffer.PricePerUnit = left(x[(int)col.PricePerUnit].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                                CAHOutBuffer.GPIID = left(x[(int)col.GPIID].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                                CAHOutBuffer.GCN = left(x[(int)col.GCN].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                                CAHOutBuffer.GCNSEQ = left(x[(int)col.GCNSEQ].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                                CAHOutBuffer.Color = left(x[(int)col.Color].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                                CAHOutBuffer.FileProcessed = inpFileNameAndPath.ToString();
                                CAHOutBuffer.RowCreatedDate = DateTime.Now;

                            }

                        }
                    }

                }

                catch (Exception ex)
                {

                    DateTime ErrorFileDate = DateTime.Now;

                    WriteError(ErrorFileDate, inpFileNameAndPath, FileRowID, inp, ex.ToString());
                    continue;


                }
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class CAHOutBuffer: ScriptBuffer

{
    public CAHOutBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 FileRowID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool FileRowID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 DateKey
    {
        set
        {
            this[1] = value;
        }
    }
    public bool DateKey_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CIN
    {
        set
        {
            this[2] = value;
        }
    }
    public bool CIN_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Description
    {
        set
        {
            this[3] = value;
        }
    }
    public bool Description_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Size
    {
        set
        {
            this[4] = value;
        }
    }
    public bool Size_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String AAPSell
    {
        set
        {
            this[5] = value;
        }
    }
    public bool AAPSell_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Supplier
    {
        set
        {
            this[6] = value;
        }
    }
    public bool Supplier_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String BrandName
    {
        set
        {
            this[7] = value;
        }
    }
    public bool BrandName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Form
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Form_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String NDCUPC
    {
        set
        {
            this[9] = value;
        }
    }
    public bool NDCUPC_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String DPNum
    {
        set
        {
            this[10] = value;
        }
    }
    public bool DPNum_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String UOM
    {
        set
        {
            this[11] = value;
        }
    }
    public bool UOM_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String PricePerUnit
    {
        set
        {
            this[12] = value;
        }
    }
    public bool PricePerUnit_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String GPIID
    {
        set
        {
            this[13] = value;
        }
    }
    public bool GPIID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String GCN
    {
        set
        {
            this[14] = value;
        }
    }
    public bool GCN_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String GCNSEQ
    {
        set
        {
            this[15] = value;
        }
    }
    public bool GCNSEQ_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Color
    {
        set
        {
            this[16] = value;
        }
    }
    public bool Color_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FileProcessed
    {
        set
        {
            this[17] = value;
        }
    }
    public bool FileProcessed_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(17);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime RowCreatedDate
    {
        set
        {
            this[18] = value;
        }
    }
    public bool RowCreatedDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(18);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class ErrorOutBuffer: ScriptBuffer

{
    public ErrorOutBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public DateTime ErrorDateTime
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ErrorDateTime_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FQNFileName
    {
        set
        {
            this[1] = value;
        }
    }
    public bool FQNFileName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 FileErrorRowNumber
    {
        set
        {
            this[2] = value;
        }
    }
    public bool FileErrorRowNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ErrorData
    {
        set
        {
            this[3] = value;
        }
    }
    public bool ErrorData_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ErrorDescription
    {
        set
        {
            this[4] = value;
        }
    }
    public bool ErrorDescription_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime RowCreatedDate
    {
        set
        {
            this[5] = value;
        }
    }
    public bool RowCreatedDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_80462981704c4a6f979dc182270091d0.Properties.Settings.get_Default():SC_80462981704c4a6f979dc182270091d0.Properties.Sett" +
    "ings")]

namespace SC_80462981704c4a6f979dc182270091d0.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_80462981704c4a6f979dc182270091d0.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{532A383E-DAC8-486C-8A7D-B2CE1D2D92BA}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_80462981704c4a6f979dc182270091d0</RootNamespace>
    <AssemblyName>SC_80462981704c4a6f979dc182270091d0</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_80462981704c4a6f979dc182270091d0</msb:CodeName>
		<msb:DisplayName>SC_80462981704c4a6f979dc182270091d0</msb:DisplayName>
		<msb:ProjectId>{CB5F2773-28B5-4F43-A768-4EA18635EF15}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_80462981704c4a6f979dc182270091d0.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_80462981704c4a6f979dc182270091d0")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_80462981704c4a6f979dc182270091d0")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_80462981704c4a6f979dc182270091d0.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_80462981704c4a6f979dc182270091d0.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_80462981704c4a6f979dc182270091d0.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_80462981704c4a6f979dc182270091d0.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_80462981704c4a6f979dc182270091d0.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_80462981704c4a6f979dc182270091d0.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAOx73F8AAAAAAAAAAOAAIiALATAAACwAAAAIAAAAAAAANkoA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAORJAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAPCoAAAAgAAAALAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAuAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAANAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAY
SgAAAAAAAEgAAAACAAUADCsAACAeAAABAAAAAAAAACxJAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACiqKA28SAAAKEAEEA28TAAAKMQgD
bxMAAAoQAgMWBG8UAAAKKgATMAIASgAAAAAAAAACewQAAARvPwAABgJ7BAAABANvMwAABgJ7BAAA
BARvNQAABgJ7BAAABAVvNwAABgJ7BAAABA4EbzkAAAYCewQAAAQOBW87AAAGKkZyAQAAcHMVAAAK
A28WAAAKKhswBgBFBQAAAQAAEQJ7AgAABG9KAAAGbxcAAAoKAnsCAAAEb0kAAAYLF40gAAABJRYf
LJ0TBB8OEwUVEwYWEwcGbxcAAAomBnMYAAAKEwg44AQAAAARBhdYEwYRBxdYEwcIcg0AAHByUwAA
cCgZAAAKbxcAAAoMCHJXAABwclMAAHBvGgAACgwIclsAAHByXwAAcG8aAAAKcmEAAHByZwAAcG8a
AAAKcmsAAHByZwAAcG8aAAAKbxIAAApvFwAACgwIEQRvGwAACg0JFm8cAAAKEQUvHSgdAAAKEwkC
EQkGEQYIcnMAAHAoBAAABt1CBAAAEQYWPhoEAAACewMAAARvLwAABgJ7AwAABBEHbwkAAAYCewMA
AAQHbwsAAAYCewMAAAQCCRaacmEAAHByZwAAcG8aAAAKcmsAAHByZwAAcG8aAAAKbxIAAApvFwAA
CiD0AQAAKAMAAAZvDQAABgJ7AwAABAIJF5pyYQAAcHJnAABwbxoAAApyawAAcHJnAABwbxoAAApv
EgAACm8XAAAKIPQBAAAoAwAABm8PAAAGAnsDAAAEAgkYmnJhAABwcmcAAHBvGgAACnJrAABwcmcA
AHBvGgAACm8SAAAKbxcAAAog9AEAACgDAAAGbxEAAAYCewMAAAQCCRmacmEAAHByZwAAcG8aAAAK
cmsAAHByZwAAcG8aAAAKbxIAAApvFwAACiD0AQAAKAMAAAZvEwAABgJ7AwAABAIJGppyYQAAcHJn
AABwbxoAAApyawAAcHJnAABwbxoAAApvEgAACm8XAAAKIPQBAAAoAwAABm8VAAAGAnsDAAAEAgkb
mnJhAABwcmcAAHBvGgAACnJrAABwcmcAAHBvGgAACm8SAAAKbxcAAAog9AEAACgDAAAGbxcAAAYC
ewMAAAQCCRyacmEAAHByZwAAcG8aAAAKcmsAAHByZwAAcG8aAAAKbxIAAApvFwAACiD0AQAAKAMA
AAZvGQAABgJ7AwAABAIJHZpyYQAAcHJnAABwbxoAAApyawAAcHJnAABwbxoAAApvEgAACm8XAAAK
IPQBAAAoAwAABm8bAAAGAnsDAAAEAgkemnJhAABwcmcAAHBvGgAACnJrAABwcmcAAHBvGgAACm8S
AAAKbxcAAAog9AEAACgDAAAGbx0AAAYCewMAAAQCCR8JmnJhAABwcmcAAHBvGgAACnJrAABwcmcA
AHBvGgAACm8SAAAKbxcAAAog9AEAACgDAAAGbx8AAAYCewMAAAQCCR8KmnJhAABwcmcAAHBvGgAA
CnJrAABwcmcAAHBvGgAACm8SAAAKbxcAAAog9AEAACgDAAAGbyEAAAYCewMAAAQCCR8LmnJhAABw
cmcAAHBvGgAACnJrAABwcmcAAHBvGgAACm8SAAAKbxcAAAog9AEAACgDAAAGbyMAAAYCewMAAAQC
CR8MmnJhAABwcmcAAHBvGgAACnJrAABwcmcAAHBvGgAACm8SAAAKbxcAAAog9AEAACgDAAAGbyUA
AAYCewMAAAQCCR8NmnJhAABwcmcAAHBvGgAACnJrAABwcmcAAHBvGgAACm8SAAAKbxcAAAog9AEA
ACgDAAAGbycAAAYCewMAAAQCCR8OmnJhAABwcmcAAHBvGgAACnJrAABwcmcAAHBvGgAACm8SAAAK
bxcAAAog9AEAACgDAAAGbykAAAYCewMAAAQGbxcAAApvKwAABgJ7AwAABCgdAAAKby0AAAbeHhMK
KB0AAAoTCwIRCwYRBwgRCm8XAAAKKAQAAAbeABEIbx4AAAolDDoS+///3gwRCCwHEQhvHwAACtwq
AAAAQTQAAAAAAABJAAAAwQQAAAoFAAAeAAAAEAAAAQIAAABDAAAA9QQAADgFAAAMAAAAAAAAAB4C
KEIAAAYqKgIDBAUoIAAACio6AhYDjCQAAAEoIQAACipaAywIAhYoIgAACipypwAAcHMjAAAKejoC
FwOMJAAAASghAAAKKloDLAgCFygiAAAKKnKnAABwcyMAAAp6JgIYAyghAAAKKloDLAgCGCgiAAAK
KnKnAABwcyMAAAp6JgIZAyghAAAKKloDLAgCGSgiAAAKKnKnAABwcyMAAAp6JgIaAyghAAAKKloD
LAgCGigiAAAKKnKnAABwcyMAAAp6JgIbAyghAAAKKloDLAgCGygiAAAKKnKnAABwcyMAAAp6JgIc
AyghAAAKKloDLAgCHCgiAAAKKnKnAABwcyMAAAp6JgIdAyghAAAKKloDLAgCHSgiAAAKKnKnAABw
cyMAAAp6JgIeAyghAAAKKloDLAgCHigiAAAKKnKnAABwcyMAAAp6KgIfCQMoIQAACipeAywJAh8J
KCIAAAoqcqcAAHBzIwAACnoqAh8KAyghAAAKKl4DLAkCHwooIgAACipypwAAcHMjAAAKeioCHwsD
KCEAAAoqXgMsCQIfCygiAAAKKnKnAABwcyMAAAp6KgIfDAMoIQAACipeAywJAh8MKCIAAAoqcqcA
AHBzIwAACnoqAh8NAyghAAAKKl4DLAkCHw0oIgAACipypwAAcHMjAAAKeioCHw4DKCEAAAoqXgMs
CQIfDigiAAAKKnKnAABwcyMAAAp6KgIfDwMoIQAACipeAywJAh8PKCIAAAoqcqcAAHBzIwAACnoq
Ah8QAyghAAAKKl4DLAkCHxAoIgAACipypwAAcHMjAAAKeioCHxEDKCEAAAoqXgMsCQIfESgiAAAK
KnKnAABwcyMAAAp6PgIfEgOMDgAAASghAAAKKl4DLAkCHxIoIgAACipypwAAcHMjAAAKeh4CKCQA
AAoqHgIoJQAACioeAigmAAAKKjoCFgOMDgAAASghAAAKKiYCFwMoIQAACio6AhgDjCQAAAEoIQAA
Cio6AhsDjA4AAAEoIQAACip+AignAAAKAgJzRwAABn0BAAAEAgJzSAAABn0CAAAEKgYq1gJ7AwAA
BCwSAnsDAAAEbzAAAAYCFH0DAAAEAnsEAAAELBICewQAAARvQAAABgIUfQQAAAQqEzAFAHMAAAAC
AAARFgorWAQGlA4EckQBAHAoKAAACjMZAgUGmgIEBpQoKQAACg4EcwgAAAZ9AwAABAQGlA4EclIB
AHAoKAAACjMZAgUGmgIEBpQoKQAACg4EczIAAAZ9BAAABAYXWAoGAzKkAm9GAAAGAm9DAAAGAihE
AAAGKjoCKCoAAAoCA30FAAAEKjoCKCoAAAoCA30GAAAEKpYCewYAAARvKwAACnJkAQBwbywAAAoo
LQAACm8uAAAKpSQAAAEqlgJ7BgAABG8rAAAKcnoBAHBvLAAACigtAAAKby4AAAp0HgAAASoeAigq
AAAKKq5+BwAABC0ecpgBAHDQCAAAAigvAAAKbzAAAApzMQAACoAHAAAEfgcAAAQqGn4IAAAEKh4C
gAgAAAQqGn4JAAAEKh4CKDIAAAoqLnNQAAAGgAkAAAQqAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMw
MzE5AAAAAAUAbAAAANgNAAAjfgAARA4AAFgLAAAjU3RyaW5ncwAAAACcGQAADAIAACNVUwCoGwAA
EAAAACNHVUlEAAAAuBsAAGgCAAAjQmxvYgAAAAAAAAACAAABVx2iAQkDAAAA+gEzABYAAAEAAAAs
AAAACgAAABoAAABRAAAARwAAADIAAAAQAAAAEAAAAAIAAAAFAAAANwAAADgAAAABAAAABQAAAAEA
AAABAAAAAABwBAEAAAAAAAYALwOjCAYAwwOjCAYAewKQCA8AFwkAAAYAqAITBwYAEgMTBwYA8wIT
BwYAqgMTBwYATwMTBwYAaAMTBwYAvwITBwYA2gIHBAoAgwOtAQYAmwGrBgYAywe0AAYANQerBgYA
ygarBgoA8getAQ4A4wetAQoAcAetAQoAbQqtAQYACAqrBgYAXgKQCAYAHwjDCAYAZAf+BhIALgJa
BBIAjwJaBBIA+wHpBgYAQwKjCAYALASrBhIAIQuhCQYArwerBgYAJwurBgYA2Ae0AAYAMQGrBgYA
XgCrBgYAJQerBhYAEQA8CBYAAQA8CFcA2woAABYAIgA8CAYAzgGrBgYAPQGrBgYATAsTBwAAAABk
AAAAAAABAAEAAQAQAN4GAAAUAAEAAQABABAA/wcAAEkAAQAIAAEAEAAMCAAASQABADIAAQAQAE8K
AABVAAEAQgABABAAwAkAAFkABQBHAAEAEABhCQAAWQAGAEgAAAAQAMoIJglZAAcASwAAARAAkAkm
CXEACQBPAAMBAACVBgAARQAKAFIABgDACRkBBgBhCR0BBgD/ByEBBgAMCCUBAQBdCikBAQBdCikB
EQDPBi0BEQDrATEBEQAhATUBBgbJADkBVoCwADwBVoBYBzwBVoACBDwBVoCcBDwBVoAzCDwBVoB4
ATwBVoC7BjwBVoBxADwBVoDEBjwBVoCgADwBVoAwCjwBVoB8ADwBVoCoADwBVoDCADwBVoBoCDwB
VoCZCTwBUCAAAAAAxgDhAwYAAQBYIAAAAADGAOwDBgABAGAgAAAAAIEAIQpAAQEAhCAAAAAAgQBu
CEYBAwDaIAAAAACBAMwJKQAIAOwgAAAAAMYA9AkGAAkAdCYAAAAAhhh5CAYACQB8JgAAAACGGHkI
YQAJAIcmAAAAAIYIjgABAAwAliYAAAAAhgjHBFABDQCtJgAAAACGCC0LAQAOALwmAAAAAIYIegZQ
AQ8A0yYAAAAAhgisABAAEADdJgAAAACGCPoEUAERAPQmAAAAAIYIPwcQABIA/iYAAAAAhgjsBVAB
EwAVJwAAAACGCP4DEAAUAB8nAAAAAIYIqAVQARUANicAAAAAhgiYBBAAFgBAJwAAAACGCLgFUAEX
AFcnAAAAAIYILwgQABgAYScAAAAAhgg9BlABGQB4JwAAAACGCHQBEAAaAIInAAAAAIYISQVQARsA
mScAAAAAhgi3BhAAHACjJwAAAACGCMsFUAEdALonAAAAAIYIbQAQAB4AxScAAAAAhgikBFABHwDd
JwAAAACGCMAGEAAgAOgnAAAAAIYI2wVQASEAACgAAAAAhgicABAAIgALKAAAAACGCNwEUAEjACMo
AAAAAIYILAoQACQALigAAAAAhghiBlABJQBGKAAAAACGCHgAEAAmAFEoAAAAAIYItgRQAScAaSgA
AAAAhgikABAAKAB0KAAAAACGCOsEUAEpAIwoAAAAAIYIvgAQACoAlygAAAAAhggJBVABKwCvKAAA
AACGCGQIEAAsALooAAAAAIYIUQZQAS0A0igAAAAAhggHARAALgDdKAAAAACGCDAFUAEvAPUoAAAA
AIYIGwJVATAABSkAAAAAhgiOBVABMQAdKQAAAACGABMLBgAyACUpAAAAAIYAEgoGADIALSkAAAAA
hgAVCnEAMgB8JgAAAACGGHkIYQAyADUpAAAAAIYIkgFVATUAliYAAAAAhgh1BVABNgBEKQAAAACG
CIIBEAA3ALwmAAAAAIYIXgVQATgATikAAAAAhgi0BwEAOQDdJgAAAACGCB8GUAE6APQmAAAAAIYI
0QAQADsA/iYAAAAAhggbBVABPAAVJwAAAACGCE8HEAA9AB8nAAAAAIYIAwZQAT4AXSkAAAAAhggb
AlUBPwBAJwAAAACGCI4FUAFAAB0pAAAAAIYAEwsGAEEAJSkAAAAAhgASCgYAQQAtKQAAAACGABUK
cQBBAGwpAAAAAIYYeQgGAEEAjCkAAAAAxgHmCQYAQQCOKQAAAACBAPMABgBBAMQpAAAAAMYAuwpb
AUEAjCkAAAAAxgH0CQYARQBDKgAAAACGGHkIZwFFAFIqAAAAAIYYeQhnAUYAYSoAAAAAhgg5Cx8A
RwCHKgAAAACGCGEBGwBHAK0qAAAAAIMYeQgGAEcAtSoAAAAAkwgbCG0BRwDhKgAAAACTCNMBcgFH
AOgqAAAAAJMI3wF3AUcA8CoAAAAAlgg9Cn0BSAD3KgAAAACGGHkIBgBIAP8qAAAAAJEYfwiCAUgA
AAABACEEAAACAEkKAAABAA8KAAACANsGAAADAOgAAAAEABoLAAAFAOsAAAABAKsHAAABABQIAAAC
AGsJAAADAH4HAAABAPgDAAABAPgDAAABAPgDAAABAPgDAAABAPgDAAABAPgDAAABAPgDAAABAPgD
AAABAPgDAAABAPgDAAABAPgDAAABAPgDAAABAPgDAAABAPgDAAABAPgDAAABAPgDAAABAPgDAAAB
APgDAAABAPgDAAABAPgDAAABAPgDAAABAPgDAAABAPgDAAABAPgDAAABAPgDAAABAPgDAAABAPgD
AAABAPgDAAABAPgDAAABAPgDAAABAPgDAAABAPgDAAABAPgDAAABAPgDAAABAPgDAAABAPgDAAAB
APgDAAABAPgDAAABABQIAAACAGsJAAADAH4HAAABAPgDAAABAPgDAAABAPgDAAABAPgDAAABAPgD
AAABAPgDAAABAPgDAAABAPgDAAABAPgDAAABAPgDAAABAPgDAAABAPgDAAABAOwJAAACAIYIAAAD
AN4JAAAEAH4HAAABAHMKAAABAHMKAAABAPgDCQB5CAEAEQB5CAYAGQB5CAoAKQB5CBAAMQB5CBAA
OQB5CBAAQQB5CBAASQB5CBAAUQB5CBAAWQB5CBAAYQB5CBAAaQB5CAYAuQB5CAYA2QB5CBUA6QB5
CAYAqQDhAwYAqQDsAwYA8QCyBhsA8QBFBB8A8QAzBCMA+QB5CBAA+QA9BCkAsQAqBBsAeQB5CBAA
+QAZAUMA8QAZAUoA8QAmClAACQFQBFcAcQALC1wAEQGkARsAGQETAgYAkQB5CGEAkQCiBmsAkQCN
BgEAKQF5CBAAkQATCwYAkQASCgYAkQAVCnEAqQB5CAYAqQCCAHkAqQB/CYAAsQB5CAYAqQBVCYYA
MQGZBowAqQD2CpMAOQHHCpkAUQFPAaAAUQFIC6kAwQB5CK8A4QB5CAYACAAsAMkACAAwAM4ACAA0
ANMACAA4ANgACAA8AN0ACABAAOIACABEAOcACABIAOwACABMAPEACABQAPYACABUAPsACABYAAAB
CABcAAUBCABgAAoBCABkAA8BCABoABQBLgALAKYBLgATAK8BLgAbAM4BLgAjANcBLgArAAACLgAz
AAACLgA7AAACLgBDANcBLgBLAAYCLgBTAAACLgBbAB0CQwBjAM4AAwFrAM4AIQF7AM4AqQZzAM4B
yQZzAM4BLgB1AAMAAQAEACcABwAzAAgANQAJADcAAACSAIYBAADLBIoBAABAC4YBAAB+BooBAACw
AI4BAAD+BIoBAABYB44BAAAMBooBAAACBI4BAACsBYoBAACcBI4BAAC8BYoBAAAzCI4BAABBBooB
AAB4AY4BAABNBYoBAAC7Bo4BAADPBYoBAABxAI4BAACoBIoBAADEBo4BAADfBYoBAACgAI4BAADg
BIoBAAAwCo4BAABmBooBAAB8AI4BAAC6BIoBAACoAI4BAADvBIoBAADCAI4BAAANBYoBAABoCI4B
AABVBooBAAALAY4BAAA0BYoBAAAfApIBAACSBYoBAACWAZIBAAB5BYoBAACGAY4BAABiBYoBAAC4
B4YBAAAjBooBAADVAI4BAAAfBYoBAABTB44BAAAHBooBAAAfApIBAACSBYoBAAA9C4YBAABlAY4B
AAAfCJcBAADzAZwBAABBCqEBAQAJAAMAAQAKAAUAAQALAAcAAQAMAAkAAQANAAsAAQAOAA0AAQAP
AA8AAQAQABEAAQARABMAAQASABUAAQATABcAAQAUABkAAQAVABsAAQAWAB0AAQAXAB8AAQAYACEA
AQAZACMAAQAaACUAAQAbACcAAQAcACkAAQAdACsAAQAeAC0AAQAfAC8AAQAgADEAAQAhADMAAQAi
ADUAAQAjADcAAQAkADkAAQAlADsAAQAmAD0AAQAnAD8AAQAoAEEAAQApAEMAAQAqAEUAAQArAEcA
AQAsAEkAAQAtAEsAAQAuAE0AAQAzAE8AAQA0AFEAAQA1AFMAAQA2AFUAAQA3AFcAAQA4AFkAAQA5
AFsAAQA6AF0AAQA7AF8AAQA8AGEAAQA9AGMAAQA+AGUAAgBJAGcAAgBKAGkAAgBMAGsAAgBNAG0A
AQBOAG0AAgBPAG8ABIAAAAEAAAAAAAAAAAAAAAAAOgAAAAQAAAAAAAAAAAAAALcA3wAAAAAADQAA
AAAAAAAAAAAAwAB9CgAAAAANAAAAAAAAAAAAAADAAJoKAAAAAAQAAAAAAAAAAAAAALcAqwYAAAAA
DQAAAAAAAAAAAAAAwACIBwAAAAAAAAAAAQAAANQIAAAKAAIAAAAASURUU1ZhcmlhYmxlMTAwAElE
VFNWYXJpYWJsZXMxMDAASURUU0V2YWx1YXRvckNvbnRleHQxMDAAU0NfODA0NjI5ODE3MDRjNGE2
Zjk3OWRjMTgyMjcwMDkxZDAASW50MzIAPE1vZHVsZT4Ac2V0X05EQ1VQQwBzZXRfR1BJSUQAR2V0
T3V0cHV0SUQAc2V0X0ZpbGVSb3dJRABzZXRfVU9NAHNldF9HQ04Ac2V0X0NJTgBTeXN0ZW0uSU8A
c2V0X0dDTlNFUQB2YWx1ZV9fAHNldF9FcnJvckRhdGEAbXNjb3JsaWIAcmMARXJyRGVzYwBNYXJr
T3V0cHV0c0ZpbmlzaGVkAHNldF9GaWxlUHJvY2Vzc2VkAFJlcGxhY2UAZGVmYXVsdEluc3RhbmNl
AElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAGdldF92YXJT
dGFnaW5nRmlsZQBzZXRfQnJhbmROYW1lAHNldF9GUU5GaWxlTmFtZQBzZXRfRXJyb3JEYXRlVGlt
ZQBSZWFkTGluZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAGdldF9DdWx0
dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBE
aXNwb3NlAHNldF9Sb3dDcmVhdGVkRGF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdl
bmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVB
dHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUA
QXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2Vt
Ymx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENv
bXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFz
c2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0
cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJp
YnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVlAHNldF9TaXplAFN5c3RlbS5SdW50aW1l
LlZlcnNpb25pbmcAaW5TdHJpbmcAVG9TdHJpbmcAU3Vic3RyaW5nAElzTWF0Y2gAZ2V0X0xlbmd0
aABHZXRMZW5ndGgAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDXzgwNDYyOTgxNzA0YzRhNmY5Nzlk
YzE4MjI3MDA5MWQwLmRsbABzZXRfQUFQU2VsbABzZXRfTkRDVVBDX0lzTnVsbABzZXRfR1BJSURf
SXNOdWxsAHNldF9GaWxlUm93SURfSXNOdWxsAHNldF9VT01fSXNOdWxsAHNldF9HQ05fSXNOdWxs
AHNldF9DSU5fSXNOdWxsAHNldF9HQ05TRVFfSXNOdWxsAHNldF9FcnJvckRhdGFfSXNOdWxsAHNl
dF9GaWxlUHJvY2Vzc2VkX0lzTnVsbABzZXRfQnJhbmROYW1lX0lzTnVsbABzZXRfRlFORmlsZU5h
bWVfSXNOdWxsAHNldF9FcnJvckRhdGVUaW1lX0lzTnVsbABzZXRfUm93Q3JlYXRlZERhdGVfSXNO
dWxsAHNldF9TaXplX0lzTnVsbABzZXRfQUFQU2VsbF9Jc051bGwAc2V0X0Zvcm1fSXNOdWxsAHNl
dF9EUE51bV9Jc051bGwAc2V0X0Rlc2NyaXB0aW9uX0lzTnVsbABzZXRfRXJyb3JEZXNjcmlwdGlv
bl9Jc051bGwAc2V0X0ZpbGVFcnJvclJvd051bWJlcl9Jc051bGwAc2V0X1N1cHBsaWVyX0lzTnVs
bABzZXRfQ29sb3JfSXNOdWxsAHNldF9QcmljZVBlclVuaXRfSXNOdWxsAHNldF9EYXRlS2V5X0lz
TnVsbABTZXROdWxsAGNvbABnZXRfSXRlbQBzZXRfSXRlbQBTeXN0ZW0AVHJpbQBzZXRfRm9ybQBz
ZXRfRFBOdW0ARW51bQByZXNvdXJjZU1hbgBmbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0
aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEludmFsaWRPcGVyYXRp
b25FeGNlcHRpb24Ac2V0X0Rlc2NyaXB0aW9uAHNldF9FcnJvckRlc2NyaXB0aW9uAEN1bHR1cmVJ
bmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVudGlt
ZVdyYXAAaW5wAENoYXIAc2V0X0ZpbGVFcnJvclJvd051bWJlcgBTdHJlYW1SZWFkZXIAVGV4dFJl
YWRlcgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAQ0FIT3V0QnVmZmVyAEVycm9yT3V0QnVm
ZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIAc2V0X1N1cHBsaWVyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlJ1bnRpbWUuV3JhcHBlcgBzZXRfQ29sb3IAV3JpdGVFcnJvcgAuY3RvcgAuY2N0b3IAT3V0
cHV0SURzAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2Vz
AFN5c3RlbS5SZXNvdXJjZXMAU0NfODA0NjI5ODE3MDRjNGE2Zjk3OWRjMTgyMjcwMDkxZDAuUHJv
cGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDXzgwNDYyOTgxNzA0
YzRhNmY5NzlkYzE4MjI3MDA5MWQwLlByb3BlcnRpZXMAZ2V0X1JlYWRPbmx5VmFyaWFibGVzAEJ1
ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBNYXhDb2xzAFN5c3Rl
bS5UZXh0LlJlZ3VsYXJFeHByZXNzaW9ucwBDb25uZWN0aW9ucwBOb25QcmludGFibGVDaGFycwBC
dWZmZXJzAEZpbmlzaE91dHB1dHMAQ3JlYXRlTmV3T3V0cHV0Um93cwBPYmplY3QAZHQAU2V0RW5k
T2ZSb3dzZXQAbGVmdABTcGxpdABzZXRfUHJpY2VQZXJVbml0AGdldF9EZWZhdWx0AGluSW50AFVz
ZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3Fs
U2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AFByaW1lT3V0
cHV0AEdldFZhbHVlV2l0aENvbnRleHQAU2NyaXB0Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0X0V2
YWx1YXRvckNvbnRleHQAZ2V0X05vdwBBZGRSb3cARXJyUm93AFJlZ2V4AEFycmF5AHNldF9EYXRl
S2V5AGdldF92YXJEYXRlS2V5AGdldF9Bc3NlbWJseQAAAAAAC1sAAAAtAB8AXQABRSwAKAA/AD0A
WwBeACIAXQAqACIAKAA/ADoAWwBeACIAXQAqACIAWwBeACIAXQAqACIAKQAqAFsAXgAiAF0AKgAk
ACkAAAM7AAADLAAAAyIAAAEABSAAIAAAAyAAAAcgACAAIAAAM04AbwB0ACAAZQBuAG8AdQBnAGgA
IABjAG8AbAB1AG0AbgBzACAAaQBuACAAcgBvAHcAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUA
cgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABB
AHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAA
aQBuAHMAdABlAGEAZAAuAAANQwBBAEgATwB1AHQAABFFAHIAcgBvAHIATwB1AHQAABV2AGEAcgBE
AGEAdABlAEsAZQB5AAAddgBhAHIAUwB0AGEAZwBpAG4AZwBGAGkAbABlAABxUwBDAF8AOAAwADQA
NgAyADkAOAAxADcAMAA0AGMANABhADYAZgA5ADcAOQBkAGMAMQA4ADIAMgA3ADAAMAA5ADEAZAAw
AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAACuDmhMavREulPo
5ShWM9AABCABAQgDIAABBSABARERBCABAQ4FIAEBEWkDIAAOAyAACAUgAg4ICAQgAQIOFAcMDggO
HQ4dAwgICBI9ETkSQRE5BgADDg4ODgUgAg4ODgYgAR0OHQMEIAEICAQAABE5CSADARJNHQgSUQUg
AgEIHAMgAAIDBwEIBgACCBJRDgUgAR0ICAUgABKAmQYgARKAnRwFAAASgKEGIAEcEoClCAABEoCp
EYCtBSAAEoCxByACAQ4SgLEIt3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAABAIAAAAEAwAAAAQE
AAAABAUAAAAEBgAAAAQHAAAABAgAAAAECQAAAAQKAAAABAsAAAAEDAAAAAQNAAAABA4AAAAEDwAA
AAMGEhgDBhIcAwYSDAMGEhADBhJVAwYSYQMGEmUDBhIkAgYIAwYRKAUgAg4OCAkgBQEROQ4IDg4E
IAEBAgUgAQEROQsgBAEIHQgdEk0SUQUgAQESVQQAABJhBAAAEmUFAAEBEmUEAAASJAMAAAEDKAAI
AygAAgMoAA4EKAAROQQIABJhBAgAEmUECAASJAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2Vw
dGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfODA0NjI5ODE3MDRjNGE2Zjk3OWRjMTgyMjcwMDkx
ZDAAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNwAARwEAGi5ORVRGcmFtZXdvcmssVmVyc2lv
bj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0AAAAtAAAAM7K
774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVy
c2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkz
NGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQ
QURQtAAAAAxKAAAAAAAAAAAAACZKAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYSgAAAAAAAAAA
AAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAA
gAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADsAwAA
AAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAA
AAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYA
aQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAETAMA
AAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAwAAAA
GgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAA
AAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwA4ADAA
NAA2ADIAOQA4ADEANwAwADQAYwA0AGEANgBmADkANwA5AGQAYwAxADgAMgAyADcAMAAwADkAMQBk
ADAAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABwACgA
AQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADgAMAA0ADYAMgA5ADgAMQA3ADAANABj
ADQAYQA2AGYAOQA3ADkAZABjADEAOAAyADIANwAwADAAOQAxAGQAMAAuAGQAbABsAAAASAASAAEA
TABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAy
ADAAMQA3AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgA
AQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AOAAwADQANgAyADkAOAAx
ADcAMAA0AGMANABhADYAZgA5ADcAOQBkAGMAMQA4ADIAMgA3ADAAMAA5ADEAZAAwAC4AZABsAGwA
AABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADgAMAA0ADYAMgA5ADgAMQA3
ADAANABjADQAYQA2AGYAOQA3ADkAZABjADEAOAAyADIANwAwADAAOQAxAGQAMAAAADQACAABAFAA
cgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBl
AG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAODoAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_80462981704c4a6f979dc182270091d0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::varDateKey,User::varStagingFile</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">7363e166f36f573838239c8c5253f13d</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">82a9acff4625e71099dcde672e3de6daa003736a</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut]"
                      hasSideEffects="true"
                      name="CAHOut">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[FileRowID]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[FileRowID]"
                          name="FileRowID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[DateKey]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[DateKey]"
                          name="DateKey" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[CIN]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[CIN]"
                          name="CIN" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[Description]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[Description]"
                          name="Description" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[Size]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[Size]"
                          name="Size" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[AAPSell]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[AAPSell]"
                          name="AAPSell" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[Supplier]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[Supplier]"
                          name="Supplier" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[BrandName]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[BrandName]"
                          name="BrandName" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[Form]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[Form]"
                          name="Form" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[NDCUPC]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[NDCUPC]"
                          name="NDCUPC" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[DPNum]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[DPNum]"
                          name="DPNum" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[UOM]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[UOM]"
                          name="UOM" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[PricePerUnit]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[PricePerUnit]"
                          name="PricePerUnit" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[GPIID]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[GPIID]"
                          name="GPIID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[GCN]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[GCN]"
                          name="GCN" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[GCNSEQ]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[GCNSEQ]"
                          name="GCNSEQ" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[Color]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[Color]"
                          name="Color" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[FileProcessed]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[FileProcessed]"
                          name="FileProcessed" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[RowCreatedDate]"
                          dataType="dbTimeStamp"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut].Columns[RowCreatedDate]"
                          name="RowCreatedDate" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut]"
                      hasSideEffects="true"
                      name="ErrorOut">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[ErrorDateTime]"
                          dataType="dbTimeStamp"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[ErrorDateTime]"
                          name="ErrorDateTime" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[FQNFileName]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[FQNFileName]"
                          name="FQNFileName" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[FileErrorRowNumber]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[FileErrorRowNumber]"
                          name="FileErrorRowNumber" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[ErrorData]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[ErrorData]"
                          name="ErrorData" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[ErrorDescription]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[ErrorDescription]"
                          name="ErrorDescription" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[RowCreatedDate]"
                          dataType="dbTimeStamp"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[RowCreatedDate]"
                          name="RowCreatedDate" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Load Raw File.Paths[CAHOut]"
                  endId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1.Inputs[OLE DB Destination Input]"
                  name="CAHOut"
                  startId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[CAHOut]" />
                <path
                  refId="Package\Foreach Loop Container\Load Raw File.Paths[ErrorOut]"
                  endId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="ErrorOut"
                  startId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Log Raw File"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:DelayValidation="True"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{CFC39F5A-4767-4A32-A4F2-5F9AA6099996}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log Raw File"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; Â© 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{1FC80623-5133-477F-8676-2BFF7C385ABD}"
              SQLTask:SqlStatementSource="&#xA;EXEC [dbo].[usp_FileLog]&#xA;&#xA;&#x9;@FileName = ?&#xA;&#x9;, @Process = 'NADAC'&#xA;&#x9;, @IsRawFileLoaded = 1" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@FileName"
                SQLTask:DtsVariableName="User::varStagingFile"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{8128B163-A236-4BAC-97B0-A7EE1C512629}"
          DTS:From="Package\Foreach Loop Container\Load Raw File"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Loop Container\Log Raw File" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{98A0D18E-196B-4D76-A94D-F87265219A80}"
          DTS:From="Package\Foreach Loop Container\Load Raw File"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach Loop Container\Delete File" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{19E87522-B540-46D1-ABAC-5410887094CD}"
          DTS:ObjectName="{19E87522-B540-46D1-ABAC-5410887094CD}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::varStagingFile" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{CC3E4D9F-CB66-4A40-A2C1-4BD1E5DD8028}"
          DTS:ObjectName="{CC3E4D9F-CB66-4A40-A2C1-4BD1E5DD8028}"
          DTS:ValueIndex="1"
          DTS:VariableName="User::varDateKey" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get File Info"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:DelayValidation="True"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{E7552730-0832-4985-9AEA-092C0C488682}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get File Info"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Get File Info\OLE DB Source"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="OLE DB Source"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">EXEC [usp_GetCAHFormularyConfigInfo_RawFileDataLoad]

	@FileDir = ?</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping">"@FileDir:Input",{62CF06D6-DFCB-4FEC-A722-FEA948FD604A};</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Get File Info\OLE DB Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[AAPDW1.ODSIntake]"
                  connectionManagerRefId="Package.ConnectionManagers[AAPDW1.ODSIntake]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Output].Columns[FilePath]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[FilePath]"
                      length="500"
                      lineageId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Output].Columns[FilePath]"
                      name="FilePath"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Output].Columns[DateKey]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[DateKey]"
                      lineageId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Output].Columns[DateKey]"
                      name="DateKey"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[FilePath]"
                      dataType="wstr"
                      length="500"
                      name="FilePath" />
                    <externalMetadataColumn
                      refId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[DateKey]"
                      dataType="i4"
                      name="DateKey" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[FilePath]"
                      dataType="wstr"
                      length="500"
                      lineageId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[FilePath]"
                      name="FilePath" />
                    <outputColumn
                      refId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[DateKey]"
                      dataType="i4"
                      lineageId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[DateKey]"
                      name="DateKey" />
                    <outputColumn
                      refId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get File Info\Recordset Destination"
              componentClassID="Microsoft.RecordsetDestination"
              contactInfo="Recordset Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates and populates an in-memory ADO recordset that is available outside of the data flow. Scripts and other package elements can use the recordset. For example, use a recordset to store the names of files that will be loaded into the data warehouse."
              name="Recordset Destination">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the recordset."
                  name="VariableName">User::ADORecordSet</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get File Info\Recordset Destination.Inputs[Recordset Destination Input]"
                  hasSideEffects="true"
                  name="Recordset Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get File Info\Recordset Destination.Inputs[Recordset Destination Input].Columns[FilePath]"
                      cachedDataType="wstr"
                      cachedLength="500"
                      cachedName="FilePath"
                      lineageId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Output].Columns[FilePath]" />
                    <inputColumn
                      refId="Package\Get File Info\Recordset Destination.Inputs[Recordset Destination Input].Columns[DateKey]"
                      cachedDataType="i4"
                      cachedName="DateKey"
                      lineageId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Output].Columns[DateKey]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Get File Info.Paths[OLE DB Source Output]"
              endId="Package\Get File Info\Recordset Destination.Inputs[Recordset Destination Input]"
              name="OLE DB Source Output"
              startId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{890BD613-E090-4703-ACC2-C750906866B6}"
      DTS:From="Package\Get File Info"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Foreach Loop Container" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="128,42"
          Id="Package\Foreach Loop Container\Delete File"
          TopLeft="270,114" />
        <NodeLayout
          Size="144,42"
          Id="Package\Foreach Loop Container\Load Raw File"
          TopLeft="144,32" />
        <NodeLayout
          Size="163,42"
          Id="Package\Foreach Loop Container\Log Raw File"
          TopLeft="35,109" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="193.333333333333,74">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-76.8333333333333,35"
              Start="0,0"
              End="-76.8333333333333,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.2307692307692" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.2307692307692"
                    Point2="0,14.2307692307692"
                    Point3="-4,14.2307692307692" />
                  <mssgle:LineSegment
                    End="-72.8333333333333,14.2307692307692" />
                  <mssgle:CubicBezierSegment
                    Point1="-72.8333333333333,14.2307692307692"
                    Point2="-76.8333333333333,14.2307692307692"
                    Point3="-76.8333333333333,18.2307692307692" />
                  <mssgle:LineSegment
                    End="-76.8333333333333,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="238.666666666667,74">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="95.3333333333333,40"
              Start="0,0"
              End="95.3333333333333,32.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.2637362637363" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.2637362637363"
                    Point2="0,16.2637362637363"
                    Point3="4,16.2637362637363" />
                  <mssgle:LineSegment
                    End="91.3333333333333,16.2637362637363" />
                  <mssgle:CubicBezierSegment
                    Point1="91.3333333333333,16.2637362637363"
                    Point2="95.3333333333333,16.2637362637363"
                    Point3="95.3333333333333,20.2637362637363" />
                  <mssgle:LineSegment
                    End="95.3333333333333,32.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="456,221"
          Size="456,264"
          Id="Package\Foreach Loop Container"
          TopLeft="545,190" />
        <NodeLayout
          Size="137,42"
          Id="Package\Get File Info"
          TopLeft="621,72" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="689.5,114">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="83.5,76"
              Start="0,0"
              End="83.5,68.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34" />
                  <mssgle:CubicBezierSegment
                    Point1="0,34"
                    Point2="0,38"
                    Point3="4,38" />
                  <mssgle:LineSegment
                    End="79.5,38" />
                  <mssgle:CubicBezierSegment
                    Point1="79.5,38"
                    Point2="83.5,38"
                    Point3="83.5,42" />
                  <mssgle:LineSegment
                    End="83.5,68.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Load Raw File">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="163,42"
          Id="Package\Foreach Loop Container\Load Raw File\Script Component"
          TopLeft="601,96" />
        <NodeLayout
          Size="180,42"
          Id="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1"
          TopLeft="730,233" />
        <NodeLayout
          Size="171,42"
          Id="Package\Foreach Loop Container\Load Raw File\OLE DB Destination"
          TopLeft="417,231" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Load Raw File.Paths[ErrorOut]"
          TopLeft="682.5,138">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-180,93"
              Start="0,0"
              End="-180,85.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,42.5"
                    Point2="0,46.5"
                    Point3="-4,46.5" />
                  <mssgle:LineSegment
                    End="-176,46.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-176,46.5"
                    Point2="-180,46.5"
                    Point3="-180,50.5" />
                  <mssgle:LineSegment
                    End="-180,85.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-109.54638671875,51.5,39.0927734375,9.5732421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Load Raw File.Paths[CAHOut]"
          TopLeft="708.333333333333,138">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="111.666666666667,95"
              Start="0,0"
              End="111.666666666667,87.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.554070473876" />
                  <mssgle:CubicBezierSegment
                    Point1="0,34.554070473876"
                    Point2="0,38.554070473876"
                    Point3="4,38.554070473876" />
                  <mssgle:LineSegment
                    End="107.666666666667,38.554070473876" />
                  <mssgle:CubicBezierSegment
                    Point1="107.666666666667,38.554070473876"
                    Point2="111.666666666667,38.554070473876"
                    Point3="111.666666666667,42.554070473876" />
                  <mssgle:LineSegment
                    End="111.666666666667,87.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="37.6194270833333,43.554070473876,36.4278125,9.5732421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Load Raw File\OLE DB Destination 1">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Load Raw File\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Get File Info">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="182,42"
          Id="Package\Get File Info\Recordset Destination"
          TopLeft="485,177" />
        <NodeLayout
          Size="150,42"
          Id="Package\Get File Info\OLE DB Source"
          TopLeft="384,75" />
        <EdgeLayout
          Id="Package\Get File Info.Paths[OLE DB Source Output]"
          TopLeft="459,117">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="117,60"
              Start="0,0"
              End="117,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="4,30" />
                  <mssgle:LineSegment
                    End="113,30" />
                  <mssgle:CubicBezierSegment
                    Point1="113,30"
                    Point2="117,30"
                    Point3="117,34" />
                  <mssgle:LineSegment
                    End="117,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Get File Info\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>