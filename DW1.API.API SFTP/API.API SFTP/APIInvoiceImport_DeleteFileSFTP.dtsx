<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="2/22/2019 8:49:26 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="AAP-N097"
  DTS:CreatorName="AAP\yhaile"
  DTS:DTSID="{94C256C5-4396-4EF5-86C3-1462A81974BB}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="13.0.2165.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="APIInvoiceImport_DeleteFileSFTP"
  DTS:PackageType="5"
  DTS:VersionBuild="89"
  DTS:VersionGUID="{7B4CB774-77AA-4723-8003-2985EA33717D}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B4D58D7C-E2BC-4588-84BA-5C925B0091C3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ftpPassword">
      <DTS:VariableValue
        DTS:DataType="8">SalesHi!</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FE8339F9-6B90-4DCF-A3EE-6EB600B14D63}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ftpSite">
      <DTS:VariableValue
        DTS:DataType="8">ftp.rxaap.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1B9CE050-E9AD-49DA-A93A-CE35BFBA15F4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ftpUsername">
      <DTS:VariableValue
        DTS:DataType="8">api_whsinvoice</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{376BFD96-38EE-4A20-8023-56B8D3614BB8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="remoteFTPDirectory">
      <DTS:VariableValue
        DTS:DataType="8">/sftp/uploads/*.txt</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{76BC933C-254B-4BDC-9457-8A29989463FF}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sshKey">
      <DTS:VariableValue
        DTS:DataType="8">ssh-ed25519 256 96:e7:c6:de:7f:14:33:39:7e:d5:c8:e9:51:7c:1d:fa</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4F98F5B5-B44B-40FC-974E-BD733578F4F4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varErrorLogDbName">
      <DTS:VariableValue
        DTS:DataType="8">ODSIntake</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8C8E7E13-A0A1-4C72-8D55-9FA7C9C276DC}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varErrorLogServer">
      <DTS:VariableValue
        DTS:DataType="8">AAPDW1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9B238E6E-4A6E-41A5-89B9-28D65E756D02}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varFileLogDbName">
      <DTS:VariableValue
        DTS:DataType="8">ODSIntake</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{36CC3556-C48E-420A-9595-B5E1A764505B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varFileLogServer">
      <DTS:VariableValue
        DTS:DataType="8">AAPDW1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D2578ABE-7938-4E76-83D6-3623F63448EB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varProcess">
      <DTS:VariableValue
        DTS:DataType="8">APIInvoiceImport</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{56EFFB6E-CEA7-487F-B60C-8CED2A302578}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="winSCPLog">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CE76DEA7-A026-4B5B-B152-DBB3FB63E949}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="winSCPLogPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\WINscp\WINscpLog.txt</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{87D51FBD-894B-4232-9802-61971E96EF16}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="winSCPPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Program Files (x86)\WinSCP\winscp.exe</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Delete file from SFTP Server"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:DelayValidation="True"
      DTS:Description="Script Task"
      DTS:DTSID="{FE16ADA3-22D7-44F8-A4B2-8D5C4D4379F4}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:MaxErrorCount="0"
      DTS:ObjectName="Delete file from SFTP Server"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_a8d5d5e5871a4ddfb4880beffb02ebec"
          VSTAMajorVersion="14"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::ftpPassword,User::ftpSite,User::ftpUsername,User::remoteFTPDirectory,User::sshKey,User::varErrorLogDbName,User::varErrorLogServer,User::varFileLogDbName,User::varFileLogServer,User::varProcess,User::winSCPLog,User::winSCPLogPath,User::winSCPPath">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a8d5d5e5871a4ddfb4880beffb02ebec.Properties.Settings.get_Default():ST_a8d5d5e5871a4ddfb4880beffb02ebec.Properties.Sett" +
    "ings")]

namespace ST_a8d5d5e5871a4ddfb4880beffb02ebec.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using System.Data.SqlClient;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using WinSCP;
#endregion

namespace ST_a8d5d5e5871a4ddfb4880beffb02ebec
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            string winscpPath = Dts.Variables["winSCPPath"].Value.ToString();
            string username = Dts.Variables["ftpUsername"].Value.ToString();
            string password = Dts.Variables["ftpPassword"].Value.ToString();
            string ftpSite = Dts.Variables["ftpSite"].Value.ToString();
            string remoteFTPDirectory = Dts.Variables["remoteFTPDirectory"].Value.ToString();
            string sshKey = Dts.Variables["sshKey"].Value.ToString();
            Boolean winSCPLog = (Boolean)Dts.Variables["winSCPLog"].Value;
            string winSCPLogPath = Dts.Variables["winSCPLogPath"].Value.ToString();
            string fileLogServer = Dts.Variables["varFileLogServer"].Value.ToString();
            string fileLogDbName = Dts.Variables["varFileLogDbName"].Value.ToString();
            string errorLogServer = Dts.Variables["varErrorLogServer"].Value.ToString();
            string errorLogDbName = Dts.Variables["varErrorLogDbName"].Value.ToString();
            string strProcess = Dts.Variables["varProcess"].Value.ToString();

            SessionOptions sessionOptions = new SessionOptions
            {
                Protocol = Protocol.Sftp,
                HostName = ftpSite,
                UserName = username,
                Password = password,
                SshHostKeyFingerprint = sshKey
            };


            try
            {
                using (Session session = new Session())
                {
                    // WinSCP .NET assembly must be in GAC to be used with SSIS,
                    // set path to WinSCP.exe explicitly, if using non-default path.
                    session.ExecutablePath = winscpPath;
                    session.DisableVersionCheck = true;

                    //if (winSCPLog)
                    //{
                    //session.SessionLogPath = @winSCPLogPath + @"WinscpSessionLog.txt";
                    //session.DebugLogPath = @winSCPLogPath + @"WinscpDebugLog.txt";
                    //}

                    // Connect
                    session.Timeout = new TimeSpan(0, 2, 0); // two minutes
                    session.Open(sessionOptions);

                    TransferOptions transferOptions = new TransferOptions();
                    transferOptions.TransferMode = TransferMode.Binary;

                    try
                    {

                        var sessionresults = session.RemoveFiles(remoteFTPDirectory);

                        sessionresults.Check();

                        //Log file name and datetime for each file downloaded
                        foreach (RemovalEventArgs removal in sessionresults.Removals)
                        {
                            using (SqlConnection oRemoteConn =
                                      new SqlConnection("Data Source = " + fileLogServer + "; Initial Catalog = " + fileLogDbName + "; Integrated Security = true;"))
                                try
                                {

                                    SqlCommand oCmd = new SqlCommand();
                                    oCmd.Connection = oRemoteConn;
                                    oCmd.CommandType = CommandType.StoredProcedure;

                                    oCmd.CommandText = "dbo.usp_FileLog";
                                    oCmd.Parameters.AddWithValue("@FileName", removal.FileName.ToString());
                                    oCmd.Parameters.AddWithValue("@Process", strProcess.ToString());

                                    oRemoteConn.Open();
                                    oCmd.ExecuteNonQuery();
                                }

                                catch (SqlException exSql)
                                {

                                    using (SqlConnection oErrorConn =
                                        new SqlConnection("Data Source = " + errorLogServer + "; Initial Catalog = " + errorLogDbName + "; Integrated Security = true;"))

                                        try
                                        {

                                            SqlCommand errorCmd = new SqlCommand();
                                            errorCmd.Connection = oErrorConn;
                                            errorCmd.CommandType = CommandType.StoredProcedure;

                                            errorCmd.CommandText = "Error.usp_ErrorInsert_ManagedErrorLog";
                                            errorCmd.Parameters.AddWithValue("@Process", strProcess.ToString());
                                            errorCmd.Parameters.AddWithValue("@Message", exSql.Message.ToString());
                                            errorCmd.Parameters.AddWithValue("@StackTrace", exSql.StackTrace.ToString());
                                            errorCmd.Parameters.AddWithValue("@Source", exSql.Source.ToString());
                                            errorCmd.Parameters.AddWithValue("@Procedure", exSql.Procedure.ToString());
                                            errorCmd.Parameters.AddWithValue("@LineNumber", exSql.LineNumber);
                                            if (exSql.InnerException != null)
                                            {
                                                errorCmd.Parameters.AddWithValue("@InnerException", exSql.InnerException.ToString());
                                            }
                                            else
                                            {
                                                errorCmd.Parameters.AddWithValue("@InnerException", String.Empty);
                                            }
                                            errorCmd.Parameters.AddWithValue("@Number", exSql.Number);
                                            errorCmd.Parameters.AddWithValue("@State", exSql.State);
                                            errorCmd.Parameters.AddWithValue("@TargetSite", exSql.TargetSite.ToString());
                                            if (exSql.HelpLink != null)
                                            {
                                                errorCmd.Parameters.AddWithValue("@HelpLink", exSql.HelpLink.ToString());
                                            }
                                            else
                                            {
                                                errorCmd.Parameters.AddWithValue("@HelpLink", String.Empty);
                                            }
                                            errorCmd.Parameters.AddWithValue("@SQLErrorCode", exSql.ErrorCode.ToString());
                                            errorCmd.Parameters.AddWithValue("@SQLSeverity", exSql.Class.ToString());
                                            errorCmd.Parameters.AddWithValue("@Data", exSql.Data.ToString());
                                            errorCmd.Parameters.AddWithValue("@Server", exSql.Server.ToString());
                                            errorCmd.Parameters.AddWithValue("@ExceptionType", exSql.GetType().ToString());

                                            oErrorConn.Open();
                                            errorCmd.ExecuteNonQuery();

                                        }

                                        catch (SqlException errorexSql)
                                        {
                                            throw new Exception("", errorexSql);
                                        }

                                }

                            //session.RemoveFiles("/*.txt");

                            //Console.WriteLine("Download of {0} succeeded", transfer.FileName);
                        }

                    }

                    catch (Exception e)
                    {
                        Dts.Events.FireError(0, null,
                        string.Format("Error when using WinSCP to download file: {0}", e), null, 0);
                        Dts.TaskResult = (int)DTSExecResult.Failure;
                    }
                }

            }

            catch (Exception e)
            {

            }

			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_a8d5d5e5871a4ddfb4880beffb02ebec.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{A08EE8AD-A7F7-4494-BDB8-C43BC8B1DE03}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_a8d5d5e5871a4ddfb4880beffb02ebec</RootNamespace>
    <AssemblyName>ST_a8d5d5e5871a4ddfb4880beffb02ebec</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="WinSCPnet, Version=1.6.3.9407, Culture=neutral, PublicKeyToken=2271ec4a3c56d0bf, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files (x86)\WinSCP\WinSCPnet.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_a8d5d5e5871a4ddfb4880beffb02ebec</msb:CodeName>
		<msb:DisplayName>ST_a8d5d5e5871a4ddfb4880beffb02ebec</msb:DisplayName>
		<msb:ProjectId>{05BEF271-8EFA-403A-A9C3-ABF7655B3EEA}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_a8d5d5e5871a4ddfb4880beffb02ebec.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a8d5d5e5871a4ddfb4880beffb02ebec")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_a8d5d5e5871a4ddfb4880beffb02ebec")]
[assembly: AssemblyCopyright("Copyright @  2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a8d5d5e5871a4ddfb4880beffb02ebec.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a8d5d5e5871a4ddfb4880beffb02ebec.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a8d5d5e5871a4ddfb4880beffb02ebec.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a8d5d5e5871a4ddfb4880beffb02ebec.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a8d5d5e5871a4ddfb4880beffb02ebec.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_a8d5d5e5871a4ddfb4880beffb02ebec.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAGCby1wAAAAAAAAAAOAAIiALATAAACAAAAAIAAAAAAAADj8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALw+AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAFB8AAAAgAAAAIAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAiAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAKAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADw
PgAAAAAAAEgAAAACAAUAlCcAAHAWAAABAAAAAAAAAAQ+AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBgAJBgAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKAigQAAAKbxEAAApyFwAAcG8SAAAKbxMAAApvFAAACgsCKBAAAApvEQAACnIvAABw
bxIAAApvEwAACm8UAAAKDAIoEAAACm8RAAAKckcAAHBvEgAACm8TAAAKbxQAAAoNAigQAAAKbxEA
AApyVwAAcG8SAAAKbxMAAApvFAAAChMEAigQAAAKbxEAAApyfQAAcG8SAAAKbxMAAApvFAAAChMF
AigQAAAKbxEAAApyiwAAcG8SAAAKbxMAAAqlJAAAASYCKBAAAApvEQAACnKfAABwbxIAAApvEwAA
Cm8UAAAKJgIoEAAACm8RAAAKcrsAAHBvEgAACm8TAAAKbxQAAAoTBgIoEAAACm8RAAAKct0AAHBv
EgAACm8TAAAKbxQAAAoTBwIoEAAACm8RAAAKcv8AAHBvEgAACm8TAAAKbxQAAAoTCAIoEAAACm8R
AAAKciMBAHBvEgAACm8TAAAKbxQAAAoTCQIoEAAACm8RAAAKckcBAHBvEgAACm8TAAAKbxQAAAoT
CnMVAAAKJRZvFgAACiUJbxcAAAolB28YAAAKJQhvGQAACiURBW8aAAAKEwtzGwAAChMMEQwGbxwA
AAoRDBdvHQAAChEMFhgWcx4AAApvHwAAChEMEQtvIAAACnMhAAAKFm8iAAAKEQwRBG8jAAAKJW8k
AAAKbyUAAApvJgAAChMNOGcDAAARDW8nAAAKdBIAAAETDhuNLAAAASUWcl0BAHCiJRcRBqIlGHJ7
AQBwoiUZEQeiJRpypQEAcKIoKAAACnMpAAAKEw9zKgAACiURD28rAAAKJRpvLAAACiVy4QEAcG8t
AAAKJW8uAAAKcgECAHARDm8vAAAKbxQAAApvMAAACiYlby4AAApyFQIAcBEKbxQAAApvMAAACiYR
D28xAAAKbzIAAAom3bECAAATEBuNLAAAASUWcl0BAHCiJRcRCKIlGHJ7AQBwoiUZEQmiJRpypQEA
cKIoKAAACnMpAAAKExFzKgAAChMSERIREW8rAAAKERIabywAAAoREnInAgBwby0AAAoREm8uAAAK
chUCAHARCm8UAAAKbzAAAAomERJvLgAACnJzAgBwERBvMwAACm8UAAAKbzAAAAomERJvLgAACnKF
AgBwERBvNAAACm8UAAAKbzAAAAomERJvLgAACnKdAgBwERBvNQAACm8UAAAKbzAAAAomERJvLgAA
CnKtAgBwERBvNgAACm8UAAAKbzAAAAomERJvLgAACnLDAgBwERBvNwAACowzAAABbzAAAAomERBv
OAAACiwgERJvLgAACnLbAgBwERBvOAAACm8UAAAKbzAAAAomKxcREm8uAAAKctsCAHB+OQAACm8w
AAAKJhESby4AAApy+wIAcBEQbzoAAAqMMwAAAW8wAAAKJhESby4AAApyCwMAcBEQbzsAAAqMNAAA
AW8wAAAKJhESby4AAApyGQMAcBEQbzwAAApvFAAACm8wAAAKJhEQbz0AAAosIBESby4AAApyMQMA
cBEQbz0AAApvFAAACm8wAAAKJisXERJvLgAACnIxAwBwfjkAAApvMAAACiYREm8uAAAKckUDAHAR
EG8+AAAKExMSEyg/AAAKbzAAAAomERJvLgAACnJhAwBwERBvQAAAChMUEhQoQQAACm8wAAAKJhES
by4AAApyewMAcBEQb0IAAApvFAAACm8wAAAKJhESby4AAApyhwMAcBEQb0MAAApvFAAACm8wAAAK
JhESby4AAApylwMAcBEQb0QAAApvFAAACm8wAAAKJhERbzEAAAoREm8yAAAKJt4PExVytQMAcBEV
c0UAAAp63gwRESwHERFvRgAACtzeAN4MEQ8sBxEPb0YAAArcEQ1vRwAACjqN/P//3hURDXUWAAAB
ExYRFiwHERZvRgAACtzeMRMXAigQAAAKb0gAAAoWFHK3AwBwERcoSQAAChQWb0oAAAomAigQAAAK
F29LAAAK3gDeDBEMLAcRDG9GAAAK3N4DJt4AAigQAAAKFm9LAAAKKgAAAEHEAAAAAAAACgMAAFwC
AABmBQAADwAAABQAAAECAAAACgMAAG0CAAB3BQAADAAAAAAAAAAAAAAAbgIAAGYAAADUAgAAsQIA
ABQAAAECAAAAbgIAABkDAACHBQAADAAAAAAAAAACAAAAJwIAAHoDAAChBQAAFQAAAAAAAAAAAAAA
DAIAAKwDAAC4BQAAMQAAABcAAAECAAAA2QEAABIEAADrBQAADAAAAAAAAAAAAAAA0gEAACcEAAD5
BQAAAwAAABcAAAEeAihMAAAKKh4CKE0AAAoqrn4BAAAELR5yEwQAcNADAAACKE4AAApvTwAACnNQ
AAAKgAEAAAR+AQAABCoafgIAAAQqHgKAAgAABCoafgMAAAQqHgIoUQAACioucwgAAAaAAwAABCoA
AEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAANwFAAAjfgAASAYAAGAJAAAjU3Ry
aW5ncwAAAACoDwAAiAQAACNVUwAwFAAAEAAAACNHVUlEAAAAQBQAADACAAAjQmxvYgAAAAAAAAAC
AAABVx2iAQkDAAAA+gEzABYAAAEAAAA7AAAABQAAAAYAAAAJAAAAAQAAAFEAAAACAAAAEAAAAAEA
AAACAAAAAwAAAAQAAAABAAAABgAAAAEAAAABAAAAAADcBAEAAAAAAAYAQgMBBwYA0QMBBwYAjgLP
Bg8AdQcAAAYAuwKFBQYAJQOFBQYABgOFBQYAuAOFBQYAYgOFBQYAewOFBQYA0gKFBQYA7QIRBAoA
lgOLBAoA2AGLBA4AHggQAA4AUwUQAAYAqAYLCA4A1gcQABIA5QXQCBIABQbQCBIAigDQCAYAAAEa
BQYAGwYaBQYAIQUaBQYAcQLPBgYAjQgaBQYAYgYhBwYAOAZwBRYAMgLGBBYAogLGBBYA9AFbBQYA
VgIBBwoAtASLBBoAtwdXARoA9wBXAQYAMgUaBQ4ACAUQAAYAOgUaBQ4ALQgQAA4A3gAQAA4AuQgQ
AA4ADAIQAA4ArgUQAAYALQQaBRIAgAAlBhIAewE+ABIAlwXQCA4A5wcQABIAhgbQCBIA2AUlBgYA
AQAaBQYA7wMaBQYAzQGFBQYA8wXiBgYAPgkLCAYAigEaBQoAcgaLBAYADAEaBQYANQmFBQAAAAAH
AAAAAAABAAEAAQAQAEgFXAA5AAEAAQAAABAAKAeEB2kAAQADAAABEADNB4QHfQADAAcAAwEAAGYI
AABhAAQACgARACYFNAERAL0BOAERALEAPAEGBjYAQAFWgFYIQwFWgJ0BQwFQIAAAAACGAE4FBgAB
ACwnAAAAAIYYwgYGAAEANCcAAAAAgxjCBgYAAQA8JwAAAACTCF4GRwEBAGgnAAAAAJMIpQFMAQEA
bycAAAAAkwixAVEBAQB3JwAAAACWCJ4IVwECAH4nAAAAAIYYwgYGAAIAhicAAAAAkRjIBlwBAgAA
AAEACwQJAMIGAQARAMIGBgAZAMIGCgApAMIGEAAxAMIGEAA5AMIGEABBAMIGEABJAMIGEABRAMIG
EABZAMIGEABhAMIGEABpAMIGBgDJAMIGBgDxAMIGFQABAcIGBgBxAF4IQQAJAbMHRwARAREFTQAZ
AfQDVADRACsEWAB5AMIGBgB5AAQFXAB5AEoBEAB5AD0BEAB5AJUAEAB5APIIEACBAMIGBgCBADQE
EACBAEcEYwAxAcIGaACBAAwJbwCBAEMFdgA5AcIGBgA5AdoAfACBAMEHgwBRAVkEBgBJAf4HigBZ
AbQGkACJAOYIVABhAX8IlQCZAMIGEACpAMIGBgCpAMkFmwBpAXcBoQBpASEJEACpAD0IqACBATAB
WAB5Af4DrgCRAUMFBgBpAUoJtgC5AOsAWAC5AKIAWAC5AMEAWAChAI8BWAChAE8GtgC5ABIGugBh
AVoJvwChAEQGtgChACgCwgC5AEcCxgC5AF8EWACxAcwAtgCZASsEWAChAEwIwgChASsEWAC5AEoA
zAChAJMGWAC5AIcB0gC5AMIG2ACxACACBgCJABgJ3wAJAXQI4wBhAYYI6QDJAZ4G7wAJAaoIAQBx
AMIGBgDRAMIGBgDBAR4B+ADBATEJAQHZAMIGBwH5AMIGBgAIABQAKgEIABgALwEpAHMAlwEuAAsA
bwEuABMAeAEuABsAlwEuACMAoAEuACsAyQEuADMAyQEuADsAyQEuAEMAoAEuAEsAzwEuAFMAyQEu
AFsA5gFDAGMALwFJAHMAlwFhAHsALwFjAGsALwEbAAMAAQAEAAMAAABiBmABAADFAWUBAACiCGoB
AgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcABIAAAAEAAACVGwiRAAAAAAAAXAAAAAQAAAAAAAAAAAAA
AA8BUwAAAAAADQAAAAAAAAAAAAAAGAFsBAAAAAABAAYAAwC/JAAAAAAhAZQIAAAAAAQAAAAAAAAA
AAAAAA8BPgAAAAAABAAAAAAAAAAAAAAADwEaBQAAAAANAAAAAAAAAAAAAAAYARcAAAAAAAAAAAAB
AAAAMgcAAAUAAgAAAABJbnQzMgA8TW9kdWxlPgBXaW5TQ1AATWljcm9zb2Z0LlNxbFNlcnZlci5N
YW5hZ2VkRFRTAHZhbHVlX18AU3lzdGVtLkRhdGEAZ2V0X0RhdGEAbXNjb3JsaWIAU1RfYThkNWQ1
ZTU4NzFhNGRkZmI0ODgwYmVmZmIwMmViZWMARGJDb21tYW5kAFNxbENvbW1hbmQAc2V0X1Bhc3N3
b3JkAGdldF9TdGFja1RyYWNlAGRlZmF1bHRJbnN0YW5jZQBnZXRfU291cmNlAGdldF9FcnJvckNv
ZGUAc2V0X1RyYW5zZmVyTW9kZQBnZXRfTWVzc2FnZQBWYXJpYWJsZQBJRGlzcG9zYWJsZQBSdW50
aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBnZXRfRmlsZU5hbWUAc2V0X1VzZXJOYW1l
AHNldF9Ib3N0TmFtZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAHNldF9Db21tYW5k
VHlwZQBHZXRUeXBlAGdldF9Qcm9jZWR1cmUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVy
ZQByZXNvdXJjZUN1bHR1cmUATWV0aG9kQmFzZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UA
QXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAT3BlcmF0aW9uUmVzdWx0QmFzZQBEaXNwb3NlAGdldF9T
dGF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBnZXRfVGFyZ2V0U2l0ZQBDb21waWxlckdlbmVyYXRl
ZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1
dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1i
bHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29u
ZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0
aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5
Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3Nl
bWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAQnl0ZQBn
ZXRfVmFsdWUAQWRkV2l0aFZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9T
dHJpbmcAc2V0X0V4ZWN1dGFibGVQYXRoAHNldF9EaXNhYmxlVmVyc2lvbkNoZWNrAGdldF9IZWxw
TGluawBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9k
ZWwAU1RfYThkNWQ1ZTU4NzFhNGRkZmI0ODgwYmVmZmIwMmViZWMuZGxsAHNldF9Qcm90b2NvbABn
ZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBCb29sZWFuAFRpbWVTcGFuAE9wZW4AU2Ny
aXB0TWFpbgBTZXNzaW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9u
AFN5c3RlbS5SZWZsZWN0aW9uAFNxbFBhcmFtZXRlckNvbGxlY3Rpb24AUmVtb3ZhbEV2ZW50QXJn
c0NvbGxlY3Rpb24Ac2V0X0Nvbm5lY3Rpb24ARGJDb25uZWN0aW9uAFNxbENvbm5lY3Rpb24ARXh0
ZXJuYWxFeGNlcHRpb24AU3FsRXhjZXB0aW9uAGdldF9Jbm5lckV4Y2VwdGlvbgBTeXN0ZW0uRGF0
YS5Db21tb24AQ3VsdHVyZUluZm8AZ2V0X051bWJlcgBnZXRfTGluZU51bWJlcgBnZXRfUmVzb3Vy
Y2VNYW5hZ2VyAEV2ZW50c09iamVjdFdyYXBwZXIAU3FsUGFyYW1ldGVyAGdldF9TZXJ2ZXIARmly
ZUVycm9yAElFbnVtZXJhdG9yAEdldEVudW1lcmF0b3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFn
bm9zdGljcwBTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMAU3lzdGVtLlJ1bnRpbWUuQ29t
cGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUX2E4ZDVkNWU1ODcxYTRkZGZiNDg4MGJl
ZmZiMDJlYmVjLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBT
VF9hOGQ1ZDVlNTg3MWE0ZGRmYjQ4ODBiZWZmYjAyZWJlYy5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJs
ZXMAUmVtb3ZlRmlsZXMAU2V0dGluZ3MAUmVtb3ZhbEV2ZW50QXJncwBGaWxlT3BlcmF0aW9uRXZl
bnRBcmdzAGdldF9SZW1vdmFscwBTeXN0ZW0uQ29sbGVjdGlvbnMAU2Vzc2lvbk9wdGlvbnMAVHJh
bnNmZXJPcHRpb25zAGdldF9QYXJhbWV0ZXJzAGdldF9DbGFzcwBTdWNjZXNzAGdldF9EdHMAU2Ny
aXB0UmVzdWx0cwBnZXRfRXZlbnRzAENvbmNhdABGb3JtYXQAT2JqZWN0AFdpblNDUG5ldABnZXRf
RGVmYXVsdABzZXRfVGFza1Jlc3VsdABSZW1vdmFsT3BlcmF0aW9uUmVzdWx0AFN5c3RlbS5EYXRh
LlNxbENsaWVudABnZXRfQ3VycmVudABzZXRfU3NoSG9zdEtleUZpbmdlcnByaW50AHNldF9UaW1l
b3V0AE1vdmVOZXh0AHNldF9Db21tYW5kVGV4dABnZXRfQXNzZW1ibHkASURpY3Rpb25hcnkARXhl
Y3V0ZU5vblF1ZXJ5AEVtcHR5AAAVdwBpAG4AUwBDAFAAUABhAHQAaAAAF2YAdABwAFUAcwBlAHIA
bgBhAG0AZQAAF2YAdABwAFAAYQBzAHMAdwBvAHIAZAAAD2YAdABwAFMAaQB0AGUAACVyAGUAbQBv
AHQAZQBGAFQAUABEAGkAcgBlAGMAdABvAHIAeQAADXMAcwBoAEsAZQB5AAATdwBpAG4AUwBDAFAA
TABvAGcAABt3AGkAbgBTAEMAUABMAG8AZwBQAGEAdABoAAAhdgBhAHIARgBpAGwAZQBMAG8AZwBT
AGUAcgB2AGUAcgAAIXYAYQByAEYAaQBsAGUATABvAGcARABiAE4AYQBtAGUAACN2AGEAcgBFAHIA
cgBvAHIATABvAGcAUwBlAHIAdgBlAHIAACN2AGEAcgBFAHIAcgBvAHIATABvAGcARABiAE4AYQBt
AGUAABV2AGEAcgBQAHIAbwBjAGUAcwBzAAAdRABhAHQAYQAgAFMAbwB1AHIAYwBlACAAPQAgAAAp
OwAgAEkAbgBpAHQAaQBhAGwAIABDAGEAdABhAGwAbwBnACAAPQAgAAA7OwAgAEkAbgB0AGUAZwBy
AGEAdABlAGQAIABTAGUAYwB1AHIAaQB0AHkAIAA9ACAAdAByAHUAZQA7AAAfZABiAG8ALgB1AHMA
cABfAEYAaQBsAGUATABvAGcAABNAAEYAaQBsAGUATgBhAG0AZQAAEUAAUAByAG8AYwBlAHMAcwAA
S0UAcgByAG8AcgAuAHUAcwBwAF8ARQByAHIAbwByAEkAbgBzAGUAcgB0AF8ATQBhAG4AYQBnAGUA
ZABFAHIAcgBvAHIATABvAGcAABFAAE0AZQBzAHMAYQBnAGUAABdAAFMAdABhAGMAawBUAHIAYQBj
AGUAAA9AAFMAbwB1AHIAYwBlAAAVQABQAHIAbwBjAGUAZAB1AHIAZQAAF0AATABpAG4AZQBOAHUA
bQBiAGUAcgAAH0AASQBuAG4AZQByAEUAeABjAGUAcAB0AGkAbwBuAAAPQABOAHUAbQBiAGUAcgAA
DUAAUwB0AGEAdABlAAAXQABUAGEAcgBnAGUAdABTAGkAdABlAAATQABIAGUAbABwAEwAaQBuAGsA
ABtAAFMAUQBMAEUAcgByAG8AcgBDAG8AZABlAAAZQABTAFEATABTAGUAdgBlAHIAaQB0AHkAAAtA
AEQAYQB0AGEAAA9AAFMAZQByAHYAZQByAAAdQABFAHgAYwBlAHAAdABpAG8AbgBUAHkAcABlAAAB
AFtFAHIAcgBvAHIAIAB3AGgAZQBuACAAdQBzAGkAbgBnACAAVwBpAG4AUwBDAFAAIAB0AG8AIABk
AG8AdwBuAGwAbwBhAGQAIABmAGkAbABlADoAIAB7ADAAfQAAcVMAVABfAGEAOABkADUAZAA1AGUA
NQA4ADcAMQBhADQAZABkAGYAYgA0ADgAOAAwAGIAZQBmAGYAYgAwADIAZQBiAGUAYwAuAFAAcgBv
AHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAAAAeOq8ELJaPEqOuf1vrL8MpgAE
IAEBCAMgAAEFIAEBEREEIAEBDgUgAQERdSUHGA4ODg4ODg4ODg4OEj0SQRJFEkkSTRJREk0SVQgF
ElESWRJdBSAAEoCFBSAAEoCJBiABEoCNHAMgABwDIAAOBiABARGAlQQgAQECBiADAQgICAYgAQER
gJkFIAEBEj0GIAEBEYChBiABEoClDgUgABKArQQgABJFBQABDh0OBSABARJNBiABARGAuQUgABKA
vQcgAhKAxQ4cAyAACAQgABJdAgYOAyAABQUgABKA1QUgABKA3QUgABKA4QYgAgEOEl0DIAACBSAA
EoDlBQACDg4cCCAFAggODg4ICAABEoDhEYDpBSAAEoDtByACAQ4SgO0It3pcVhk04IkIiYRdzYCA
zJEIInHsSjxW0L8EAAAAAAQBAAAAAwYSbQMGEnEDBhIQAgYIAwYRFAQAABJtBAAAEnEFAAEBEnEE
AAASEAMAAAEECAASbQQIABJxBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25U
aHJvd3MBCAEAAgAAAAAAKAEAI1NUX2E4ZDVkNWU1ODcxYTRkZGZiNDg4MGJlZmZiMDJlYmVjAAAF
AQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTkAAEcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQu
MAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNAAAtAAAAM7K774BAAAA
kQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00
LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkj
U3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAA
AOQ+AAAAAAAAAAAAAP4+AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwPgAAAAAAAAAAAAAAAF9D
b3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQ
AAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhA
AAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv
/gAAAQAAAAEACJGVGwAAAQAIkZUbPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYA
YQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAA
ALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAwADQA
YgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBh
AG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQA
XwBhADgAZAA1AGQANQBlADUAOAA3ADEAYQA0AGQAZABmAGIANAA4ADgAMABiAGUAZgBmAGIAMAAy
AGUAYgBlAGMAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANwAwADYA
MQAuADMANwAxADIAOAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwBh
ADgAZAA1AGQANQBlADUAOAA3ADEAYQA0AGQAZABmAGIANAA4ADgAMABiAGUAZgBmAGIAMAAyAGUA
YgBlAGMALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBw
AHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEAOQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUA
bQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAA
AFMAVABfAGEAOABkADUAZAA1AGUANQA4ADcAMQBhADQAZABkAGYAYgA0ADgAOAAwAGIAZQBmAGYA
YgAwADIAZQBiAGUAYwAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABT
AFQAXwBhADgAZAA1AGQANQBlADUAOAA3ADEAYQA0AGQAZABmAGIANAA4ADgAMABiAGUAZgBmAGIA
MAAyAGUAYgBlAGMAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAu
ADcAMAA2ADEALgAzADcAMQAyADgAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMA
aQBvAG4AAAAxAC4AMAAuADcAMAA2ADEALgAzADcAMQAyADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAED8AAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="219,42"
          Id="Package\Delete file from SFTP Server"
          TopLeft="446,92" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>