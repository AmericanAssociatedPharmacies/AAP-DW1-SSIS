<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="2/22/2019 8:49:26 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="AAP-N097"
  DTS:CreatorName="AAP\yhaile"
  DTS:DTSID="{7F2AF4C3-0196-4CF2-A31C-64117603146B}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="13.0.2165.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="APIInvoiceImport_DownloadSFTP"
  DTS:PackageType="5"
  DTS:VersionBuild="90"
  DTS:VersionGUID="{C2C3C32C-70E4-4102-A604-E2D9D0CEEE92}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BC59780B-E22E-4DA2-8F10-6BC7782D79C1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ftpPassword">
      <DTS:VariableValue
        DTS:DataType="8">SalesHi!</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D83CCDA5-8D4F-4EAF-B177-456C9882E142}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ftpSite">
      <DTS:VariableValue
        DTS:DataType="8">ftp.rxaap.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C9721770-D9A7-4312-A69E-C6744F215D8C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ftpUsername">
      <DTS:VariableValue
        DTS:DataType="8">api_whsinvoice</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4751938F-171D-4AF5-876F-053BE5760E7B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="localPath">
      <DTS:VariableValue
        DTS:DataType="8">\\fs1.aap.local\Server\IT Department\APIInvoiceImport</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3CD80C28-ADA2-402B-A464-30ADCDD63965}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="remoteFTPDirectory">
      <DTS:VariableValue
        DTS:DataType="8">/sftp/uploads/</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0DDD1753-A7A2-4E1C-ADC1-B6960EF9AEE0}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sshKey">
      <DTS:VariableValue
        DTS:DataType="8">ssh-ed25519 256 96:e7:c6:de:7f:14:33:39:7e:d5:c8:e9:51:7c:1d:fa</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9DF56236-128B-43AA-93AE-BD65487A001D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varErrorLogDbName">
      <DTS:VariableValue
        DTS:DataType="8">ODSIntake</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1A7FA40F-C4C3-4FFB-A436-318470868906}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varErrorLogServer">
      <DTS:VariableValue
        DTS:DataType="8">AAPDW1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{963F726C-A9CD-41DE-9ADD-AF569B72E4D4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varFileLogDbName">
      <DTS:VariableValue
        DTS:DataType="8">ODSIntake</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{560E1891-6E4D-4B65-9256-5D4B9F1B87F6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varFileLogServer">
      <DTS:VariableValue
        DTS:DataType="8">AAPDW1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{39A824EB-5FC5-4EAD-842C-18A4A36A2A88}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varProcess">
      <DTS:VariableValue
        DTS:DataType="8">APIInvoiceImport</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C64D52D0-1314-4E2B-AA9B-9992F5A8BA25}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="winSCPLog">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E6D91EDD-62C5-471D-8377-56C96CB1A4E0}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="winSCPLogPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\WINscp\WINscpLog.txt</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CD941D5A-E200-4A60-A59F-83E479BF9E1B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="winSCPPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Program Files (x86)\WinSCP\winscp.exe</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Download file from SFTP"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:DelayValidation="True"
      DTS:Description="Script Task"
      DTS:DTSID="{A9159D6C-F688-4DCF-BF00-8D44ABEF55B9}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:MaxErrorCount="0"
      DTS:ObjectName="Download file from SFTP"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_a8d5d5e5871a4ddfb4880beffb02ebec"
          VSTAMajorVersion="14"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::ftpPassword,User::ftpSite,User::ftpUsername,User::localPath,User::remoteFTPDirectory,User::sshKey,User::varErrorLogDbName,User::varErrorLogServer,User::varFileLogDbName,User::varFileLogServer,User::varProcess,User::winSCPLog,User::winSCPLogPath,User::winSCPPath">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a8d5d5e5871a4ddfb4880beffb02ebec.Properties.Settings.get_Default():ST_a8d5d5e5871a4ddfb4880beffb02ebec.Properties.Sett" +
    "ings")]

namespace ST_a8d5d5e5871a4ddfb4880beffb02ebec.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using System.Data.SqlClient;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using WinSCP;
#endregion

namespace ST_a8d5d5e5871a4ddfb4880beffb02ebec
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            string winscpPath = Dts.Variables["winSCPPath"].Value.ToString();
            string username = Dts.Variables["ftpUsername"].Value.ToString();
            string password = Dts.Variables["ftpPassword"].Value.ToString();
            string ftpSite = Dts.Variables["ftpSite"].Value.ToString();
            string localPath = Dts.Variables["localPath"].Value.ToString();
            string remoteFTPDirectory = Dts.Variables["remoteFTPDirectory"].Value.ToString();
            string sshKey = Dts.Variables["sshKey"].Value.ToString();
            Boolean winSCPLog = (Boolean)Dts.Variables["winSCPLog"].Value;
            string winSCPLogPath = Dts.Variables["winSCPLogPath"].Value.ToString();
            string fileLogServer = Dts.Variables["varFileLogServer"].Value.ToString();
            string fileLogDbName = Dts.Variables["varFileLogDbName"].Value.ToString();
            string errorLogServer = Dts.Variables["varErrorLogServer"].Value.ToString();
            string errorLogDbName = Dts.Variables["varErrorLogDbName"].Value.ToString();
            string strProcess = Dts.Variables["varProcess"].Value.ToString();

            SessionOptions sessionOptions = new SessionOptions
            {
                Protocol = Protocol.Sftp,
                HostName = ftpSite,
                UserName = username,
                Password = password,
                SshHostKeyFingerprint = sshKey
            };


            try
            {
                using (Session session = new Session())
                {
                    // WinSCP .NET assembly must be in GAC to be used with SSIS,
                    // set path to WinSCP.exe explicitly, if using non-default path.
                    session.ExecutablePath = winscpPath;
                    session.DisableVersionCheck = true;

                    //if (winSCPLog)
                    //{
                    //session.SessionLogPath = @winSCPLogPath + @"WinscpSessionLog.txt";
                    //session.DebugLogPath = @winSCPLogPath + @"WinscpDebugLog.txt";
                    //}

                    // Connect
                    session.Timeout = new TimeSpan(0, 2, 0); // two minutes
                    session.Open(sessionOptions);

                    TransferOptions transferOptions = new TransferOptions();
                    transferOptions.TransferMode = TransferMode.Binary;

                    try
                    {

                        var sessionresults = session.GetFiles(remoteFTPDirectory, localPath, false, transferOptions);

                        sessionresults.Check();

                        //Log file name and datetime for each file downloaded
                        foreach (TransferEventArgs transfer in sessionresults.Transfers)
                        {
                            using (SqlConnection oRemoteConn =
                                      new SqlConnection("Data Source = " + fileLogServer + "; Initial Catalog = " + fileLogDbName + "; Integrated Security = true;"))
                                try
                                {

                                    SqlCommand oCmd = new SqlCommand();
                                    oCmd.Connection = oRemoteConn;
                                    oCmd.CommandType = CommandType.StoredProcedure;

                                    oCmd.CommandText = "dbo.usp_FileLog";
                                    oCmd.Parameters.AddWithValue("@FileName", transfer.FileName.ToString());
                                    oCmd.Parameters.AddWithValue("@Process", strProcess.ToString());

                                    oRemoteConn.Open();
                                    oCmd.ExecuteNonQuery();
                                }

                                catch (SqlException exSql)
                                {

                                    using (SqlConnection oErrorConn =
                                        new SqlConnection("Data Source = " + errorLogServer + "; Initial Catalog = " + errorLogDbName + "; Integrated Security = true;"))

                                        try
                                        {

                                            SqlCommand errorCmd = new SqlCommand();
                                            errorCmd.Connection = oErrorConn;
                                            errorCmd.CommandType = CommandType.StoredProcedure;

                                            errorCmd.CommandText = "Error.usp_ErrorInsert_ManagedErrorLog";
                                            errorCmd.Parameters.AddWithValue("@Process", strProcess.ToString());
                                            errorCmd.Parameters.AddWithValue("@Message", exSql.Message.ToString());
                                            errorCmd.Parameters.AddWithValue("@StackTrace", exSql.StackTrace.ToString());
                                            errorCmd.Parameters.AddWithValue("@Source", exSql.Source.ToString());
                                            errorCmd.Parameters.AddWithValue("@Procedure", exSql.Procedure.ToString());
                                            errorCmd.Parameters.AddWithValue("@LineNumber", exSql.LineNumber);
                                            if (exSql.InnerException != null)
                                            {
                                                errorCmd.Parameters.AddWithValue("@InnerException", exSql.InnerException.ToString());
                                            } 
                                            else
                                            {
                                                errorCmd.Parameters.AddWithValue("@InnerException", string.Empty);
                                            }
                                            errorCmd.Parameters.AddWithValue("@Number", exSql.Number);
                                            errorCmd.Parameters.AddWithValue("@State", exSql.State);
                                            errorCmd.Parameters.AddWithValue("@TargetSite", exSql.TargetSite.ToString());
                                            if (exSql.HelpLink != null)
                                            {
                                                errorCmd.Parameters.AddWithValue("@HelpLink", exSql.HelpLink.ToString());
                                            }
                                            else
                                            {
                                                errorCmd.Parameters.AddWithValue("@HelpLink", string.Empty);
                                            }
                                            errorCmd.Parameters.AddWithValue("@SQLErrorCode", exSql.ErrorCode.ToString());
                                            errorCmd.Parameters.AddWithValue("@SQLSeverity", exSql.Class.ToString());
                                            errorCmd.Parameters.AddWithValue("@Data", exSql.Data.ToString());
                                            errorCmd.Parameters.AddWithValue("@Server", exSql.Server.ToString());
                                            errorCmd.Parameters.AddWithValue("@ExceptionType", exSql.GetType().ToString());

                                            oErrorConn.Open();
                                            errorCmd.ExecuteNonQuery();

                                        }

                                        catch (SqlException errorexSql)
                                        {
                                            throw new Exception("", errorexSql);
                                        }

                                }

                            //session.RemoveFiles("/*.txt");

                            //Console.WriteLine("Download of {0} succeeded", transfer.FileName);
                        }

                    }

                    catch (Exception e)
                    {
                        Dts.Events.FireError(0, null,
                        string.Format("Error when using WinSCP to download file: {0}", e), null, 0);
                        Dts.TaskResult = (int)DTSExecResult.Failure;
                    }
                }

            }

            catch (Exception e)
            {

            }

			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_a8d5d5e5871a4ddfb4880beffb02ebec.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{A08EE8AD-A7F7-4494-BDB8-C43BC8B1DE03}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_a8d5d5e5871a4ddfb4880beffb02ebec</RootNamespace>
    <AssemblyName>ST_a8d5d5e5871a4ddfb4880beffb02ebec</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="WinSCPnet, Version=1.6.3.9407, Culture=neutral, PublicKeyToken=2271ec4a3c56d0bf, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files (x86)\WinSCP\WinSCPnet.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_a8d5d5e5871a4ddfb4880beffb02ebec</msb:CodeName>
		<msb:DisplayName>ST_a8d5d5e5871a4ddfb4880beffb02ebec</msb:DisplayName>
		<msb:ProjectId>{05BEF271-8EFA-403A-A9C3-ABF7655B3EEA}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_a8d5d5e5871a4ddfb4880beffb02ebec.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a8d5d5e5871a4ddfb4880beffb02ebec")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_a8d5d5e5871a4ddfb4880beffb02ebec")]
[assembly: AssemblyCopyright("Copyright @  2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a8d5d5e5871a4ddfb4880beffb02ebec.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a8d5d5e5871a4ddfb4880beffb02ebec.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a8d5d5e5871a4ddfb4880beffb02ebec.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a8d5d5e5871a4ddfb4880beffb02ebec.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a8d5d5e5871a4ddfb4880beffb02ebec.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_a8d5d5e5871a4ddfb4880beffb02ebec.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDACeby1wAAAAAAAAAAOAAIiALATAAACAAAAAIAAAAAAAAVj8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAAQ/AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAXB8AAAAgAAAAIAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAiAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAKAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAA4
PwAAAAAAAEgAAAACAAUAvCcAAJAWAAABAAAAAAAAAEw+AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBgAzBgAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKAigQAAAKbxEAAApyFwAAcG8SAAAKbxMAAApvFAAACgsCKBAAAApvEQAACnIvAABw
bxIAAApvEwAACm8UAAAKDAIoEAAACm8RAAAKckcAAHBvEgAACm8TAAAKbxQAAAoNAigQAAAKbxEA
AApyVwAAcG8SAAAKbxMAAApvFAAAChMEAigQAAAKbxEAAApyawAAcG8SAAAKbxMAAApvFAAAChMF
AigQAAAKbxEAAApykQAAcG8SAAAKbxMAAApvFAAAChMGAigQAAAKbxEAAApynwAAcG8SAAAKbxMA
AAqlJQAAASYCKBAAAApvEQAACnKzAABwbxIAAApvEwAACm8UAAAKJgIoEAAACm8RAAAKcs8AAHBv
EgAACm8TAAAKbxQAAAoTBwIoEAAACm8RAAAKcvEAAHBvEgAACm8TAAAKbxQAAAoTCAIoEAAACm8R
AAAKchMBAHBvEgAACm8TAAAKbxQAAAoTCQIoEAAACm8RAAAKcjcBAHBvEgAACm8TAAAKbxQAAAoT
CgIoEAAACm8RAAAKclsBAHBvEgAACm8TAAAKbxQAAAoTC3MVAAAKJRZvFgAACiUJbxcAAAolB28Y
AAAKJQhvGQAACiURBm8aAAAKEwxzGwAAChMNEQ0GbxwAAAoRDRdvHQAAChENFhgWcx4AAApvHwAA
ChENEQxvIAAACnMhAAAKEw4RDhZvIgAAChENEQURBBYRDm8jAAAKJW8kAAAKbyUAAApvJgAAChMP
OGcDAAARD28nAAAKdBMAAAETEBuNLAAAASUWcnEBAHCiJRcRB6IlGHKPAQBwoiUZEQiiJRpyuQEA
cKIoKAAACnMpAAAKExFzKgAACiUREW8rAAAKJRpvLAAACiVy9QEAcG8tAAAKJW8uAAAKchUCAHAR
EG8vAAAKbxQAAApvMAAACiYlby4AAApyKQIAcBELbxQAAApvMAAACiYREW8xAAAKbzIAAAom3bEC
AAATEhuNLAAAASUWcnEBAHCiJRcRCaIlGHKPAQBwoiUZEQqiJRpyuQEAcKIoKAAACnMpAAAKExNz
KgAAChMUERQRE28rAAAKERQabywAAAoRFHI7AgBwby0AAAoRFG8uAAAKcikCAHARC28UAAAKbzAA
AAomERRvLgAACnKHAgBwERJvMwAACm8UAAAKbzAAAAomERRvLgAACnKZAgBwERJvNAAACm8UAAAK
bzAAAAomERRvLgAACnKxAgBwERJvNQAACm8UAAAKbzAAAAomERRvLgAACnLBAgBwERJvNgAACm8U
AAAKbzAAAAomERRvLgAACnLXAgBwERJvNwAACowzAAABbzAAAAomERJvOAAACiwgERRvLgAACnLv
AgBwERJvOAAACm8UAAAKbzAAAAomKxcRFG8uAAAKcu8CAHB+OQAACm8wAAAKJhEUby4AAApyDwMA
cBESbzoAAAqMMwAAAW8wAAAKJhEUby4AAApyHwMAcBESbzsAAAqMNAAAAW8wAAAKJhEUby4AAApy
LQMAcBESbzwAAApvFAAACm8wAAAKJhESbz0AAAosIBEUby4AAApyRQMAcBESbz0AAApvFAAACm8w
AAAKJisXERRvLgAACnJFAwBwfjkAAApvMAAACiYRFG8uAAAKclkDAHAREm8+AAAKExUSFSg/AAAK
bzAAAAomERRvLgAACnJ1AwBwERJvQAAAChMWEhYoQQAACm8wAAAKJhEUby4AAApyjwMAcBESb0IA
AApvFAAACm8wAAAKJhEUby4AAApymwMAcBESb0MAAApvFAAACm8wAAAKJhEUby4AAApyqwMAcBES
b0QAAApvFAAACm8wAAAKJhETbzEAAAoRFG8yAAAKJt4PExdyyQMAcBEXc0UAAAp63gwREywHERNv
RgAACtzeAN4MEREsBxERb0YAAArcEQ9vRwAACjqN/P//3hURD3UXAAABExgRGCwHERhvRgAACtze
MRMZAigQAAAKb0gAAAoWFHLLAwBwERkoSQAAChQWb0oAAAomAigQAAAKF29LAAAK3gDeDBENLAcR
DW9GAAAK3N4DJt4AAigQAAAKFm9LAAAKKgBBxAAAAAAAADQDAABcAgAAkAUAAA8AAAAVAAABAgAA
ADQDAABtAgAAoQUAAAwAAAAAAAAAAAAAAJgCAABmAAAA/gIAALECAAAVAAABAgAAAJgCAAAZAwAA
sQUAAAwAAAAAAAAAAgAAAFECAAB6AwAAywUAABUAAAAAAAAAAAAAADECAACxAwAA4gUAADEAAAAY
AAABAgAAAPoBAAAbBAAAFQYAAAwAAAAAAAAAAAAAAPMBAAAwBAAAIwYAAAMAAAAYAAABHgIoTAAA
CioeAihNAAAKKq5+AQAABC0ecicEAHDQAwAAAihOAAAKb08AAApzUAAACoABAAAEfgEAAAQqGn4C
AAAEKh4CgAIAAAQqGn4DAAAEKh4CKFEAAAoqLnMIAAAGgAMAAAQqAABCU0pCAQABAAAAAAAMAAAA
djQuMC4zMDMxOQAAAAAFAGwAAADcBQAAI34AAEgGAABkCQAAI1N0cmluZ3MAAAAArA8AAJwEAAAj
VVMASBQAABAAAAAjR1VJRAAAAFgUAAA4AgAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPoBMwAW
AAABAAAAOwAAAAUAAAAGAAAACQAAAAEAAABRAAAAAgAAABAAAAABAAAAAgAAAAMAAAAEAAAAAQAA
AAYAAAABAAAAAQAAAAAA3AQBAAAAAAAGAEIDAgcGANEDAgcGAI4C0AYPAHYHAAAGALsChQUGACUD
hQUGAAYDhQUGALgDhQUGAGIDhQUGAHsDhQUGANIChQUGAO0CEQQKAJYDiwQKANgBiwQOABAIEAAO
AFMFEAAOAB8IEAAGAKkG/QcOAOsHEAASAOYF0QgSAAYG0QgSAIoA0QgGAAABGgUGABwGGgUGACEF
GgUGAHEC0AYGAI0IGgUGAGMGIgcGADkGcAUWADICxgQWAKICxgQWAPQBWwUGAFYCAgcKALQEiwQa
ALgHVwEaAPcAVwEGADIFGgUOAAgFEAAGADoFGgUOAN4AEAAOALkIEAAOAAwCEAAOAK4FEAAGAC0E
GgUSAIAAJgYSAHsBPgASAJcF0QgOANQHEAASAIcG0QgSANkFJgYGAAEAGgUGAO8DGgUGAM0BhQUG
APQF4wYGAD8J/QcGAIoBGgUKAHMGiwQGAAwBGgUGADYJhQUAAAAABwAAAAAAAQABAAEAEABIBVwA
OQABAAEAAAAQACkHhQdtAAEAAwAAARAAyweFB4EAAwAHAAMBAABmCAAAZQAEAAoAEQAmBTsBEQC9
AT8BEQCxAEMBBgY2AEcBVoBWCEoBVoCdAUoBUCAAAAAAhgBOBQYAAQBUJwAAAACGGMMGBgABAFwn
AAAAAIMYwwYGAAEAZCcAAAAAkwhfBk4BAQCQJwAAAACTCKUBUwEBAJcnAAAAAJMIsQFYAQEAnycA
AAAAlgieCF4BAgCmJwAAAACGGMMGBgACAK4nAAAAAJEYyQZjAQIAAAABAAsECQDDBgEAEQDDBgYA
GQDDBgoAKQDDBhAAMQDDBhAAOQDDBhAAQQDDBhAASQDDBhAAUQDDBhAAWQDDBhAAYQDDBhAAaQDD
BgYA0QDDBgYA+QDDBhUACQHDBgYAcQBeCEQAEQG0B0oAGQERBVAAIQH0A1cA2QArBFsAeQDDBgYA
eQAEBV8AeQBKARAAeQA9ARAAeQCVABAAeQDzCBAAgQDDBgYAgQA0BBAAgQBHBGYAOQHDBmsAgQAN
CXIAgQBDBXkAiQDDBgYAiQDaAH8AgQDCB4YAUQFZBAYASQEvCJEAWQG1BpcAkQDnCFcAYQF/CJwA
oQDDBhAAsQDDBgYAsQDKBaIAaQF3AagAaQEiCRAAsQA9CK8AgQEwAVsAeQH+A7UAkQFDBQYAaQFL
Cb0AwQDrAFsAwQCiAFsAwQDBAFsAqQCPAVsAqQBQBr0AwQATBsEAYQFbCcYAqQBFBr0AqQAoAskA
wQBHAs0AwQBfBFsAsQHMAL0AmQErBFsAqQBMCMkAoQErBFsAwQBKANMAqQCUBlsAwQCHAdkAwQDD
Bt8AuQAgAgYAkQAZCeYAEQF0COoAYQGGCPAAyQGfBvYAEQGqCAEAcQDDBgYA2QDDBgYAwQEeAf8A
wQEyCQgB4QDDBg4BAQHDBgYACAAUADEBCAAYADYBKQBzAJ4BLgALAHYBLgATAH8BLgAbAJ4BLgAj
AKcBLgArANABLgAzANABLgA7ANABLgBDAKcBLgBLANYBLgBTANABLgBbAO0BQwBjADYBSQBzAJ4B
YQB7ADYBYwBrADYBGwADAAEABAADAAAAYwZnAQAAxQFsAQAAoghxAQIABAADAAIABQAFAAEABgAF
AAIABwAHAASAAAABAAAAlRvrkAAAAAAAAFwAAAAEAAAAAAAAAAAAAAAWAVMAAAAAAA0AAAAAAAAA
AAAAAB8BbAQAAAAAAQAGAAMAvyQAAAAAKAGUCAAAAAAEAAAAAAAAAAAAAAAWAT4AAAAAAAQAAAAA
AAAAAAAAABYBGgUAAAAADQAAAAAAAAAAAAAAHwEXAAAAAAAAAAAAAQAAADMHAAAFAAIAAAAASW50
MzIAPE1vZHVsZT4AV2luU0NQAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9f
AFN5c3RlbS5EYXRhAGdldF9EYXRhAG1zY29ybGliAFNUX2E4ZDVkNWU1ODcxYTRkZGZiNDg4MGJl
ZmZiMDJlYmVjAERiQ29tbWFuZABTcWxDb21tYW5kAHNldF9QYXNzd29yZABnZXRfU3RhY2tUcmFj
ZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X1NvdXJjZQBnZXRfRXJyb3JDb2RlAHNldF9UcmFuc2Zlck1v
ZGUAZ2V0X01lc3NhZ2UAVmFyaWFibGUASURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0
VHlwZUZyb21IYW5kbGUAZ2V0X0ZpbGVOYW1lAHNldF9Vc2VyTmFtZQBzZXRfSG9zdE5hbWUATWlj
cm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBzZXRfQ29tbWFuZFR5cGUAR2V0VHlwZQBnZXRf
UHJvY2VkdXJlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJl
AE1ldGhvZEJhc2UAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGlu
Z3NCYXNlAE9wZXJhdGlvblJlc3VsdEJhc2UARGlzcG9zZQBnZXRfU3RhdGUARWRpdG9yQnJvd3Nh
YmxlU3RhdGUAZ2V0X1RhcmdldFNpdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdn
ZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJs
ZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmli
dXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1
dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0
cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0
ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmli
dXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAEJ5dGUAZ2V0X1ZhbHVlAEFkZFdpdGhW
YWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAHNldF9FeGVjdXRh
YmxlUGF0aABzZXRfRGlzYWJsZVZlcnNpb25DaGVjawBnZXRfSGVscExpbmsATWljcm9zb2Z0LlNx
bFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRh
c2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUX2E4ZDVkNWU1ODcx
YTRkZGZiNDg4MGJlZmZiMDJlYmVjLmRsbABzZXRfUHJvdG9jb2wAZ2V0X0l0ZW0AU3lzdGVtAEVu
dW0AcmVzb3VyY2VNYW4AQm9vbGVhbgBUaW1lU3BhbgBPcGVuAFNjcmlwdE1haW4AU2Vzc2lvbgBT
eXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlv
bgBTcWxQYXJhbWV0ZXJDb2xsZWN0aW9uAFRyYW5zZmVyRXZlbnRBcmdzQ29sbGVjdGlvbgBzZXRf
Q29ubmVjdGlvbgBEYkNvbm5lY3Rpb24AU3FsQ29ubmVjdGlvbgBFeHRlcm5hbEV4Y2VwdGlvbgBT
cWxFeGNlcHRpb24AZ2V0X0lubmVyRXhjZXB0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBDdWx0dXJl
SW5mbwBnZXRfTnVtYmVyAGdldF9MaW5lTnVtYmVyAGdldF9SZXNvdXJjZU1hbmFnZXIARXZlbnRz
T2JqZWN0V3JhcHBlcgBTcWxQYXJhbWV0ZXIAZ2V0X1NlcnZlcgBGaXJlRXJyb3IASUVudW1lcmF0
b3IAR2V0RW51bWVyYXRvcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5S
dW50aW1lLkludGVyb3BTZXJ2aWNlcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5
c3RlbS5SZXNvdXJjZXMAU1RfYThkNWQ1ZTU4NzFhNGRkZmI0ODgwYmVmZmIwMmViZWMuUHJvcGVy
dGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUX2E4ZDVkNWU1ODcxYTRk
ZGZiNDg4MGJlZmZiMDJlYmVjLlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBHZXRGaWxlcwBTZXR0
aW5ncwBGaWxlT3BlcmF0aW9uRXZlbnRBcmdzAFRyYW5zZmVyRXZlbnRBcmdzAFN5c3RlbS5Db2xs
ZWN0aW9ucwBTZXNzaW9uT3B0aW9ucwBUcmFuc2Zlck9wdGlvbnMAZ2V0X1RyYW5zZmVycwBnZXRf
UGFyYW1ldGVycwBnZXRfQ2xhc3MAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAZ2V0X0V2
ZW50cwBDb25jYXQARm9ybWF0AE9iamVjdABXaW5TQ1BuZXQAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tS
ZXN1bHQAVHJhbnNmZXJPcGVyYXRpb25SZXN1bHQAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AGdldF9D
dXJyZW50AHNldF9Tc2hIb3N0S2V5RmluZ2VycHJpbnQAc2V0X1RpbWVvdXQATW92ZU5leHQAc2V0
X0NvbW1hbmRUZXh0AGdldF9Bc3NlbWJseQBJRGljdGlvbmFyeQBFeGVjdXRlTm9uUXVlcnkARW1w
dHkAAAAAABV3AGkAbgBTAEMAUABQAGEAdABoAAAXZgB0AHAAVQBzAGUAcgBuAGEAbQBlAAAXZgB0
AHAAUABhAHMAcwB3AG8AcgBkAAAPZgB0AHAAUwBpAHQAZQAAE2wAbwBjAGEAbABQAGEAdABoAAAl
cgBlAG0AbwB0AGUARgBUAFAARABpAHIAZQBjAHQAbwByAHkAAA1zAHMAaABLAGUAeQAAE3cAaQBu
AFMAQwBQAEwAbwBnAAAbdwBpAG4AUwBDAFAATABvAGcAUABhAHQAaAAAIXYAYQByAEYAaQBsAGUA
TABvAGcAUwBlAHIAdgBlAHIAACF2AGEAcgBGAGkAbABlAEwAbwBnAEQAYgBOAGEAbQBlAAAjdgBh
AHIARQByAHIAbwByAEwAbwBnAFMAZQByAHYAZQByAAAjdgBhAHIARQByAHIAbwByAEwAbwBnAEQA
YgBOAGEAbQBlAAAVdgBhAHIAUAByAG8AYwBlAHMAcwAAHUQAYQB0AGEAIABTAG8AdQByAGMAZQAg
AD0AIAAAKTsAIABJAG4AaQB0AGkAYQBsACAAQwBhAHQAYQBsAG8AZwAgAD0AIAAAOzsAIABJAG4A
dABlAGcAcgBhAHQAZQBkACAAUwBlAGMAdQByAGkAdAB5ACAAPQAgAHQAcgB1AGUAOwAAH2QAYgBv
AC4AdQBzAHAAXwBGAGkAbABlAEwAbwBnAAATQABGAGkAbABlAE4AYQBtAGUAABFAAFAAcgBvAGMA
ZQBzAHMAAEtFAHIAcgBvAHIALgB1AHMAcABfAEUAcgByAG8AcgBJAG4AcwBlAHIAdABfAE0AYQBu
AGEAZwBlAGQARQByAHIAbwByAEwAbwBnAAARQABNAGUAcwBzAGEAZwBlAAAXQABTAHQAYQBjAGsA
VAByAGEAYwBlAAAPQABTAG8AdQByAGMAZQAAFUAAUAByAG8AYwBlAGQAdQByAGUAABdAAEwAaQBu
AGUATgB1AG0AYgBlAHIAAB9AAEkAbgBuAGUAcgBFAHgAYwBlAHAAdABpAG8AbgAAD0AATgB1AG0A
YgBlAHIAAA1AAFMAdABhAHQAZQAAF0AAVABhAHIAZwBlAHQAUwBpAHQAZQAAE0AASABlAGwAcABM
AGkAbgBrAAAbQABTAFEATABFAHIAcgBvAHIAQwBvAGQAZQAAGUAAUwBRAEwAUwBlAHYAZQByAGkA
dAB5AAALQABEAGEAdABhAAAPQABTAGUAcgB2AGUAcgAAHUAARQB4AGMAZQBwAHQAaQBvAG4AVAB5
AHAAZQAAAQBbRQByAHIAbwByACAAdwBoAGUAbgAgAHUAcwBpAG4AZwAgAFcAaQBuAFMAQwBQACAA
dABvACAAZABvAHcAbgBsAG8AYQBkACAAZgBpAGwAZQA6ACAAewAwAH0AAHFTAFQAXwBhADgAZAA1
AGQANQBlADUAOAA3ADEAYQA0AGQAZABmAGIANAA4ADgAMABiAGUAZgBmAGIAMAAyAGUAYgBlAGMA
LgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAADSubKtWwSRCrlt7
jENUXtcABCABAQgDIAABBSABARERBCABAQ4FIAEBEXkoBxoODg4ODg4ODg4ODg4SPRJBEkUSSRJN
ElESVRJRElkIBRJVEl0SYQUgABKAiQUgABKAjQYgARKAkRwDIAAcAyAADgYgAQERgJkEIAEBAgYg
AwEICAgGIAEBEYCdBSABARI9BiABARGAoQogBBKApQ4OAhJFBSAAEoCtBCAAEkkFAAEOHQ4FIAEB
ElEGIAEBEYC5BSAAEoC9ByACEoDFDhwDIAAIBCAAEmECBg4DIAAFBSAAEoDVBSAAEoDdBSAAEoDh
BiACAQ4SYQMgAAIFIAASgOUFAAIODhwIIAUCCA4ODggIAAESgOERgOkFIAASgO0HIAIBDhKA7Qi3
elxWGTTgiQiJhF3NgIDMkQgicexKPFbQvwQAAAAABAEAAAADBhJxAwYSdQMGEhACBggDBhEUBAAA
EnEEAAASdQUAAQESdQQAABIQAwAAAQQIABJxBAgAEnUECAASEAgBAAgAAAAAAB4BAAEAVAIWV3Jh
cE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfYThkNWQ1ZTU4NzFhNGRkZmI0ODgw
YmVmZmIwMmViZWMAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxOQAARwEAGi5ORVRGcmFtZXdv
cmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0
AAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2Nv
cmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3
N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAA
AAAAAABQQURQQURQtAAAACw/AAAAAAAAAAAAAEY/AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4
PwAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQ
AAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhA
AAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv
/gAAAQAAAAEA65CVGwAAAQDrkJUbPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYA
YQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAA
ALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAwADQA
YgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBh
AG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQA
XwBhADgAZAA1AGQANQBlADUAOAA3ADEAYQA0AGQAZABmAGIANAA4ADgAMABiAGUAZgBmAGIAMAAy
AGUAYgBlAGMAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANwAwADYA
MQAuADMANwAwADkAOQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwBh
ADgAZAA1AGQANQBlADUAOAA3ADEAYQA0AGQAZABmAGIANAA4ADgAMABiAGUAZgBmAGIAMAAyAGUA
YgBlAGMALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBw
AHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEAOQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUA
bQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAA
AFMAVABfAGEAOABkADUAZAA1AGUANQA4ADcAMQBhADQAZABkAGYAYgA0ADgAOAAwAGIAZQBmAGYA
YgAwADIAZQBiAGUAYwAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABT
AFQAXwBhADgAZAA1AGQANQBlADUAOAA3ADEAYQA0AGQAZABmAGIANAA4ADgAMABiAGUAZgBmAGIA
MAAyAGUAYgBlAGMAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAu
ADcAMAA2ADEALgAzADcAMAA5ADkAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMA
aQBvAG4AAAAxAC4AMAAuADcAMAA2ADEALgAzADcAMAA5ADkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAWD8AAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="201,42"
          Id="Package\Download file from SFTP"
          TopLeft="446,93" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>