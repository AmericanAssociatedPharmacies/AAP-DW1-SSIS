<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="11/14/2017 3:32:49 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="AAP-N202"
  DTS:CreatorName="AAP\sedwards"
  DTS:DTSID="{E9DC3670-0482-4399-A2FF-8E06D9AE38AC}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="13.0.2165.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="FairShare_ODSIntake_RawFile_Load"
  DTS:PackageType="5"
  DTS:VersionBuild="35"
  DTS:VersionGUID="{4DB5E6F9-AFE7-44FC-BDB8-58452797D9DE}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[AAPDW1.ODSIntake]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{F7CDDC3D-10DF-48E7-BDDD-74E12211F400}"
      DTS:ObjectName="AAPDW1.ODSIntake">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=AAPDW1;Initial Catalog=ODSIntake;Provider=SQLNCLI11.1;Integrated Security=SSPI;Packet Size=32767;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{113D1DB8-C4EB-4490-B5BE-6032B4BB02E8}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ADORecordSet">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8FF516E8-2B61-4557-8440-8D1A52CCB625}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varDateKey">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{30C87275-A5AD-48CC-9F81-C65296CD0B15}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varFileDir">
      <DTS:VariableValue
        DTS:DataType="8">\\fs1.aap.local\Server\IT Department\FairShare\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7723C904-09B9-43C3-81B6-B67BDD79FF44}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varStagingFile">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{ACA00A72-4506-4190-BE61-12837AF037D0}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{D7647D4F-1C88-4728-BAE5-35919190597C}"
        DTS:ObjectName="{D7647D4F-1C88-4728-BAE5-35919190597C}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateRowsInFirstTable"
            VarName="User::ADORecordSet" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Delete File"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:DelayValidation="True"
          DTS:Description="File System Task"
          DTS:DTSID="{85B0D812-A1F4-4579-87A4-C6CBFFEBC3B3}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Delete File"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2012; Â© 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="DeleteFile"
              TaskSourcePath="User::varStagingFile"
              TaskIsSourceVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Load Raw File"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{964C0857-E5C4-47C2-8064-9EC949B3673C}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Load Raw File"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Load Raw File\Error table"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Error table"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Error].[ErrorOutput]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Load Raw File\Error table.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[AAPDW1.ODSIntake]"
                      connectionManagerRefId="Package.ConnectionManagers[AAPDW1.ODSIntake]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Load Raw File\Error table.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Error table.Inputs[OLE DB Destination Input].Columns[ErrorDateTime]"
                          cachedDataType="dbTimeStamp"
                          cachedName="ErrorDateTime"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\Error table.Inputs[OLE DB Destination Input].ExternalColumns[ErrorDateTime]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[ErrorDateTime]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Error table.Inputs[OLE DB Destination Input].Columns[FQNFileName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1000"
                          cachedName="FQNFileName"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\Error table.Inputs[OLE DB Destination Input].ExternalColumns[FQNFileName]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[FQNFileName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Error table.Inputs[OLE DB Destination Input].Columns[FileErrorRowNumber]"
                          cachedDataType="i4"
                          cachedName="FileErrorRowNumber"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\Error table.Inputs[OLE DB Destination Input].ExternalColumns[FileErrorRowNumber]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[FileErrorRowNumber]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Error table.Inputs[OLE DB Destination Input].Columns[ErrorData]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="8000"
                          cachedName="ErrorData"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\Error table.Inputs[OLE DB Destination Input].ExternalColumns[ErrorData]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[ErrorData]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Error table.Inputs[OLE DB Destination Input].Columns[ErrorDescription]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="8000"
                          cachedName="ErrorDescription"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\Error table.Inputs[OLE DB Destination Input].ExternalColumns[ErrorDescription]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[ErrorDescription]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Error table.Inputs[OLE DB Destination Input].ExternalColumns[RowID]"
                          dataType="i4"
                          name="RowID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Error table.Inputs[OLE DB Destination Input].ExternalColumns[ErrorDateTime]"
                          dataType="dbTimeStamp"
                          name="ErrorDateTime" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Error table.Inputs[OLE DB Destination Input].ExternalColumns[FQNFileName]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="FQNFileName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Error table.Inputs[OLE DB Destination Input].ExternalColumns[FileErrorRowNumber]"
                          dataType="i4"
                          name="FileErrorRowNumber" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Error table.Inputs[OLE DB Destination Input].ExternalColumns[ErrorData]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          name="ErrorData" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Error table.Inputs[OLE DB Destination Input].ExternalColumns[ErrorDescription]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          name="ErrorDescription" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Error table.Inputs[OLE DB Destination Input].ExternalColumns[RowCreatedDate]"
                          dataType="dbTimeStamp"
                          name="RowCreatedDate" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Load Raw File\Error table.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Load Raw File\Error table.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Error table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Error table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Error table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Error table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Load Raw File\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="10">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public FairShareBuffer FairShareBuffer;

    public ErrorOutBuffer ErrorOutBuffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != FairShareBuffer)
        {
            FairShareBuffer.SetEndOfRowset();
            FairShareBuffer = null;
        }

        if (null != ErrorOutBuffer)
        {
            ErrorOutBuffer.SetEndOfRowset();
            ErrorOutBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"FairShare"))
            {
                FairShareBuffer = new FairShareBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"ErrorOut"))
            {
                ErrorOutBuffer = new ErrorOutBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public Int32 varDateKey
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["varDateKey"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String varStagingFile
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["varStagingFile"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.IO;
using System.Text.RegularExpressions;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    enum col
    {
        CustNum = 0,
        ProdNum,
        ProdDesc,
        NDC,
        Count,
        MinExpDate,
        Price,
        MonthlyQty,
        RequestedQty,
        StartDate,
        EndDate,
        ShipWeekOf,
        
        MaxCols
    };


    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    private string left(string inString, int inInt)
    {
        inString = inString.Trim();

        if (inInt > inString.Length)
            inInt = inString.Length;

        return inString.Substring(0, inInt);
    }

    private void WriteError(DateTime dt, string fn, Int32 rc, string ErrRow, string ErrDesc)
    {

        ErrorOutBuffer.AddRow();
        ErrorOutBuffer.ErrorDateTime = dt;
        ErrorOutBuffer.FQNFileName = fn;
        ErrorOutBuffer.FileErrorRowNumber = rc;
        ErrorOutBuffer.ErrorData = ErrRow;
        ErrorOutBuffer.ErrorDescription = ErrDesc;

    }

    private bool NonPrintableChars(string inp)
    {
        //Regex reg = new Regex("[^A-Za-z0-9_]");
        Regex reg = new Regex("[\x00-\x1f]");
        return (reg.IsMatch(inp));
    }


    public override void CreateNewOutputRows()
    {
        string inpFileNameAndPath = Variables.varStagingFile.ToString();
        int intDateKey = Variables.varDateKey;
        string inp;
        string[] x;
        char[] delimiterChars = { ',' };
        int MinCols = ((int)col.MaxCols) - 1;
        Int32 RowCount = -1;
        Int32 FileRowID = 0;
        string strfiledir;

        strfiledir = inpFileNameAndPath.ToString();

        using (StreamReader sr = new StreamReader(inpFileNameAndPath))
        {
            while ((inp = sr.ReadLine()) != null)

                try
                {

                    {
                        RowCount++;
                        FileRowID++;

                        //Replace any commas inside double quotes with a semicolon  
                        inp = Regex.Replace(inp, @",(?=[^""]*""(?:[^""]*""[^""]*"")*[^""]*$)", ";").ToString();

                        //Strip any double quotes. Replace double white spaces or greater with single white space, and trim leading and trailing white spaces   
                        inp = inp.Replace("\"", "").Replace("  ", " ").Replace("   ", " ").Trim().ToString();

                        // Split the inp into the array;
                        x = inp.Split(delimiterChars);

                        // Check for errors.
                        // Non-printable characters
                        //if (NonPrintableChars(inp.Replace("\t", "")) == true)
                        //{
                        //    DateTime ErrorFileDate = DateTime.Now;

                        //    WriteError(ErrorFileDate, inpFileNameAndPath, RowCount, inp, "Nonprintable data found in the row.");
                        //    continue;
                        //}


                        // Too few columns
                        if (x.GetLength(0) < MinCols)
                        {
                            DateTime ErrorFileDate = DateTime.Now;

                            WriteError(ErrorFileDate, inpFileNameAndPath, RowCount, inp, "Not enough columns in row");
                            continue;
                        }

                        //int DateKey = int.Parse(DateTime.Now.ToString("yyyyMMdd"));

                        {
                            //This will skip over the column name row
                            if (RowCount > 0)
                            {

                                // Map this to our output variables.
                                FairShareBuffer.AddRow();

                                FairShareBuffer.FileRowID = FileRowID;
                                FairShareBuffer.DateKey = intDateKey;
                                FairShareBuffer.CustNum = left(x[(int)col.CustNum].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                                FairShareBuffer.ProdNum = left(x[(int)col.ProdNum].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                                FairShareBuffer.ProdDesc = left(x[(int)col.ProdDesc].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                                FairShareBuffer.NDC = left(x[(int)col.NDC].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                                FairShareBuffer.Count = left(x[(int)col.Count].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                                FairShareBuffer.MinExpDate = left(x[(int)col.MinExpDate].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                                FairShareBuffer.Price = left(x[(int)col.Price].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                                FairShareBuffer.MonthlyQty = left(x[(int)col.MonthlyQty].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                                FairShareBuffer.RequestedQty = left(x[(int)col.RequestedQty].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                                FairShareBuffer.StartDate = left(x[(int)col.StartDate].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                                FairShareBuffer.EndDate = left(x[(int)col.EndDate].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                                FairShareBuffer.ShipWeekOf = left(x[(int)col.ShipWeekOf].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                                FairShareBuffer.FileDir = inpFileNameAndPath.ToString();
                                //FairShareBuffer.RowCreatedDate = DateTime.Now;

                            }

                        }
                    }

                }

                catch (Exception ex)
                {

                    DateTime ErrorFileDate = DateTime.Now;

                    WriteError(ErrorFileDate, inpFileNameAndPath, FileRowID, inp, ex.ToString());
                    continue;


                }
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class FairShareBuffer: ScriptBuffer

{
    public FairShareBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 FileRowID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool FileRowID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 DateKey
    {
        set
        {
            this[1] = value;
        }
    }
    public bool DateKey_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CustNum
    {
        set
        {
            this[2] = value;
        }
    }
    public bool CustNum_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ProdNum
    {
        set
        {
            this[3] = value;
        }
    }
    public bool ProdNum_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ProdDesc
    {
        set
        {
            this[4] = value;
        }
    }
    public bool ProdDesc_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String NDC
    {
        set
        {
            this[5] = value;
        }
    }
    public bool NDC_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Count
    {
        set
        {
            this[6] = value;
        }
    }
    public bool Count_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String MinExpDate
    {
        set
        {
            this[7] = value;
        }
    }
    public bool MinExpDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Price
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Price_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String MonthlyQty
    {
        set
        {
            this[9] = value;
        }
    }
    public bool MonthlyQty_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String RequestedQty
    {
        set
        {
            this[10] = value;
        }
    }
    public bool RequestedQty_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String StartDate
    {
        set
        {
            this[11] = value;
        }
    }
    public bool StartDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String EndDate
    {
        set
        {
            this[12] = value;
        }
    }
    public bool EndDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ShipWeekOf
    {
        set
        {
            this[13] = value;
        }
    }
    public bool ShipWeekOf_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FileDir
    {
        set
        {
            this[14] = value;
        }
    }
    public bool FileDir_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime RowCreatedDate
    {
        set
        {
            this[15] = value;
        }
    }
    public bool RowCreatedDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class ErrorOutBuffer: ScriptBuffer

{
    public ErrorOutBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public DateTime ErrorDateTime
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ErrorDateTime_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FQNFileName
    {
        set
        {
            this[1] = value;
        }
    }
    public bool FQNFileName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 FileErrorRowNumber
    {
        set
        {
            this[2] = value;
        }
    }
    public bool FileErrorRowNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ErrorData
    {
        set
        {
            this[3] = value;
        }
    }
    public bool ErrorData_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ErrorDescription
    {
        set
        {
            this[4] = value;
        }
    }
    public bool ErrorDescription_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime RowCreatedDate
    {
        set
        {
            this[5] = value;
        }
    }
    public bool RowCreatedDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_80462981704c4a6f979dc182270091d0.Properties.Settings.get_Default():SC_80462981704c4a6f979dc182270091d0.Properties.Sett" +
    "ings")]

namespace SC_80462981704c4a6f979dc182270091d0.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_80462981704c4a6f979dc182270091d0.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{532A383E-DAC8-486C-8A7D-B2CE1D2D92BA}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_80462981704c4a6f979dc182270091d0</RootNamespace>
    <AssemblyName>SC_80462981704c4a6f979dc182270091d0</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_80462981704c4a6f979dc182270091d0</msb:CodeName>
		<msb:DisplayName>SC_80462981704c4a6f979dc182270091d0</msb:DisplayName>
		<msb:ProjectId>{CB5F2773-28B5-4F43-A768-4EA18635EF15}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_80462981704c4a6f979dc182270091d0.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_80462981704c4a6f979dc182270091d0")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_80462981704c4a6f979dc182270091d0")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_80462981704c4a6f979dc182270091d0.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_80462981704c4a6f979dc182270091d0.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_80462981704c4a6f979dc182270091d0.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_80462981704c4a6f979dc182270091d0.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_80462981704c4a6f979dc182270091d0.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_80462981704c4a6f979dc182270091d0.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAD+J3F8AAAAAAAAAAOAAIiALATAAACgAAAAIAAAAAAAAukcA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAGhHAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAwCcAAAAgAAAAKAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAqAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAMAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACc
RwAAAAAAAEgAAAACAAUAvCkAAPQcAAABAAAAAAAAALBGAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACiqKA28SAAAKEAEEA28TAAAKMQgD
bxMAAAoQAgMWBG8UAAAKKgATMAIASgAAAAAAAAACewQAAARvOQAABgJ7BAAABANvLQAABgJ7BAAA
BARvLwAABgJ7BAAABAVvMQAABgJ7BAAABA4EbzMAAAYCewQAAAQOBW81AAAGKkZyAQAAcHMVAAAK
A28WAAAKKhswBgBeBAAAAQAAEQJ7AgAABG9EAAAGbxcAAAoKAnsCAAAEb0MAAAYLF40gAAABJRYf
LJ0TBB8LEwUVEwYWEwcGbxcAAAomBnMYAAAKEwg4+QMAAAARBhdYEwYRBxdYEwcIcg0AAHByUwAA
cCgZAAAKbxcAAAoMCHJXAABwclsAAHBvGgAACnJdAABwcmMAAHBvGgAACnJnAABwcmMAAHBvGgAA
Cm8SAAAKbxcAAAoMCBEEbxsAAAoNCRZvHAAAChEFLx0oHQAAChMJAhEJBhEGCHJvAABwKAQAAAbd
bAMAABEGFj5EAwAAAnsDAAAEbykAAAYCewMAAAQRB28JAAAGAnsDAAAEB28LAAAGAnsDAAAEAgkW
mnJdAABwcmMAAHBvGgAACnJnAABwcmMAAHBvGgAACm8SAAAKbxcAAAog9AEAACgDAAAGbw0AAAYC
ewMAAAQCCReacl0AAHByYwAAcG8aAAAKcmcAAHByYwAAcG8aAAAKbxIAAApvFwAACiD0AQAAKAMA
AAZvDwAABgJ7AwAABAIJGJpyXQAAcHJjAABwbxoAAApyZwAAcHJjAABwbxoAAApvEgAACm8XAAAK
IPQBAAAoAwAABm8RAAAGAnsDAAAEAgkZmnJdAABwcmMAAHBvGgAACnJnAABwcmMAAHBvGgAACm8S
AAAKbxcAAAog9AEAACgDAAAGbxMAAAYCewMAAAQCCRqacl0AAHByYwAAcG8aAAAKcmcAAHByYwAA
cG8aAAAKbxIAAApvFwAACiD0AQAAKAMAAAZvFQAABgJ7AwAABAIJG5pyXQAAcHJjAABwbxoAAApy
ZwAAcHJjAABwbxoAAApvEgAACm8XAAAKIPQBAAAoAwAABm8XAAAGAnsDAAAEAgkcmnJdAABwcmMA
AHBvGgAACnJnAABwcmMAAHBvGgAACm8SAAAKbxcAAAog9AEAACgDAAAGbxkAAAYCewMAAAQCCR2a
cl0AAHByYwAAcG8aAAAKcmcAAHByYwAAcG8aAAAKbxIAAApvFwAACiD0AQAAKAMAAAZvGwAABgJ7
AwAABAIJHppyXQAAcHJjAABwbxoAAApyZwAAcHJjAABwbxoAAApvEgAACm8XAAAKIPQBAAAoAwAA
Bm8dAAAGAnsDAAAEAgkfCZpyXQAAcHJjAABwbxoAAApyZwAAcHJjAABwbxoAAApvEgAACm8XAAAK
IPQBAAAoAwAABm8fAAAGAnsDAAAEAgkfCppyXQAAcHJjAABwbxoAAApyZwAAcHJjAABwbxoAAApv
EgAACm8XAAAKIPQBAAAoAwAABm8hAAAGAnsDAAAEAgkfC5pyXQAAcHJjAABwbxoAAApyZwAAcHJj
AABwbxoAAApvEgAACm8XAAAKIPQBAAAoAwAABm8jAAAGAnsDAAAEBm8XAAAKbyUAAAbeHhMKKB0A
AAoTCwIRCwYRBwgRCm8XAAAKKAQAAAbeABEIbx4AAAolDDr5+///3gwRCCwHEQhvHwAACtwqAABB
NAAAAAAAAEkAAADaAwAAIwQAAB4AAAAQAAABAgAAAEMAAAAOBAAAUQQAAAwAAAAAAAAAHgIoPAAA
BioqAgMEBSggAAAKKjoCFgOMJAAAASghAAAKKloDLAgCFigiAAAKKnKjAABwcyMAAAp6OgIXA4wk
AAABKCEAAAoqWgMsCAIXKCIAAAoqcqMAAHBzIwAACnomAhgDKCEAAAoqWgMsCAIYKCIAAAoqcqMA
AHBzIwAACnomAhkDKCEAAAoqWgMsCAIZKCIAAAoqcqMAAHBzIwAACnomAhoDKCEAAAoqWgMsCAIa
KCIAAAoqcqMAAHBzIwAACnomAhsDKCEAAAoqWgMsCAIbKCIAAAoqcqMAAHBzIwAACnomAhwDKCEA
AAoqWgMsCAIcKCIAAAoqcqMAAHBzIwAACnomAh0DKCEAAAoqWgMsCAIdKCIAAAoqcqMAAHBzIwAA
CnomAh4DKCEAAAoqWgMsCAIeKCIAAAoqcqMAAHBzIwAACnoqAh8JAyghAAAKKl4DLAkCHwkoIgAA
CipyowAAcHMjAAAKeioCHwoDKCEAAAoqXgMsCQIfCigiAAAKKnKjAABwcyMAAAp6KgIfCwMoIQAA
CipeAywJAh8LKCIAAAoqcqMAAHBzIwAACnoqAh8MAyghAAAKKl4DLAkCHwwoIgAACipyowAAcHMj
AAAKeioCHw0DKCEAAAoqXgMsCQIfDSgiAAAKKnKjAABwcyMAAAp6KgIfDgMoIQAACipeAywJAh8O
KCIAAAoqcqMAAHBzIwAACno+Ah8PA4wOAAABKCEAAAoqXgMsCQIfDygiAAAKKnKjAABwcyMAAAp6
HgIoJAAACioeAiglAAAKKh4CKCYAAAoqOgIWA4wOAAABKCEAAAoqJgIXAyghAAAKKjoCGAOMJAAA
ASghAAAKKjoCGwOMDgAAASghAAAKKn4CKCcAAAoCAnNBAAAGfQEAAAQCAnNCAAAGfQIAAAQqBirW
AnsDAAAELBICewMAAARvKgAABgIUfQMAAAQCewQAAAQsEgJ7BAAABG86AAAGAhR9BAAABCoAEzAF
AHMAAAACAAARFgorWAQGlA4EckABAHAoKAAACjMZAgUGmgIEBpQoKQAACg4EcwgAAAZ9AwAABAQG
lA4EclQBAHAoKAAACjMZAgUGmgIEBpQoKQAACg4EcywAAAZ9BAAABAYXWAoGAzKkAm9AAAAGAm89
AAAGAig+AAAGKjoCKCoAAAoCA30FAAAEKjoCKCoAAAoCA30GAAAEKpYCewYAAARvKwAACnJmAQBw
bywAAAooLQAACm8uAAAKpSQAAAEqlgJ7BgAABG8rAAAKcnwBAHBvLAAACigtAAAKby4AAAp0HgAA
ASoeAigqAAAKKq5+BwAABC0ecpoBAHDQCAAAAigvAAAKbzAAAApzMQAACoAHAAAEfgcAAAQqGn4I
AAAEKh4CgAgAAAQqGn4JAAAEKh4CKDIAAAoqLnNKAAAGgAkAAAQqAEJTSkIBAAEAAAAAAAwAAAB2
NC4wLjMwMzE5AAAAAAUAbAAAAPQMAAAjfgAAYA0AACALAAAjU3RyaW5ncwAAAACAGAAADAIAACNV
UwCMGgAAEAAAACNHVUlEAAAAnBoAAFgCAAAjQmxvYgAAAAAAAAACAAABVx2iAQkDAAAA+gEzABYA
AAEAAAAsAAAACgAAABcAAABLAAAAQQAAADIAAAANAAAAEAAAAAIAAAAFAAAAMQAAADIAAAABAAAA
BQAAAAEAAAABAAAAAABmBAEAAAAAAAYAHwNSCAYAswNSCAYAawI/CA8AxggAAAYAmALaBgYAAgPa
BgYA4wLaBgYAmgPaBgYAPwPaBgYAWAPaBgYArwLaBgYAygL9AwoAcwN0AQYAYgFtBgYAggePAAYA
/AZtBgYAkQZtBgoAuQd0AQ4Amgd0AQoAJwd0AQoACwp0AQYAtwltBgYATgI/CAYA2QdyCAYAGwfF
BhIAHgJQBBIAfwJQBBIAwgGwBgYAMwJSCAYAIgRtBhIAyQpQCQYAZgdtBgYAzwptBgYAjwePAAYA
BgFtBgYAXgBtBgYA7AZtBhYAEQDpBxYAAQDpB1cAgwoAABYAIgDpBwYAlQFtBgYAEgFtBgYA9Ara
BgAAAABkAAAAAAABAAEAAQAQAKUGAAAUAAEAAQABABAAqQcAAEkAAQAIAAEAEADGBwAASQABACwA
AQAQAO0JAABVAAEAPAABABAAbwkAAFkABQBBAAEAEAAQCQAAWQAGAEIAAAAQAHkI1QhZAAcARQAA
ARAAPwnVCHEACQBJAAMBAABXBgAARQAKAEwABgBvCQoBBgAQCQ4BBgCpBxIBBgDGBxYBAQD7CRoB
AQD7CRoBEQCWBh4BEQCyASIBEQD2ACYBBgaZACoBVoCJBi0BVoB9Bi0BVoC/AC0BVoBxAC0BVoAf
Ci0BVoAFAi0BVoDwAC0BVoASCy0BVoABCy0BVoAUAi0BVoD5AS0BVoDyAy0BVoBICS0BUCAAAAAA
xgDRAwYAAQBYIAAAAADGANwDBgABAGAgAAAAAIEA0AkxAQEAhCAAAAAAgQAdCDcBAwDaIAAAAACB
AHsJKQAIAOwgAAAAAMYAowkGAAkAjCUAAAAAhhgoCAYACQCUJQAAAACGGCgIYQAJAJ8lAAAAAIYI
gQABAAwAriUAAAAAhgidBEEBDQDFJQAAAACGCNUKAQAOANQlAAAAAIYIDgZBAQ8A6yUAAAAAhgiF
BhAAEAD1JQAAAACGCJ0FQQERAAwmAAAAAIYIeQYQABIAFiYAAAAAhgiKBUEBEwAtJgAAAACGCLsA
EAAUADcmAAAAAIYIxwRBARUATiYAAAAAhghtABAAFgBYJgAAAACGCI4EQQEXAG8mAAAAAIYIGwoQ
ABgAeSYAAAAAhgj9BUEBGQCQJgAAAACGCAECEAAaAJomAAAAAIYISQVBARsAsSYAAAAAhgjsABAA
HAC7JgAAAACGCNsEQQEdANImAAAAAIYIDgsQAB4A3SYAAAAAhgg5BkEBHwD1JgAAAACGCP0KEAAg
AAAnAAAAAIYIIQZBASEAGCcAAAAAhggQAhAAIgAjJwAAAACGCF8FQQEjADsnAAAAAIYI9QEQACQA
RicAAAAAhgg2BUEBJQBeJwAAAACGCO4DEAAmAGknAAAAAIYIdAVBAScAgScAAAAAhggRCBAAKACM
JwAAAACGCOoFQQEpAKQnAAAAAIYI4gFGASoAtCcAAAAAhggcBUEBKwDMJwAAAACGALsKBgAsANQn
AAAAAIYAwQkGACwA3CcAAAAAhgDECXEALACUJQAAAACGGCgIYQAsAOQnAAAAAIYIWQFGAS8AriUA
AAAAhggDBUEBMADzJwAAAACGCEkBEAAxANQlAAAAAIYI7ARBATIA/ScAAAAAhghrBwEAMwD1JQAA
AACGCMwFQQE0AAwmAAAAAIYIoQAQADUAFiYAAAAAhgiyBEEBNgAtJgAAAACGCAYHEAA3ADcmAAAA
AIYIsAVBATgADCgAAAAAhgjiAUYBOQBYJgAAAACGCBwFQQE6AMwnAAAAAIYAuwoGADsA1CcAAAAA
hgDBCQYAOwDcJwAAAACGAMQJcQA7ABsoAAAAAIYYKAgGADsAOygAAAAAxgGVCQYAOwA9KAAAAACB
ANAABgA7AHQoAAAAAMYAYwpMATsAOygAAAAAxgGjCQYAPwDzKAAAAACGGCgIWAE/AAIpAAAAAIYY
KAhYAUAAESkAAAAAhgjhCh8AQQA3KQAAAACGCDYBGwBBAF0pAAAAAIMYKAgGAEEAZSkAAAAAkwjV
B14BQQCRKQAAAACTCJoBYwFBAJgpAAAAAJMIpgFoAUEAoCkAAAAAlgjbCW4BQgCnKQAAAACGGCgI
BgBCAK8pAAAAAJEYLghzAUIAAAABABcEAAACAOcJAAABAL4JAAACAKIGAAADALgAAAAEAMIKAAAF
AMgAAAABAGIHAAABAM4HAAACABoJAAADADUHAAABAOgDAAABAOgDAAABAOgDAAABAOgDAAABAOgD
AAABAOgDAAABAOgDAAABAOgDAAABAOgDAAABAOgDAAABAOgDAAABAOgDAAABAOgDAAABAOgDAAAB
AOgDAAABAOgDAAABAOgDAAABAOgDAAABAOgDAAABAOgDAAABAOgDAAABAOgDAAABAOgDAAABAOgD
AAABAOgDAAABAOgDAAABAOgDAAABAOgDAAABAOgDAAABAOgDAAABAOgDAAABAOgDAAABAM4HAAAC
ABoJAAADADUHAAABAOgDAAABAOgDAAABAOgDAAABAOgDAAABAOgDAAABAOgDAAABAOgDAAABAOgD
AAABAOgDAAABAOgDAAABAOgDAAABAOgDAAABAJsJAAACADUIAAADAI0JAAAEADUHAAABABEKAAAB
ABEKAAABAOgDCQAoCAEAEQAoCAYAGQAoCAoAKQAoCBAAMQAoCBAAOQAoCBAAQQAoCBAASQAoCBAA
UQAoCBAAWQAoCBAAYQAoCBAAaQAoCAYAuQAoCAYA2QAoCBUA6QAoCAYAqQDRAwYAqQDcAwYA8QB0
BhsA8QA7BB8A8QApBCMA+QAoCBAA+QAzBCkAsQAgBBsAeQAoCBAA+QDkAEMA8QDkAEoA8QDVCVAA
CQFGBFcAcQCzClwAEQFrARsAGQHaAQYAkQAoCGEAkQBkBmsAkQBPBgEAKQEoCBAAkQC7CgYAkQDB
CQYAkQDECXEAqQAoCAYAqQB1AHkAqQAuCYAAsQAoCAYAqQAECYYAMQFbBowAqQCeCpMAOQFvCpkA
UQEkAaAAUQHwCqkAwQAoCK8A4QAoCAYACAAsAMkACAAwAM4ACAA0ANMACAA4ANgACAA8AN0ACABA
AOIACABEAOcACABIAOwACABMAPEACABQAPYACABUAPsACABYAAABCABcAAUBLgALAJcBLgATAKAB
LgAbAL8BLgAjAMgBLgArAPEBLgAzAPEBLgA7APEBLgBDAMgBLgBLAPcBLgBTAPEBLgBbAA4CQwBj
AM4AAwFrAM4AIQF7AM4A6QVzAL8BCQZzAL8BLgB1AAMAAQAEACEABwAtAAgALwAJADEAAACFAHcB
AAChBHsBAADoCncBAAASBnsBAACJBn8BAAChBXsBAAB9Bn8BAACOBXsBAAC/AH8BAADLBHsBAABx
AH8BAACSBHsBAAAfCn8BAAABBnsBAAAFAn8BAABNBXsBAADwAH8BAADfBHsBAAASC38BAAA9BnsB
AAABC38BAAAlBnsBAAAUAn8BAABjBXsBAAD5AX8BAAA6BXsBAADyA38BAAB4BXsBAAAVCH8BAADu
BXsBAADmAYMBAAAgBXsBAABdAYMBAAAHBXsBAABNAX8BAADwBHsBAABvB3cBAADQBXsBAAClAH8B
AAC2BHsBAAAKB38BAAC0BXsBAADmAYMBAAAgBXsBAADlCncBAAA6AX8BAADZB4gBAAC6AY0BAADf
CZIBAQAJAAMAAQAKAAUAAQALAAcAAQAMAAkAAQANAAsAAQAOAA0AAQAPAA8AAQAQABEAAQARABMA
AQASABUAAQATABcAAQAUABkAAQAVABsAAQAWAB0AAQAXAB8AAQAYACEAAQAZACMAAQAaACUAAQAb
ACcAAQAcACkAAQAdACsAAQAeAC0AAQAfAC8AAQAgADEAAQAhADMAAQAiADUAAQAjADcAAQAkADkA
AQAlADsAAQAmAD0AAQAnAD8AAQAoAEEAAQAtAEMAAQAuAEUAAQAvAEcAAQAwAEkAAQAxAEsAAQAy
AE0AAQAzAE8AAQA0AFEAAQA1AFMAAQA2AFUAAQA3AFcAAQA4AFkAAgBDAFsAAgBEAF0AAgBGAF8A
AgBHAGEAAQBIAGEAAgBJAGMABIAAAAEAAAAAAAAAAAAAAAAAOgAAAAQAAAAAAAAAAAAAALcArwAA
AAAADQAAAAAAAAAAAAAAwAAlCgAAAAANAAAAAAAAAAAAAADAAEIKAAAAAAQAAAAAAAAAAAAAALcA
bQYAAAAADQAAAAAAAAAAAAAAwAA/BwAAAAAAAAAAAQAAAIMIAAAKAAIAAAAASURUU1ZhcmlhYmxl
MTAwAElEVFNWYXJpYWJsZXMxMDAASURUU0V2YWx1YXRvckNvbnRleHQxMDAAU0NfODA0NjI5ODE3
MDRjNGE2Zjk3OWRjMTgyMjcwMDkxZDAASW50MzIAPE1vZHVsZT4Ac2V0X05EQwBHZXRPdXRwdXRJ
RABzZXRfRmlsZVJvd0lEAFN5c3RlbS5JTwB2YWx1ZV9fAHNldF9FcnJvckRhdGEAbXNjb3JsaWIA
cmMAc2V0X1Byb2REZXNjAEVyckRlc2MATWFya091dHB1dHNGaW5pc2hlZABSZXBsYWNlAHNldF9Q
cmljZQBkZWZhdWx0SW5zdGFuY2UASURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlw
ZUZyb21IYW5kbGUAZ2V0X3ZhclN0YWdpbmdGaWxlAHNldF9GUU5GaWxlTmFtZQBzZXRfRXJyb3JE
YXRlVGltZQBSZWFkTGluZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAGdl
dF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdz
QmFzZQBEaXNwb3NlAHNldF9Sb3dDcmVhdGVkRGF0ZQBzZXRfRW5kRGF0ZQBzZXRfTWluRXhwRGF0
ZQBzZXRfU3RhcnREYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0
cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBF
ZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRy
YWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1
cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25S
ZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5
cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNz
ZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4
ZWN1dGUAUG9zdEV4ZWN1dGUAdmFsdWUAc2V0X1NoaXBXZWVrT2YAU3lzdGVtLlJ1bnRpbWUuVmVy
c2lvbmluZwBpblN0cmluZwBUb1N0cmluZwBTdWJzdHJpbmcASXNNYXRjaABnZXRfTGVuZ3RoAEdl
dExlbmd0aABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfODA0NjI5ODE3MDRjNGE2Zjk3OWRjMTgy
MjcwMDkxZDAuZGxsAHNldF9ORENfSXNOdWxsAHNldF9GaWxlUm93SURfSXNOdWxsAHNldF9FcnJv
ckRhdGFfSXNOdWxsAHNldF9Qcm9kRGVzY19Jc051bGwAc2V0X1ByaWNlX0lzTnVsbABzZXRfRlFO
RmlsZU5hbWVfSXNOdWxsAHNldF9FcnJvckRhdGVUaW1lX0lzTnVsbABzZXRfUm93Q3JlYXRlZERh
dGVfSXNOdWxsAHNldF9FbmREYXRlX0lzTnVsbABzZXRfTWluRXhwRGF0ZV9Jc051bGwAc2V0X1N0
YXJ0RGF0ZV9Jc051bGwAc2V0X1NoaXBXZWVrT2ZfSXNOdWxsAHNldF9Qcm9kTnVtX0lzTnVsbABz
ZXRfQ3VzdE51bV9Jc051bGwAc2V0X0Vycm9yRGVzY3JpcHRpb25fSXNOdWxsAHNldF9GaWxlRXJy
b3JSb3dOdW1iZXJfSXNOdWxsAHNldF9GaWxlRGlyX0lzTnVsbABzZXRfQ291bnRfSXNOdWxsAHNl
dF9EYXRlS2V5X0lzTnVsbABzZXRfUmVxdWVzdGVkUXR5X0lzTnVsbABzZXRfTW9udGhseVF0eV9J
c051bGwAU2V0TnVsbABjb2wAZ2V0X0l0ZW0Ac2V0X0l0ZW0AU3lzdGVtAFRyaW0Ac2V0X1Byb2RO
dW0Ac2V0X0N1c3ROdW0ARW51bQByZXNvdXJjZU1hbgBmbgBTY3JpcHRNYWluAFN5c3RlbS5Db25m
aWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEludmFsaWRP
cGVyYXRpb25FeGNlcHRpb24Ac2V0X0Vycm9yRGVzY3JpcHRpb24AQ3VsdHVyZUluZm8AT3V0cHV0
TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABpbnAA
Q2hhcgBzZXRfRmlsZUVycm9yUm93TnVtYmVyAFN0cmVhbVJlYWRlcgBUZXh0UmVhZGVyAFBpcGVs
aW5lQnVmZmVyAEZhaXJTaGFyZUJ1ZmZlcgBTY3JpcHRCdWZmZXIARXJyb3JPdXRCdWZmZXIAZ2V0
X1Jlc291cmNlTWFuYWdlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIA
c2V0X0ZpbGVEaXIAV3JpdGVFcnJvcgAuY3RvcgAuY2N0b3IAT3V0cHV0SURzAFN5c3RlbS5EaWFn
bm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMA
U0NfODA0NjI5ODE3MDRjNGE2Zjk3OWRjMTgyMjcwMDkxZDAuUHJvcGVydGllcy5SZXNvdXJjZXMu
cmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDXzgwNDYyOTgxNzA0YzRhNmY5NzlkYzE4MjI3MDA5
MWQwLlByb3BlcnRpZXMAZ2V0X1JlYWRPbmx5VmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMA
R2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBNYXhDb2xzAFN5c3RlbS5UZXh0LlJlZ3VsYXJFeHBy
ZXNzaW9ucwBDb25uZWN0aW9ucwBOb25QcmludGFibGVDaGFycwBCdWZmZXJzAEZpbmlzaE91dHB1
dHMAQ3JlYXRlTmV3T3V0cHV0Um93cwBPYmplY3QAZHQAU2V0RW5kT2ZSb3dzZXQAbGVmdABTcGxp
dABnZXRfRGVmYXVsdABpbkludABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRD
b21wb25lbnQAc2V0X0NvdW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0
LlNxbFNlcnZlci5QaXBlbGluZUhvc3QAUHJpbWVPdXRwdXQAR2V0VmFsdWVXaXRoQ29udGV4dABT
Y3JpcHRDb21wb25lbnRFdmFsQ29udGV4dABnZXRfRXZhbHVhdG9yQ29udGV4dABnZXRfTm93AEFk
ZFJvdwBFcnJSb3cAUmVnZXgAQXJyYXkAc2V0X0RhdGVLZXkAZ2V0X3ZhckRhdGVLZXkAZ2V0X0Fz
c2VtYmx5AHNldF9SZXF1ZXN0ZWRRdHkAc2V0X01vbnRobHlRdHkAAAAAAAtbAAAALQAfAF0AAUUs
ACgAPwA9AFsAXgAiAF0AKgAiACgAPwA6AFsAXgAiAF0AKgAiAFsAXgAiAF0AKgAiACkAKgBbAF4A
IgBdACoAJAApAAADOwAAAyIAAAEABSAAIAAAAyAAAAcgACAAIAAAM04AbwB0ACAAZQBuAG8AdQBn
AGgAIABjAG8AbAB1AG0AbgBzACAAaQBuACAAcgBvAHcAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBw
AGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4A
IABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBu
ACAAaQBuAHMAdABlAGEAZAAuAAATRgBhAGkAcgBTAGgAYQByAGUAABFFAHIAcgBvAHIATwB1AHQA
ABV2AGEAcgBEAGEAdABlAEsAZQB5AAAddgBhAHIAUwB0AGEAZwBpAG4AZwBGAGkAbABlAABxUwBD
AF8AOAAwADQANgAyADkAOAAxADcAMAA0AGMANABhADYAZgA5ADcAOQBkAGMAMQA4ADIAMgA3ADAA
MAA5ADEAZAAwAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAABgL/Jg
TS0UTIpDiiEZDpViAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFpAyAADgMgAAgFIAIOCAgEIAEC
DhQHDA4IDh0OHQMICAgSPRE5EkEROQYAAw4ODg4FIAIODg4GIAEdDh0DBCABCAgEAAAROQkgAwES
TR0IElEFIAIBCBwDIAACAwcBCAYAAggSUQ4FIAEdCAgFIAASgJkGIAESgJ0cBQAAEoChBiABHBKA
pQgAARKAqRGArQUgABKAsQcgAgEOEoCxCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAQCAAAA
BAMAAAAEBAAAAAQFAAAABAYAAAAEBwAAAAQIAAAABAkAAAAECgAAAAQLAAAABAwAAAADBhIYAwYS
HAMGEgwDBhIQAwYSVQMGEmEDBhJlAwYSJAIGCAMGESgFIAIODggJIAUBETkOCA4OBCABAQIFIAEB
ETkLIAQBCB0IHRJNElEFIAEBElUEAAASYQQAABJlBQABARJlBAAAEiQDAAABAygACAMoAAIDKAAO
BCgAETkECAASYQQIABJlBAgAEiQIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJv
d3MBCAEAAgAAAAAAKAEAI1NDXzgwNDYyOTgxNzA0YzRhNmY5NzlkYzE4MjI3MDA5MWQwAAAFAQAA
AAAWAQARQ29weXJpZ2h0IEAgIDIwMTcAAEcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEA
VA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNAAAtAAAAM7K774BAAAAkQAA
AGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAu
MC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lz
dGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAJBH
AAAAAAAAAAAAAKpHAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAACcRwAAAAAAAAAAAAAAAF9Db3JE
bGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAY
AACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAAOwD
AAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAAB
AAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIA
RgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsARM
AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAANABiADAA
AAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBl
AAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfADgA
MAA0ADYAMgA5ADgAMQA3ADAANABjADQAYQA2AGYAOQA3ADkAZABjADEAOAAyADIANwAwADAAOQAx
AGQAMAAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAHAA
KAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AOAAwADQANgAyADkAOAAxADcAMAA0
AGMANABhADYAZgA5ADcAOQBkAGMAMQA4ADIAMgA3ADAAMAA5ADEAZAAwAC4AZABsAGwAAABIABIA
AQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAg
ADIAMAAxADcAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgA
KAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwA4ADAANAA2ADIAOQA4
ADEANwAwADQAYwA0AGEANgBmADkANwA5AGQAYwAxADgAMgAyADcAMAAwADkAMQBkADAALgBkAGwA
bAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AOAAwADQANgAyADkAOAAx
ADcAMAA0AGMANABhADYAZgA5ADcAOQBkAGMAMQA4ADIAMgA3ADAAMAA5ADEAZAAwAAAANAAIAAEA
UAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEAcwBz
AGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAAC8NwAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_80462981704c4a6f979dc182270091d0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::varDateKey,User::varStagingFile</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">66821c2c6b6591b0c178fedbb334bb97</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">d9c3376d0faef71ca0a08458c65cba645f262499</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare]"
                      hasSideEffects="true"
                      name="FairShare">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[FileRowID]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[FileRowID]"
                          name="FileRowID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[DateKey]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[DateKey]"
                          name="DateKey" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[CustNum]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[CustNum]"
                          name="CustNum" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[ProdNum]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[ProdNum]"
                          name="ProdNum" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[ProdDesc]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[ProdDesc]"
                          name="ProdDesc" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[NDC]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[NDC]"
                          name="NDC" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[Count]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[Count]"
                          name="Count" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[MinExpDate]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[MinExpDate]"
                          name="MinExpDate" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[Price]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[Price]"
                          name="Price" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[MonthlyQty]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[MonthlyQty]"
                          name="MonthlyQty" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[RequestedQty]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[RequestedQty]"
                          name="RequestedQty" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[StartDate]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[StartDate]"
                          name="StartDate" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[EndDate]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[EndDate]"
                          name="EndDate" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[ShipWeekOf]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[ShipWeekOf]"
                          name="ShipWeekOf" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[FileDir]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[FileDir]"
                          name="FileDir" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[RowCreatedDate]"
                          dataType="dbTimeStamp"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[RowCreatedDate]"
                          name="RowCreatedDate" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut]"
                      hasSideEffects="true"
                      name="ErrorOut">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[ErrorDateTime]"
                          dataType="dbTimeStamp"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[ErrorDateTime]"
                          name="ErrorDateTime" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[FQNFileName]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[FQNFileName]"
                          name="FQNFileName" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[FileErrorRowNumber]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[FileErrorRowNumber]"
                          name="FileErrorRowNumber" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[ErrorData]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[ErrorData]"
                          name="ErrorData" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[ErrorDescription]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[ErrorDescription]"
                          name="ErrorDescription" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[RowCreatedDate]"
                          dataType="dbTimeStamp"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[RowCreatedDate]"
                          name="RowCreatedDate" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Load Raw File\Staging table"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Staging table"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Staging].[FairShare]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Load Raw File\Staging table.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[AAPDW1.ODSIntake]"
                      connectionManagerRefId="Package.ConnectionManagers[AAPDW1.ODSIntake]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].Columns[FileRowID]"
                          cachedDataType="i4"
                          cachedName="FileRowID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[FileRowID]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[FileRowID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].Columns[CustNum]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="CustNum"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[CustNum]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[CustNum]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].Columns[ProdNum]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="ProdNum"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[ProdNum]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[ProdNum]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].Columns[ProdDesc]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="ProdDesc"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[ProdDesc]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[ProdDesc]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].Columns[NDC]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="NDC"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[NDC]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[NDC]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].Columns[Count]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="Count"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[Count]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[Count]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].Columns[MinExpDate]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="MinExpDate"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[MinExpDate]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[MinExpDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].Columns[Price]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="Price"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[Price]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[Price]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].Columns[MonthlyQty]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="MonthlyQty"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[MonthlyQty]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[MonthlyQty]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].Columns[RequestedQty]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="RequestedQty"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[RequestedQty]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[RequestedQty]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].Columns[StartDate]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="StartDate"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[StartDate]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[StartDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].Columns[EndDate]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="EndDate"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[EndDate]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[EndDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].Columns[DateKey]"
                          cachedDataType="i4"
                          cachedName="DateKey"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[DateKey]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[DateKey]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].Columns[FileDir]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1000"
                          cachedName="FileDir"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[FileDir]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[FileDir]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].Columns[ShipWeekOf]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="ShipWeekOf"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[ShipWeekOf]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare].Columns[ShipWeekOf]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[RowID]"
                          dataType="i4"
                          name="RowID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[FileRowID]"
                          dataType="i4"
                          name="FileRowID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[CustNum]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="CustNum" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[ProdNum]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="ProdNum" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[ProdDesc]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="ProdDesc" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[NDC]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="NDC" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[Count]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="Count" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[MinExpDate]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="MinExpDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[Price]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="Price" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[MonthlyQty]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="MonthlyQty" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[RequestedQty]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="RequestedQty" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[StartDate]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="StartDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[EndDate]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="EndDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[RowCreatedDate]"
                          dataType="dbTimeStamp"
                          name="RowCreatedDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[DateKey]"
                          dataType="i4"
                          name="DateKey" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[FileDir]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="FileDir" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[ShipWeekOf]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="ShipWeekOf" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Load Raw File\Staging table.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Staging table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Staging table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Load Raw File.Paths[ErrorOut]"
                  endId="Package\Foreach Loop Container\Load Raw File\Error table.Inputs[OLE DB Destination Input]"
                  name="ErrorOut"
                  startId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut]" />
                <path
                  refId="Package\Foreach Loop Container\Load Raw File.Paths[FairShare]"
                  endId="Package\Foreach Loop Container\Load Raw File\Staging table.Inputs[OLE DB Destination Input]"
                  name="FairShare"
                  startId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[FairShare]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Log Raw File"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{CC832054-F7A7-4934-8452-D040D15F0C2F}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log Raw File"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; Â© 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{F7CDDC3D-10DF-48E7-BDDD-74E12211F400}"
              SQLTask:SqlStatementSource="&#xA;EXEC [dbo].[usp_FileLog]&#xA;&#xA;&#x9;@FileName = ?&#xA;&#x9;, @Process = 'FairShare'&#xA;&#x9;, @IsRawFileLoaded = 1" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@FileName"
                SQLTask:DtsVariableName="User::varStagingFile"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{F2D9DE18-59E5-49F9-9D23-360BB5286A22}"
          DTS:From="Package\Foreach Loop Container\Load Raw File"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Loop Container\Log Raw File" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{214F0CF1-7C5A-4C9D-8B85-40F9C9BCA7A3}"
          DTS:From="Package\Foreach Loop Container\Load Raw File"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach Loop Container\Delete File" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{451D0C85-173F-4D7C-B60A-2CE1E7D6D33F}"
          DTS:ObjectName="{451D0C85-173F-4D7C-B60A-2CE1E7D6D33F}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::varStagingFile" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{CE646203-D828-49FC-B278-33393596C4A6}"
          DTS:ObjectName="{CE646203-D828-49FC-B278-33393596C4A6}"
          DTS:ValueIndex="1"
          DTS:VariableName="User::varDateKey" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get File Info"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{91FF5653-ECF0-4C62-83AC-09B6A1D9608E}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get File Info"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Get File Info\OLE DB Source"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="OLE DB Source"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">EXEC [dbo].[usp_Get_FairShare_File_Config]

	@FileDir = ?</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping">"@FileDir:Input",{30C87275-A5AD-48CC-9F81-C65296CD0B15};</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Get File Info\OLE DB Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[AAPDW1.ODSIntake]"
                  connectionManagerRefId="Package.ConnectionManagers[AAPDW1.ODSIntake]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Output].Columns[Source]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Source]"
                      length="500"
                      lineageId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Output].Columns[Source]"
                      name="Source"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Output].Columns[DateKey]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[DateKey]"
                      lineageId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Output].Columns[DateKey]"
                      name="DateKey"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Source]"
                      dataType="wstr"
                      length="500"
                      name="Source" />
                    <externalMetadataColumn
                      refId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[DateKey]"
                      dataType="i4"
                      name="DateKey" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Source]"
                      dataType="wstr"
                      length="500"
                      lineageId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Source]"
                      name="Source" />
                    <outputColumn
                      refId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[DateKey]"
                      dataType="i4"
                      lineageId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[DateKey]"
                      name="DateKey" />
                    <outputColumn
                      refId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get File Info\Recordset Destination"
              componentClassID="Microsoft.RecordsetDestination"
              contactInfo="Recordset Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates and populates an in-memory ADO recordset that is available outside of the data flow. Scripts and other package elements can use the recordset. For example, use a recordset to store the names of files that will be loaded into the data warehouse."
              name="Recordset Destination">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the recordset."
                  name="VariableName">User::ADORecordSet</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get File Info\Recordset Destination.Inputs[Recordset Destination Input]"
                  hasSideEffects="true"
                  name="Recordset Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get File Info\Recordset Destination.Inputs[Recordset Destination Input].Columns[Source]"
                      cachedDataType="wstr"
                      cachedLength="500"
                      cachedName="Source"
                      lineageId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Output].Columns[Source]" />
                    <inputColumn
                      refId="Package\Get File Info\Recordset Destination.Inputs[Recordset Destination Input].Columns[DateKey]"
                      cachedDataType="i4"
                      cachedName="DateKey"
                      lineageId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Output].Columns[DateKey]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Get File Info.Paths[OLE DB Source Output]"
              endId="Package\Get File Info\Recordset Destination.Inputs[Recordset Destination Input]"
              name="OLE DB Source Output"
              startId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{239E7284-119F-4345-A81A-4F82FBF1746A}"
      DTS:From="Package\Get File Info"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Foreach Loop Container" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="128,42"
          Id="Package\Foreach Loop Container\Delete File"
          TopLeft="270,114" />
        <NodeLayout
          Size="144,42"
          Id="Package\Foreach Loop Container\Load Raw File"
          TopLeft="143,31" />
        <NodeLayout
          Size="163,42"
          Id="Package\Foreach Loop Container\Log Raw File"
          TopLeft="35,109" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="192.333333333333,73">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-75.8333333333333,36"
              Start="0,0"
              End="-75.8333333333333,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.6373626373626" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.6373626373626"
                    Point2="0,14.6373626373626"
                    Point3="-4,14.6373626373626" />
                  <mssgle:LineSegment
                    End="-71.8333333333333,14.6373626373626" />
                  <mssgle:CubicBezierSegment
                    Point1="-71.8333333333333,14.6373626373626"
                    Point2="-75.8333333333333,14.6373626373626"
                    Point3="-75.8333333333333,18.6373626373626" />
                  <mssgle:LineSegment
                    End="-75.8333333333333,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="237.666666666667,73">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="96.3333333333333,41"
              Start="0,0"
              End="96.3333333333333,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.6703296703297" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.6703296703297"
                    Point2="0,16.6703296703297"
                    Point3="4,16.6703296703297" />
                  <mssgle:LineSegment
                    End="92.3333333333333,16.6703296703297" />
                  <mssgle:CubicBezierSegment
                    Point1="92.3333333333333,16.6703296703297"
                    Point2="96.3333333333333,16.6703296703297"
                    Point3="96.3333333333333,20.6703296703297" />
                  <mssgle:LineSegment
                    End="96.3333333333333,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="456,221"
          Size="456,264"
          Id="Package\Foreach Loop Container"
          TopLeft="508,172" />
        <NodeLayout
          Size="137,42"
          Id="Package\Get File Info"
          TopLeft="621,72" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="689.5,114">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="46.5,58"
              Start="0,0"
              End="46.5,50.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25"
                    Point2="0,29"
                    Point3="4,29" />
                  <mssgle:LineSegment
                    End="42.5,29" />
                  <mssgle:CubicBezierSegment
                    Point1="42.5,29"
                    Point2="46.5,29"
                    Point3="46.5,33" />
                  <mssgle:LineSegment
                    End="46.5,50.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Load Raw File">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="141,42"
          Id="Package\Foreach Loop Container\Load Raw File\Staging table"
          TopLeft="729,242" />
        <NodeLayout
          Size="163,42"
          Id="Package\Foreach Loop Container\Load Raw File\Script Component"
          TopLeft="601,96" />
        <NodeLayout
          Size="129,42"
          Id="Package\Foreach Loop Container\Load Raw File\Error table"
          TopLeft="417,231" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Load Raw File.Paths[FairShare]"
          TopLeft="708.333333333333,138">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="91.1666666666666,104"
              Start="0,0"
              End="91.1666666666666,96.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.2065613608748" />
                  <mssgle:CubicBezierSegment
                    Point1="0,38.2065613608748"
                    Point2="0,42.2065613608748"
                    Point3="4,42.2065613608748" />
                  <mssgle:LineSegment
                    End="87.1666666666666,42.2065613608748" />
                  <mssgle:CubicBezierSegment
                    Point1="87.1666666666666,42.2065613608748"
                    Point2="91.1666666666666,42.2065613608748"
                    Point3="91.1666666666666,46.2065613608748" />
                  <mssgle:LineSegment
                    End="91.1666666666666,96.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="24.2769856770833,47.2065613608748,42.6126953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Load Raw File.Paths[ErrorOut]"
          TopLeft="656.666666666667,138">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-175.166666666667,93"
              Start="0,0"
              End="-175.166666666667,85.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.7424058323208" />
                  <mssgle:CubicBezierSegment
                    Point1="0,33.7424058323208"
                    Point2="0,37.7424058323208"
                    Point3="-4,37.7424058323208" />
                  <mssgle:LineSegment
                    End="-171.166666666667,37.7424058323208" />
                  <mssgle:CubicBezierSegment
                    Point1="-171.166666666667,37.7424058323208"
                    Point2="-175.166666666667,37.7424058323208"
                    Point3="-175.166666666667,41.7424058323208" />
                  <mssgle:LineSegment
                    End="-175.166666666667,85.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-107.129720052083,42.7424058323208,39.0927734375,9.5732421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Load Raw File\Staging table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Load Raw File\Error table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Get File Info">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="182,42"
          Id="Package\Get File Info\Recordset Destination"
          TopLeft="446,183" />
        <NodeLayout
          Size="150,42"
          Id="Package\Get File Info\OLE DB Source"
          TopLeft="383,75" />
        <EdgeLayout
          Id="Package\Get File Info.Paths[OLE DB Source Output]"
          TopLeft="458,117">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="79,66"
              Start="0,0"
              End="79,58.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29" />
                  <mssgle:CubicBezierSegment
                    Point1="0,29"
                    Point2="0,33"
                    Point3="4,33" />
                  <mssgle:LineSegment
                    End="75,33" />
                  <mssgle:CubicBezierSegment
                    Point1="75,33"
                    Point2="79,33"
                    Point3="79,37" />
                  <mssgle:LineSegment
                    End="79,58.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Get File Info\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>