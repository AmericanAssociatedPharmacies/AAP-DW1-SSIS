<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="2/28/2019 3:14:09 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="AAP-N097"
  DTS:CreatorName="AAP\yhaile"
  DTS:DTSID="{7E4681B1-C6A6-450D-AFA2-9B95CD090DA5}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="13.0.2165.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="CHAAPImport_CopyFile_Arete"
  DTS:PackageType="5"
  DTS:VersionBuild="100"
  DTS:VersionGUID="{0986B628-5E92-4BF2-B27A-A58D800EBB92}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9393518D-CA0C-44E9-8929-BD810D2F8151}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ftpPassword">
      <DTS:VariableValue
        DTS:DataType="8">B]qHk3$d4sSj0$6x</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B9063241-B2E2-416C-8686-89D72001A15E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ftpSite">
      <DTS:VariableValue
        DTS:DataType="8">ftp.areterx.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1BB7E9E3-F6C8-44F9-A55E-42C47F0CBB17}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ftpUsername">
      <DTS:VariableValue
        DTS:DataType="8">AAP</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{936EDD62-EDC0-4CE9-BDEE-7CE42F8B2357}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="localPath">
      <DTS:VariableValue
        DTS:DataType="8">\\fs1.aap.local\Server\IT Department\Cardinal\CHAAPImport\*.txt</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{79692077-1648-4A25-808B-BF7E47444B24}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="remoteFTPDirectory">
      <DTS:VariableValue
        DTS:DataType="8">/uploads/</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7AB4AA50-A5BA-4D2D-B62B-90434B7FC5B0}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sshKey">
      <DTS:VariableValue
        DTS:DataType="8">ssh-ed25519 256 22:32:1b:22:f6:b9:39:b7:ce:9b:e1:0a:55:8a:58:fa</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F0A6FE91-A038-4EFD-B57B-53E6C351D5B7}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="winSCPLog">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{60056481-7A6B-4E8E-A2D1-BB039662CB1A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="winSCPLogPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\WINscp\WINscpLog.txt</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AE66D6EB-92E8-4E95-BF97-B5DBDA797945}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="winSCPPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Program Files (x86)\WinSCP\winscp.exe</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Copy file on Arete's SFTP server"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:DelayValidation="True"
      DTS:Description="Script Task"
      DTS:DTSID="{F8397851-70C5-4C08-BE00-24E37CD212B9}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:MaxErrorCount="0"
      DTS:ObjectName="Copy file on Arete's SFTP server"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_4f973d98b3b2412791527777fb19a15a"
          VSTAMajorVersion="14"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::ftpPassword,User::ftpSite,User::ftpUsername,User::localPath,User::remoteFTPDirectory,User::sshKey,User::winSCPLog,User::winSCPLogPath,User::winSCPPath">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4f973d98b3b2412791527777fb19a15a.Properties.Settings.get_Default():ST_4f973d98b3b2412791527777fb19a15a.Properties.Sett" +
    "ings")]

namespace ST_4f973d98b3b2412791527777fb19a15a.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_4f973d98b3b2412791527777fb19a15a.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{6ABA3136-CE0D-404B-A365-073884E29B7D}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_4f973d98b3b2412791527777fb19a15a</RootNamespace>
    <AssemblyName>ST_4f973d98b3b2412791527777fb19a15a</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="WinSCPnet, Version=1.6.3.9407, Culture=neutral, PublicKeyToken=2271ec4a3c56d0bf, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files (x86)\WinSCP\WinSCPnet.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using System.Data.SqlClient;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using WinSCP;
#endregion

namespace ST_4f973d98b3b2412791527777fb19a15a
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            string winscpPath = Dts.Variables["winSCPPath"].Value.ToString();
            string username = Dts.Variables["ftpUsername"].Value.ToString();
            string password = Dts.Variables["ftpPassword"].Value.ToString();
            string ftpSite = Dts.Variables["ftpSite"].Value.ToString();
            string remoteFTPDirectory = Dts.Variables["remoteFTPDirectory"].Value.ToString();
            string localPath = Dts.Variables["localPath"].Value.ToString();
            string sshKey = Dts.Variables["sshKey"].Value.ToString();
            Boolean winSCPLog = (Boolean)Dts.Variables["winSCPLog"].Value;
            string winSCPLogPath = Dts.Variables["winSCPLogPath"].Value.ToString();
            //string fileLogServer = Dts.Variables["varFileLogServer"].Value.ToString();
            //string fileLogDbName = Dts.Variables["varFileLogDbName"].Value.ToString();
            //string errorLogServer = Dts.Variables["varErrorLogServer"].Value.ToString();
            //string errorLogDbName = Dts.Variables["varErrorLogDbName"].Value.ToString();
            //string strProcess = Dts.Variables["varProcess"].Value.ToString();

            SessionOptions sessionOptions = new SessionOptions
            {
                Protocol = Protocol.Sftp,
                HostName = ftpSite,
                UserName = username,
                Password = password,
                SshHostKeyFingerprint = sshKey
            };


            try
            {
                using (Session session = new Session())
                {
                    // WinSCP .NET assembly must be in GAC to be used with SSIS,
                    // set path to WinSCP.exe explicitly, if using non-default path.
                    session.ExecutablePath = winscpPath;
                    session.DisableVersionCheck = true;

                    //if (winSCPLog)
                    //{
                    //session.SessionLogPath = @winSCPLogPath + @"WinscpSessionLog.txt";
                    //session.DebugLogPath = @winSCPLogPath + @"WinscpDebugLog.txt";
                    //}

                    // Connect
                    session.Timeout = new TimeSpan(0, 2, 0); // two minutes
                    session.Open(sessionOptions);

                    TransferOptions transferOptions = new TransferOptions();
                    transferOptions.TransferMode = TransferMode.Binary;

                    try
                    {

                        session.PutFiles(localPath, remoteFTPDirectory, false, transferOptions);
                        /*
                        sessionresults.Check();

                        //Log file name and datetime for each file downloaded
                        foreach (RemovalEventArgs removal in sessionresults.Removals)
                        {
                            using (SqlConnection oRemoteConn =
                                      new SqlConnection("Data Source = " + fileLogServer + "; Initial Catalog = " + fileLogDbName + "; Integrated Security = true;"))
                                try
                                {

                                    SqlCommand oCmd = new SqlCommand();
                                    oCmd.Connection = oRemoteConn;
                                    oCmd.CommandType = CommandType.StoredProcedure;

                                    oCmd.CommandText = "dbo.usp_FileLog";
                                    oCmd.Parameters.AddWithValue("@FileName", removal.FileName.ToString());
                                    oCmd.Parameters.AddWithValue("@Process", strProcess.ToString());

                                    oRemoteConn.Open();
                                    oCmd.ExecuteNonQuery();
                                }

                                catch (SqlException exSql)
                                {

                                    using (SqlConnection oErrorConn =
                                        new SqlConnection("Data Source = " + errorLogServer + "; Initial Catalog = " + errorLogDbName + "; Integrated Security = true;"))

                                        try
                                        {

                                            SqlCommand errorCmd = new SqlCommand();
                                            errorCmd.Connection = oErrorConn;
                                            errorCmd.CommandType = CommandType.StoredProcedure;

                                            errorCmd.CommandText = "Error.usp_ErrorInsert_ManagedErrorLog";
                                            errorCmd.Parameters.AddWithValue("@Process", strProcess.ToString());
                                            errorCmd.Parameters.AddWithValue("@Message", exSql.Message.ToString());
                                            errorCmd.Parameters.AddWithValue("@StackTrace", exSql.StackTrace.ToString());
                                            errorCmd.Parameters.AddWithValue("@Source", exSql.Source.ToString());
                                            errorCmd.Parameters.AddWithValue("@Procedure", exSql.Procedure.ToString());
                                            errorCmd.Parameters.AddWithValue("@LineNumber", exSql.LineNumber);
                                            if (exSql.InnerException != null)
                                            {
                                                errorCmd.Parameters.AddWithValue("@InnerException", exSql.InnerException.ToString());
                                            }
                                            else
                                            {
                                                errorCmd.Parameters.AddWithValue("@InnerException", String.Empty);
                                            }
                                            errorCmd.Parameters.AddWithValue("@Number", exSql.Number);
                                            errorCmd.Parameters.AddWithValue("@State", exSql.State);
                                            errorCmd.Parameters.AddWithValue("@TargetSite", exSql.TargetSite.ToString());
                                            if (exSql.HelpLink != null)
                                            {
                                                errorCmd.Parameters.AddWithValue("@HelpLink", exSql.HelpLink.ToString());
                                            } else
                                            {
                                                errorCmd.Parameters.AddWithValue("@HelpLink", String.Empty);
                                            }
                                            errorCmd.Parameters.AddWithValue("@SQLErrorCode", exSql.ErrorCode.ToString());
                                            errorCmd.Parameters.AddWithValue("@SQLSeverity", exSql.Class.ToString());
                                            errorCmd.Parameters.AddWithValue("@Data", exSql.Data.ToString());
                                            errorCmd.Parameters.AddWithValue("@Server", exSql.Server.ToString());
                                            errorCmd.Parameters.AddWithValue("@ExceptionType", exSql.GetType().ToString());

                                            oErrorConn.Open();
                                            errorCmd.ExecuteNonQuery();

                                        }

                                        catch (SqlException errorexSql)
                                        {
                                            throw new Exception("", errorexSql);
                                        }

                                }

                           //session.RemoveFiles("/E:/server/LocalUser/cardinal/");

                            //Console.WriteLine("Download of {0} succeeded", transfer.FileName);
                        } */

                    }

                    catch (Exception e)
                    {
                        Dts.Events.FireError(0, null,
                        string.Format("Error when using WinSCP to copy file: {0}", e), null, 0);
                        Dts.TaskResult = (int)DTSExecResult.Failure;
                    }
                }

            }

            catch (Exception e)
            {

            }

			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_4f973d98b3b2412791527777fb19a15a</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_4f973d98b3b2412791527777fb19a15a</msb:DisplayName>
		<msb:ProjectId>{EC0BCD18-EA96-41D4-B32F-CA27B5FC391F}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_4f973d98b3b2412791527777fb19a15a.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_4f973d98b3b2412791527777fb19a15a")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_4f973d98b3b2412791527777fb19a15a")]
[assembly: AssemblyCopyright("Copyright @  2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4f973d98b3b2412791527777fb19a15a.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4f973d98b3b2412791527777fb19a15a.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4f973d98b3b2412791527777fb19a15a.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_4f973d98b3b2412791527777fb19a15a.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_4f973d98b3b2412791527777fb19a15a.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_4f973d98b3b2412791527777fb19a15a.dll">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
AACGGPYEBgABAHwiAAAAAIMY9gQGAAEAhCIAAAAAkwjEBNsAAQCwIgAAAACTCBMB4AABALciAAAA
AJMIHwHlAAEAvyIAAAAAlghIBusAAgDGIgAAAACGGPYEBgACAM4iAAAAAJEY/ATwAAIAAAABAC8D
CQD2BAEAEQD2BAYAGQD2BAoAKQD2BBAAMQD2BBAAOQD2BBAAQQD2BBAASQD2BBAAUQD2BBAAWQD2
BBAAYQD2BBAAaQD2BAYAoQD2BAYAyQD2BBUA2QD2BAYAcQAPBi0A4QDIBTIA6QAoBDcA8QAlAz0A
qQBPA0EAeQD2BAYAeQAbBEUAeQDZABAAeQDMABAAeQBlABAAeQB7BhAAgQD2BAYAgQBYAxAAgQBr
A0wACQH2BFEAgQCVBlgAgQBaBF8AiQD2BAYAiQCCAGUAgQDWBWwA4QAlBncAKQEwBn0AIQHsBIMA
4QBUBgEAMQFvAQYAcQD2BAYAqQD2BAYAOQG6AIwAOQGhBpUAsQD2BJsA0QD2BAYACAAUAL4ACAAY
AMMAKQBzACsBLgALAAMBLgATAAwBLgAbACsBLgAjADQBLgArAF0BLgAzAF0BLgA7AF0BLgBDADQB
LgBLAGMBLgBTAF0BLgBbAHoBQwBjAMMASQBzACsBYQB7AMMAYwBrAMMAGwADAAEABAADAAAAyAT0
AAAAMwH5AAAATAb+AAIABAADAAIABQAFAAEABgAFAAIABwAHAASAAAABAAAAlRs9jAAAAAAAADgA
AAAEAAAAAAAAAAAAAACjAFwAAAAAAA0AAAAAAAAAAAAAAKwAgwMAAAAAAQAGAAMAvyQAAAAAtQA+
BgAAAAAEAAAAAAAAAAAAAACjADEEAAAAAA0AAAAAAAAAAAAAAKwAEQAAAAAAAAAAAAEAAABHBQAA
BQACAAAAAAAAPE1vZHVsZT4AV2luU0NQAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2
YWx1ZV9fAFNUXzRmOTczZDk4YjNiMjQxMjc5MTUyNzc3N2ZiMTlhMTVhAG1zY29ybGliAHNldF9Q
YXNzd29yZABkZWZhdWx0SW5zdGFuY2UAc2V0X1RyYW5zZmVyTW9kZQBWYXJpYWJsZQBJRGlzcG9z
YWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBzZXRfVXNlck5hbWUAc2V0
X0hvc3ROYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdl
dF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RN
b2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARGlzcG9zZQBFZGl0b3JCcm93c2FibGVT
dGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmli
dXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5
VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3Jr
QXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0
aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9k
dWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50
cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGli
aWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcA
VG9TdHJpbmcAc2V0X0V4ZWN1dGFibGVQYXRoAHNldF9EaXNhYmxlVmVyc2lvbkNoZWNrAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5T
Y3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF80Zjk3
M2Q5OGIzYjI0MTI3OTE1Mjc3NzdmYjE5YTE1YS5kbGwAc2V0X1Byb3RvY29sAGdldF9JdGVtAFN5
c3RlbQBFbnVtAHJlc291cmNlTWFuAEJvb2xlYW4AVGltZVNwYW4AT3BlbgBTY3JpcHRNYWluAFNl
c3Npb24AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJl
ZmxlY3Rpb24ARXhjZXB0aW9uAEN1bHR1cmVJbmZvAGdldF9SZXNvdXJjZU1hbmFnZXIARXZlbnRz
T2JqZWN0V3JhcHBlcgBGaXJlRXJyb3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBT
eXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfNGY5NzNk
OThiM2IyNDEyNzkxNTI3Nzc3ZmIxOWExNWEuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2Vz
AERlYnVnZ2luZ01vZGVzAFNUXzRmOTczZDk4YjNiMjQxMjc5MTUyNzc3N2ZiMTlhMTVhLlByb3Bl
cnRpZXMAZ2V0X1ZhcmlhYmxlcwBQdXRGaWxlcwBTZXR0aW5ncwBTZXNzaW9uT3B0aW9ucwBUcmFu
c2Zlck9wdGlvbnMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAZ2V0X0V2ZW50cwBGb3Jt
YXQAT2JqZWN0AFdpblNDUG5ldABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABUcmFuc2Zlck9w
ZXJhdGlvblJlc3VsdABzZXRfU3NoSG9zdEtleUZpbmdlcnByaW50AHNldF9UaW1lb3V0AGdldF9B
c3NlbWJseQAAAAAVdwBpAG4AUwBDAFAAUABhAHQAaAAAF2YAdABwAFUAcwBlAHIAbgBhAG0AZQAA
F2YAdABwAFAAYQBzAHMAdwBvAHIAZAAAD2YAdABwAFMAaQB0AGUAACVyAGUAbQBvAHQAZQBGAFQA
UABEAGkAcgBlAGMAdABvAHIAeQAAE2wAbwBjAGEAbABQAGEAdABoAAANcwBzAGgASwBlAHkAABN3
AGkAbgBTAEMAUABMAG8AZwAAG3cAaQBuAFMAQwBQAEwAbwBnAFAAYQB0AGgAAFNFAHIAcgBvAHIA
IAB3AGgAZQBuACAAdQBzAGkAbgBnACAAVwBpAG4AUwBDAFAAIAB0AG8AIABjAG8AcAB5ACAAZgBp
AGwAZQA6ACAAewAwAH0AAHFTAFQAXwA0AGYAOQA3ADMAZAA5ADgAYgAzAGIAMgA0ADEAMgA3ADkA
MQA1ADIANwA3ADcANwBmAGIAMQA5AGEAMQA1AGEALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBl
AHMAbwB1AHIAYwBlAHMAAAAAADuNB+Nl5aZBmKoQHmslxW0ABCABAQgDIAABBSABARERBCABAQ4F
IAEBEWERBwsODg4ODg4OEj0SQRJFEkkEIAAScQQgABJ1BSABEnkcAyAAHAMgAA4GIAEBEYCBBCAB
AQIGIAMBCAgIBiABARGAhQUgAQESPQYgAQERgIkKIAQSgI0ODgISRQUgABKAkQUAAg4OHAggBQII
Dg4OCAgAARKAnRGAoQUgABKApQcgAgEOEoClCLd6XFYZNOCJCImEXc2AgMyRCCJx7Eo8VtC/BAAA
AAAEAQAAAAMGElkDBhJdAwYSEAIGCAMGERQEAAASWQQAABJdBQABARJdBAAAEhADAAABBAgAElkE
CAASXQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAA
ACgBACNTVF80Zjk3M2Q5OGIzYjI0MTI3OTE1Mjc3NzdmYjE5YTE1YQAABQEAAAAAFgEAEUNvcHly
aWdodCBAICAyMDE5AABHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29y
a0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJl
c291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVy
ZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJj
ZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAADQMgAAAAAAAAAAAADq
MgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3DIAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2Nv
cmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAPYyVGwAAAQA9jJUbPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAFQAXwA0AGYAOQA3ADMAZAA5ADgAYgAzAGIAMgA0ADEAMgA3ADkAMQA1ADIANwA3ADcANwBm
AGIAMQA5AGEAMQA1AGEAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
NwAwADYAMQAuADMANQA5ADAAMQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABT
AFQAXwA0AGYAOQA3ADMAZAA5ADgAYgAzAGIAMgA0ADEAMgA3ADkAMQA1ADIANwA3ADcANwBmAGIA
MQA5AGEAMQA1AGEALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAA
AEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEAOQAAACoAAQABAEwAZQBnAGEAbABUAHIA
YQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBh
AG0AZQAAAFMAVABfADQAZgA5ADcAMwBkADkAOABiADMAYgAyADQAMQAyADcAOQAxADUAMgA3ADcA
NwA3AGYAYgAxADkAYQAxADUAYQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBl
AAAAAABTAFQAXwA0AGYAOQA3ADMAZAA5ADgAYgAzAGIAMgA0ADEAMgA3ADkAMQA1ADIANwA3ADcA
NwBmAGIAMQA5AGEAMQA1AGEAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADcAMAA2ADEALgAzADUAOQAwADEAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYA
ZQByAHMAaQBvAG4AAAAxAC4AMAAuADcAMAA2ADEALgAzADUAOQAwADEAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAA/DIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="179,59"
          Id="Package\Copy file on Arete's SFTP server"
          TopLeft="393,78" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>