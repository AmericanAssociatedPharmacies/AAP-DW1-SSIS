<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/1/2017 1:46:54 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="AAP-N202"
  DTS:CreatorName="AAP\sedwards"
  DTS:DTSID="{D9F12411-E17C-4506-8287-4C1E3953EAFB}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="13.0.2165.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="ClaimsDDS_FDS_SFTP"
  DTS:PackageType="5"
  DTS:VersionBuild="99"
  DTS:VersionGUID="{FCA1B0E2-D103-4A0E-8D01-F9B2BAD96633}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E70268CC-D094-4827-89EC-7F2423A123B4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ftpPassword">
      <DTS:VariableValue
        DTS:DataType="8">GZ3xL5EB</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{27BD3D3C-9847-4C14-BCCE-72FE0B4BC008}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ftpSite">
      <DTS:VariableValue
        DTS:DataType="8">mft.fdsrx.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BCD61F16-17BE-451E-A731-7BB32C922E2C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ftpUsername">
      <DTS:VariableValue
        DTS:DataType="8">mdmaap</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{92B0DBF1-3249-4BEE-88DC-230F6564BB04}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="localPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\DBA</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A80778CC-3015-4B11-A246-A5401DE36087}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="remoteFTPDirectory">
      <DTS:VariableValue
        DTS:DataType="8">/</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1BBA8F2E-A35D-425D-9A17-DFB1F5B931FC}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sshKey">
      <DTS:VariableValue
        DTS:DataType="8">ssh-rsa 2048 bc:d7:d1:07:84:eb:4e:77:48:c2:b6:07:c0:8b:7c:47</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B1D0C781-57AF-4ACD-A713-A954145C019C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varErrorLogDbName">
      <DTS:VariableValue
        DTS:DataType="8">ODSIntake</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0D704111-27A0-4699-ADFA-6F76BB86B633}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varErrorLogServer">
      <DTS:VariableValue
        DTS:DataType="8">AAPDW1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{45C50CA7-1778-40C6-8346-14A2A6E56A48}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varFileLogDbName">
      <DTS:VariableValue
        DTS:DataType="8">ODSIntake</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DC4A0F01-7E1B-4DA5-8C57-0DDCFBA3B0A8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varFileLogServer">
      <DTS:VariableValue
        DTS:DataType="8">AAPDW1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0816E9DF-D56B-404B-AC67-2FCE9DE0E636}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varProcess">
      <DTS:VariableValue
        DTS:DataType="8">FDS</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5260C838-2467-488D-8960-6EA7DE70FA34}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="winSCPLog">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B9EEA1F1-ACB1-46BE-BD03-75FC34BD5943}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="winSCPLogPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\WINscp\WINscpLog.txt</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AE397F2A-4F75-4200-8C68-CC017B80352C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="winSCPPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Program Files (x86)\WinSCP\winscp.exe</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Download using WinSCP"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{863E264B-6B8F-4587-9659-E7A13ACC9829}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Download using WinSCP"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_33e4c95f70634264aa03ed5f160cdac3"
          VSTAMajorVersion="14"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::ftpPassword,User::ftpSite,User::ftpUsername,User::localPath,User::remoteFTPDirectory,User::sshKey,User::varErrorLogDbName,User::varErrorLogServer,User::varFileLogDbName,User::varFileLogServer,User::varProcess,User::winSCPLog,User::winSCPLogPath,User::winSCPPath">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_33e4c95f70634264aa03ed5f160cdac3.Properties.Settings.get_Default():ST_33e4c95f70634264aa03ed5f160cdac3.Properties.Sett" +
    "ings")]

namespace ST_33e4c95f70634264aa03ed5f160cdac3.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using System.Data.SqlClient;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using WinSCP;
#endregion

namespace ST_33e4c95f70634264aa03ed5f160cdac3
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            string winscpPath = Dts.Variables["winSCPPath"].Value.ToString();
            string username = Dts.Variables["ftpUsername"].Value.ToString();
            string password = Dts.Variables["ftpPassword"].Value.ToString();
            string ftpSite = Dts.Variables["ftpSite"].Value.ToString();
            string localPath = Dts.Variables["localPath"].Value.ToString();
            string remoteFTPDirectory = Dts.Variables["remoteFTPDirectory"].Value.ToString();
            string sshKey = Dts.Variables["sshKey"].Value.ToString();
            Boolean winSCPLog = (Boolean)Dts.Variables["winSCPLog"].Value;
            string winSCPLogPath = Dts.Variables["winSCPLogPath"].Value.ToString();
            string fileLogServer = Dts.Variables["varFileLogServer"].Value.ToString();
            string fileLogDbName = Dts.Variables["varFileLogDbName"].Value.ToString();
            string errorLogServer = Dts.Variables["varErrorLogServer"].Value.ToString();
            string errorLogDbName = Dts.Variables["varErrorLogDbName"].Value.ToString();
            string strProcess = Dts.Variables["varProcess"].Value.ToString();


            SessionOptions sessionOptions = new SessionOptions
                {
                    Protocol = Protocol.Sftp,
                    HostName = ftpSite,
                    UserName = username,
                    Password = password,
                    SshHostKeyFingerprint = sshKey
                };


            //try
            //{
            //    using (Session session = new Session())
            //    {
            //        // WinSCP .NET assembly must be in GAC to be used with SSIS,
            //        // set path to WinSCP.exe explicitly, if using non-default path.
            //        session.ExecutablePath = winscpPath;
            //        session.DisableVersionCheck = true;

            //        //if (winSCPLog)
            //        //{
            //        //    session.SessionLogPath = @winSCPLogPath + @"WinscpSessionLog.txt";
            //        //    session.DebugLogPath = @winSCPLogPath + @"WinscpDebugLog.txt";
            //        //}

            //        // Connect
            //        session.Timeout = new TimeSpan(0, 2, 0); // two minutes
            //        session.Open(sessionOptions);

            //        TransferOptions transferOptions = new TransferOptions();
            //        transferOptions.TransferMode = TransferMode.Binary;

            //        try
            //        {

            //            var sessionresults = session.GetFiles(remoteFTPDirectory, localPath, false, transferOptions);

            //            sessionresults.Check();

            //            //Log file name and datetime for each file downloaded
            //            foreach (TransferEventArgs transfer in sessionresults.Transfers)
            //            {
            //                using (SqlConnection oRemoteConn =
            //                          new SqlConnection("Data Source = " + fileLogServer + "; Initial Catalog = " + fileLogDbName + "; Integrated Security = true;"))

            //                    try
            //                    {

            //                        SqlCommand oCmd = new SqlCommand();
            //                        oCmd.Connection = oRemoteConn;
            //                        oCmd.CommandType = CommandType.StoredProcedure;

            //                        oCmd.CommandText = "dbo.usp_FileLog";
            //                        oCmd.Parameters.AddWithValue("@FileName", transfer.FileName.ToString());
            //                        oCmd.Parameters.AddWithValue("@Process", strProcess.ToString());

            //                        oRemoteConn.Open();
            //                        oCmd.ExecuteNonQuery();
            //                    }

            //                    catch (SqlException exSql)
            //                    {

            //                        using (SqlConnection oErrorConn =
            //                            new SqlConnection("Data Source = " + errorLogServer + "; Initial Catalog = " + errorLogDbName + "; Integrated Security = true;"))

            //                            try
            //                            {

            //                                SqlCommand errorCmd = new SqlCommand();
            //                                errorCmd.Connection = oErrorConn;
            //                                errorCmd.CommandType = CommandType.StoredProcedure;

            //                                errorCmd.CommandText = "Error.usp_ErrorInsert_ManagedErrorLog";
            //                                errorCmd.Parameters.AddWithValue("@Process", strProcess.ToString());
            //                                errorCmd.Parameters.AddWithValue("@Message", exSql.Message.ToString());
            //                                errorCmd.Parameters.AddWithValue("@StackTrace", exSql.StackTrace.ToString());
            //                                errorCmd.Parameters.AddWithValue("@Source", exSql.Source.ToString());
            //                                errorCmd.Parameters.AddWithValue("@Procedure", exSql.Procedure.ToString());
            //                                errorCmd.Parameters.AddWithValue("@LineNumber", exSql.LineNumber);
            //                                errorCmd.Parameters.AddWithValue("@InnerException", exSql.InnerException.ToString());
            //                                errorCmd.Parameters.AddWithValue("@Number", exSql.Number);
            //                                errorCmd.Parameters.AddWithValue("@State", exSql.State);
            //                                errorCmd.Parameters.AddWithValue("@TargetSite", exSql.TargetSite.ToString());
            //                                errorCmd.Parameters.AddWithValue("@HelpLink", exSql.HelpLink.ToString());
            //                                errorCmd.Parameters.AddWithValue("@SQLErrorCode", exSql.ErrorCode.ToString());
            //                                errorCmd.Parameters.AddWithValue("@SQLSeverity", exSql.Class.ToString());
            //                                errorCmd.Parameters.AddWithValue("@Data", exSql.Data.ToString());
            //                                errorCmd.Parameters.AddWithValue("@Server", exSql.Server.ToString());
            //                                errorCmd.Parameters.AddWithValue("@ExceptionType", exSql.GetType().ToString());

            //                                oErrorConn.Open();
            //                                errorCmd.ExecuteNonQuery();

            //                            }

            //                            catch (SqlException errorexSql)
            //                            {
            //                                throw new Exception("", errorexSql);
            //                            }

            //                    }

            //                session.RemoveFiles("/*.zip");

            //                //Console.WriteLine("Download of {0} succeeded", transfer.FileName);
            //            }

            //        }

            //        catch (Exception e)
            //        {
            //            Dts.Events.FireError(0, null,
            //            string.Format("Error when using WinSCP to download file: {0}", e), null, 0);
            //            Dts.TaskResult = (int)DTSExecResult.Failure;
            //        }
            //    }

            //}

            //catch (Exception e)
            //{

            //}

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_33e4c95f70634264aa03ed5f160cdac3.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{BFE7073D-ED9C-4B58-8FA2-E56B9EAE6DD1}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_33e4c95f70634264aa03ed5f160cdac3</RootNamespace>
    <AssemblyName>ST_33e4c95f70634264aa03ed5f160cdac3</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="WinSCPnet">
      <HintPath>C:\Program Files (x86)\WinSCP\WinSCPnet.dll</HintPath>
      <Private>True</Private>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_33e4c95f70634264aa03ed5f160cdac3</msb:CodeName>
		<msb:DisplayName>ST_33e4c95f70634264aa03ed5f160cdac3</msb:DisplayName>
		<msb:ProjectId>{37EAB256-C6C3-425B-BD90-E7E9FBB6BC8D}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_33e4c95f70634264aa03ed5f160cdac3.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_33e4c95f70634264aa03ed5f160cdac3")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_33e4c95f70634264aa03ed5f160cdac3")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_33e4c95f70634264aa03ed5f160cdac3.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_33e4c95f70634264aa03ed5f160cdac3.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_33e4c95f70634264aa03ed5f160cdac3.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_33e4c95f70634264aa03ed5f160cdac3.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_33e4c95f70634264aa03ed5f160cdac3.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_33e4c95f70634264aa03ed5f160cdac3.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAF6A3F8AAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAAcjEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACAxAABPAAAAAEAAAGwEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAeBEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAGwEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABU
MQAAAAAAAEgAAAACAAUAuCIAALANAAABAAAAAAAAAGgwAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAwD2AQAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAomAigQAAAKbxEAAApyFwAAcG8SAAAKbxMAAApvFAAACgoCKBAAAApvEQAACnIvAABw
bxIAAApvEwAACm8UAAAKCwIoEAAACm8RAAAKckcAAHBvEgAACm8TAAAKbxQAAAoMAigQAAAKbxEA
AApyVwAAcG8SAAAKbxMAAApvFAAACiYCKBAAAApvEQAACnJrAABwbxIAAApvEwAACm8UAAAKJgIo
EAAACm8RAAAKcpEAAHBvEgAACm8TAAAKbxQAAAoNAigQAAAKbxEAAApynwAAcG8SAAAKbxMAAAql
GwAAASYCKBAAAApvEQAACnKzAABwbxIAAApvEwAACm8UAAAKJgIoEAAACm8RAAAKcs8AAHBvEgAA
Cm8TAAAKbxQAAAomAigQAAAKbxEAAApy8QAAcG8SAAAKbxMAAApvFAAACiYCKBAAAApvEQAACnIT
AQBwbxIAAApvEwAACm8UAAAKJgIoEAAACm8RAAAKcjcBAHBvEgAACm8TAAAKbxQAAAomAigQAAAK
bxEAAApyWwEAcG8SAAAKbxMAAApvFAAACiZzFQAACiUWbxYAAAolCG8XAAAKJQZvGAAACiUHbxkA
AAolCW8aAAAKJgIoEAAAChZvGwAACioeAigcAAAKKh4CKB0AAAoqrn4BAAAELR5ycQEAcNADAAAC
KB4AAApvHwAACnMgAAAKgAEAAAR+AQAABCoafgIAAAQqHgKAAgAABCoafgMAAAQqHgIoIQAACiou
cwgAAAaAAwAABCpCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAIBAAAI34AAHQE
AADUBQAAI1N0cmluZ3MAAAAASAoAAOQBAAAjVVMALAwAABAAAAAjR1VJRAAAADwMAAB0AQAAI0Js
b2IAAAAAAAAAAgAAAVcdogEJAwAAAPoBMwAWAAABAAAAIAAAAAUAAAAGAAAACQAAAAEAAAAhAAAA
AgAAABAAAAABAAAAAgAAAAMAAAAEAAAAAQAAAAUAAAABAAAAAQAAAAAAowMBAAAAAAAGAFMCiAQG
AOICiAQGAJ8BdQQPAPwEAAAGAMwBNgQGADYCNgQGABcCNgQGAMkCNgQGAHMCNgQGAIwCNgQGAOMB
NgQGAP4BEAMKAKcCUgMKAB4BUgMGAOgD4QMGAIIBdQQGAH4F4QMGAFgEqAQGAEgEIQQOAFIBjQMO
ALMBjQMOADoBDAQGAGcBiAQKAHsDUgMSAD4FyQASAIIAyQAGAPkD4QMWAFEFLgAWAM8DLgAGAOkA
4QMGAIsA4QMGAMgFNgQAAAAAJQAAAAAAAQABAAEAEAABBAEAOQABAAEAAAAQAK8ECwVFAAEAAwAA
ARAASAULBVkAAwAHAAMBAABwBQAAPQAEAAoAEQDtA3oAEQAOAX4AEQByAIIABgZUAIYAVoBgBYkA
VoDuAIkAUCAAAAAAhgAHBAYAAQBSIgAAAACGGGgEBgABAFoiAAAAAIMYaAQGAAEAYiIAAAAAkwhU
BI0AAQCOIgAAAACTCPYAkgABAJUiAAAAAJMIAgGXAAEAnSIAAAAAlgiPBZ0AAgCkIgAAAACGGGgE
BgACAKwiAAAAAJEYbgSiAAIAAAABAAoDCQBoBAEAEQBoBAYAGQBoBAoAKQBoBBAAMQBoBBAAOQBo
BBAAQQBoBBAASQBoBBAAUQBoBBAAWQBoBBAAYQBoBBAAaQBoBAYAgQBoBAYAqQBoBBUAuQBoBAYA
cQBoBSIAwQA6BScAyQDYAywA0QAAAzIAiQAqAzYA4QBoBAYA4QDLAzoA4QC8ABAA4QCvABAA4QBl
ABAA4QCqBRAAwQCbBQEAcQBoBAYAiQBoBAYA8QCdAEAA8QDEBUcAkQBoBE0AsQBoBAYACAAUAHAA
CAAYAHUAKQBzAN0ALgALALUALgATAL4ALgAbAN0ALgAjAOYALgArAA8BLgAzAA8BLgA7AA8BLgBD
AOYALgBLABUBLgBTAA8BLgBbACwBQwBjAHUASQBzAN0AYQB7AHUAYwBrAHUAGwADAAEABAADAAAA
WASmAAAAFgGrAAAAkwWwAAIABAADAAIABQAFAAEABgAFAAIABwAHAASAAAABAAAA6R1/HQAAAAAA
AAEAAAAEAAAAAAAAAAAAAABVAFwAAAAAAA0AAAAAAAAAAAAAAF4AMwMAAAAABAAAAAAAAAAAAAAA
VQDhAwAAAAANAAAAAAAAAAAAAABeADUAAAAAAAEABwACADMqAAAAAGcAhQUAAAAAAAAAAAEAAAC5
BAAABQACAAAAAAAAU1RfMzNlNGM5NWY3MDYzNDI2NGFhMDNlZDVmMTYwY2RhYzMAPE1vZHVsZT4A
V2luU0NQAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1zY29ybGliAHNl
dF9QYXNzd29yZABkZWZhdWx0SW5zdGFuY2UAVmFyaWFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0
VHlwZUZyb21IYW5kbGUAc2V0X1VzZXJOYW1lAHNldF9Ib3N0TmFtZQBNaWNyb3NvZnQuU3FsU2Vy
dmVyLkR0cy5SdW50aW1lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNv
dXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGlu
Z3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERl
YnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93
c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0
dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0
cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9u
c0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRy
aWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0
dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAdmFsdWUAU3lz
dGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlw
dFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmpl
Y3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfMzNlNGM5NWY3MDYzNDI2NGFhMDNlZDVm
MTYwY2RhYzMuZGxsAHNldF9Qcm90b2NvbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1h
bgBCb29sZWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6
YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AQ3VsdHVyZUluZm8AZ2V0X1Jlc291cmNlTWFuYWdlcgAu
Y3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2Vy
dmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF8zM2U0Yzk1ZjcwNjM0MjY0YWEwM2VkNWYxNjBjZGFj
My5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfMzNlNGM5
NWY3MDYzNDI2NGFhMDNlZDVmMTYwY2RhYzMuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNldHRp
bmdzAFNlc3Npb25PcHRpb25zAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAE9iamVjdABX
aW5TQ1BuZXQAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAc2V0X1NzaEhvc3RLZXlGaW5nZXJw
cmludABnZXRfQXNzZW1ibHkAAAAAABV3AGkAbgBTAEMAUABQAGEAdABoAAAXZgB0AHAAVQBzAGUA
cgBuAGEAbQBlAAAXZgB0AHAAUABhAHMAcwB3AG8AcgBkAAAPZgB0AHAAUwBpAHQAZQAAE2wAbwBj
AGEAbABQAGEAdABoAAAlcgBlAG0AbwB0AGUARgBUAFAARABpAHIAZQBjAHQAbwByAHkAAA1zAHMA
aABLAGUAeQAAE3cAaQBuAFMAQwBQAEwAbwBnAAAbdwBpAG4AUwBDAFAATABvAGcAUABhAHQAaAAA
IXYAYQByAEYAaQBsAGUATABvAGcAUwBlAHIAdgBlAHIAACF2AGEAcgBGAGkAbABlAEwAbwBnAEQA
YgBOAGEAbQBlAAAjdgBhAHIARQByAHIAbwByAEwAbwBnAFMAZQByAHYAZQByAAAjdgBhAHIARQBy
AHIAbwByAEwAbwBnAEQAYgBOAGEAbQBlAAAVdgBhAHIAUAByAG8AYwBlAHMAcwAAcVMAVABfADMA
MwBlADQAYwA5ADUAZgA3ADAANgAzADQAMgA2ADQAYQBhADAAMwBlAGQANQBmADEANgAwAGMAZABh
AGMAMwAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAJTZgduvGvlJ
stNyHU7R4q8ABCABAQgDIAABBSABARERBCABAQ4FIAEBEVEGBwQODg4OBCAAEmEEIAASZQUgARJp
HAMgABwDIAAOBSABARF1BgABEnkRfQUgABKAgQcgAgEOEoCBCLd6XFYZNOCJCImEXc2AgMyRCCJx
7Eo8VtC/BAAAAAAEAQAAAAMGEkkDBhJNAwYSEAIGCAMGERQEAAASSQQAABJNBQABARJNBAAAEhAD
AAABBAgAEkkECAASTQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dz
AQgBAAIAAAAAACgBACNTVF8zM2U0Yzk1ZjcwNjM0MjY0YWEwM2VkNWYxNjBjZGFjMwAABQEAAAAA
FgEAEUNvcHlyaWdodCBAICAyMDE3AABHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQO
FEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDS0AAAAzsrvvgEAAACRAAAAbFN5
c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAs
IEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0u
UmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAASDEAAAAA
AAAAAAAAYjEAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFQxAAAAAAAAAAAAAAAAX0NvckRsbE1h
aW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAEAQAAAAAAAAAAAAAEAQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAH8d6R0AAAEAfx3pHT8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBHADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAEwDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBUAF8AMwAzAGUANABjADkANQBmADcAMAA2ADMANAAyADYANABhAGEAMAAzAGUAZAA1AGYA
MQA2ADAAYwBkAGEAYwAzAAAAPAAOAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADcANgA1ADcALgA3ADUANQAxAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQA
XwAzADMAZQA0AGMAOQA1AGYANwAwADYAMwA0ADIANgA0AGEAYQAwADMAZQBkADUAZgAxADYAMABj
AGQAYQBjADMALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMA
bwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEANwAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBk
AGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0A
ZQAAAFMAVABfADMAMwBlADQAYwA5ADUAZgA3ADAANgAzADQAMgA2ADQAYQBhADAAMwBlAGQANQBm
ADEANgAwAGMAZABhAGMAMwAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAA
AABTAFQAXwAzADMAZQA0AGMAOQA1AGYANwAwADYAMwA0ADIANgA0AGEAYQAwADMAZQBkADUAZgAx
ADYAMABjAGQAYQBjADMAAABAAA4AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4A
MAAuADcANgA1ADcALgA3ADUANQAxAAAARAAOAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANwA2ADUANwAuADcANQA1ADEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAHQxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="194,42"
          Id="Package\Download using WinSCP"
          TopLeft="382,175" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>