<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="11/14/2017 3:32:49 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="AAP-N202"
  DTS:CreatorName="AAP\sedwards"
  DTS:DelayValidation="True"
  DTS:DTSID="{3ED6C819-7E45-4D05-860C-5864310A1612}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="13.0.2165.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="KPI_AllyScripts_ODSIntake_DataLoad"
  DTS:PackageType="5"
  DTS:VersionBuild="38"
  DTS:VersionGUID="{E70E94B5-008A-4148-8A98-393EE1A6F9FE}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[AAPDW1.ODSIntake]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{CB94D7DB-EBAE-4FC0-A319-5672F3C66187}"
      DTS:ObjectName="AAPDW1.ODSIntake">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=AAPDW1;Initial Catalog=ODSIntake;Provider=SQLNCLI11.1;Integrated Security=SSPI;Packet Size=32767;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{36C981CE-E81C-409A-9AB5-382CC3779A10}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ADORecordSet">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0FBCC1CD-CC36-4017-91D9-528C827CCFD2}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="varDateKey">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C3278927-5FB7-4DB5-A69A-2941ADE2A66D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varFileArchive">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6C9956BE-671E-412C-BF0A-5BB55628F548}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varFileDir">
      <DTS:VariableValue
        DTS:DataType="8">\\fs1.aap.local\Server\IT Department\__Projects\KPI Dashboard - 2018 Goals\Goal 1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B2CD1536-6F95-48EF-9D7A-CD7672CBECA8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varStagingFile">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:DelayValidation="True"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{1574F3B2-8BD9-4EDE-A8AB-B892034DB9FC}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{220A5813-E00D-4AEC-8245-FF741F939918}"
        DTS:ObjectName="{220A5813-E00D-4AEC-8245-FF741F939918}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateRowsInFirstTable"
            VarName="User::ADORecordSet" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Copy File to Archive Folder"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:DelayValidation="True"
          DTS:Description="File System Task"
          DTS:DTSID="{90CE08CF-E192-48C6-8854-12BC04B4C85F}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Copy File to Archive Folder"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskOverwriteDestFile="True"
              TaskSourcePath="User::varStagingFile"
              TaskIsSourceVariable="True"
              TaskDestinationPath="User::varFileArchive"
              TaskIsDestinationVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Delete File"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:DelayValidation="True"
          DTS:Description="File System Task"
          DTS:DTSID="{650F598C-A4F8-4B69-87BD-6A10CE39C99D}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Delete File"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="DeleteFile"
              TaskSourcePath="User::varStagingFile"
              TaskIsSourceVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Load Raw File"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{F984E8F5-0396-4D3D-A844-A3F80CA80960}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Load Raw File"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Error].[ErrorOutput]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[AAPDW1.ODSIntake]"
                      connectionManagerRefId="Package.ConnectionManagers[AAPDW1.ODSIntake]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ErrorDateTime]"
                          cachedDataType="dbTimeStamp"
                          cachedName="ErrorDateTime"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ErrorDateTime]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[ErrorDateTime]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[FQNFileName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1000"
                          cachedName="FQNFileName"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FQNFileName]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[FQNFileName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[FileErrorRowNumber]"
                          cachedDataType="i4"
                          cachedName="FileErrorRowNumber"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FileErrorRowNumber]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[FileErrorRowNumber]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ErrorData]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="8000"
                          cachedName="ErrorData"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ErrorData]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[ErrorData]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ErrorDescription]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="8000"
                          cachedName="ErrorDescription"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ErrorDescription]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[ErrorDescription]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RowID]"
                          dataType="i4"
                          name="RowID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ErrorDateTime]"
                          dataType="dbTimeStamp"
                          name="ErrorDateTime" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FQNFileName]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="FQNFileName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FileErrorRowNumber]"
                          dataType="i4"
                          name="FileErrorRowNumber" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ErrorData]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          name="ErrorData" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ErrorDescription]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          name="ErrorDescription" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RowCreatedDate]"
                          dataType="dbTimeStamp"
                          name="RowCreatedDate" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Load Raw File\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="10">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public KPIAllyScriptsOutBuffer KPIAllyScriptsOutBuffer;

    public ErrorOutBuffer ErrorOutBuffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != KPIAllyScriptsOutBuffer)
        {
            KPIAllyScriptsOutBuffer.SetEndOfRowset();
            KPIAllyScriptsOutBuffer = null;
        }

        if (null != ErrorOutBuffer)
        {
            ErrorOutBuffer.SetEndOfRowset();
            ErrorOutBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"KPIAllyScriptsOut"))
            {
                KPIAllyScriptsOutBuffer = new KPIAllyScriptsOutBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"ErrorOut"))
            {
                ErrorOutBuffer = new ErrorOutBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public Int32 varDateKey
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["varDateKey"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String varStagingFile
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["varStagingFile"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.IO;
using System.Text.RegularExpressions;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    enum col
    {
        Pharmacy = 0,
        State,
        AAPNumber,
        APINumber,
        Date,
        RXReceived,
        RXFilled,
        Transferred,
        
        MaxCols
    };


    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    private string left(string inString, int inInt)
    {
        inString = inString.Trim();

        if (inInt > inString.Length)
            inInt = inString.Length;

        return inString.Substring(0, inInt);
    }

    private void WriteError(DateTime dt, string fn, Int32 rc, string ErrRow, string ErrDesc)
    {

        ErrorOutBuffer.AddRow();
        ErrorOutBuffer.ErrorDateTime = dt;
        ErrorOutBuffer.FQNFileName = fn;
        ErrorOutBuffer.FileErrorRowNumber = rc;
        ErrorOutBuffer.ErrorData = ErrRow;
        ErrorOutBuffer.ErrorDescription = ErrDesc;

    }

    private bool NonPrintableChars(string inp)
    {
        //Regex reg = new Regex("[^A-Za-z0-9_]");
        Regex reg = new Regex("[\x00-\x1f]");
        return (reg.IsMatch(inp));
    }


    public override void CreateNewOutputRows()
    {
        string inpFileNameAndPath = Variables.varStagingFile.ToString();
        int intDateKey = Variables.varDateKey;
        string inp;
        string[] x;
        char[] delimiterChars = { ',' };
        int MinCols = ((int)col.MaxCols) - 1;
        Int32 RowCount = -1;
        Int32 FileRowID = 0;
        string strfiledir;

        strfiledir = inpFileNameAndPath.ToString();

        using (StreamReader sr = new StreamReader(inpFileNameAndPath))
        {
            while ((inp = sr.ReadLine()) != null)

                try
                {

                    {
                        RowCount++;
                        FileRowID++;

                        ////Replace any commas inside double quotes with a semicolon  
                        //inp = Regex.Replace(inp, @",(?=[^""]*""(?:[^""]*""[^""]*"")*[^""]*$)", ";").ToString();

                        //inp = inp.Replace(",", ";");

                        //Strip any double quotes. Replace double white spaces or greater with single white space, and trim leading and trailing white spaces   
                        inp = inp.Replace("\"", "").Replace("  ", " ").Replace("   ", " ").Trim().ToString();

                        // Split the inp into the array;
                        x = inp.Split(delimiterChars);

                        // Check for errors.
                        // Non-printable characters
                        //if (NonPrintableChars(inp.Replace("\t", "")) == true)
                        //{
                        //    DateTime ErrorFileDate = DateTime.Now;

                        //    WriteError(ErrorFileDate, inpFileNameAndPath, RowCount, inp, "Nonprintable data found in the row.");
                        //    continue;
                        //}


                        // Too few columns
                        if (x.GetLength(0) < MinCols)
                        {
                            DateTime ErrorFileDate = DateTime.Now;

                            WriteError(ErrorFileDate, inpFileNameAndPath, RowCount, inp, "Not enough columns in row");
                            continue;
                        }

                        //int DateKey = int.Parse(DateTime.Now.ToString("yyyyMMdd"));

                        {
                            //This will skip over the column name row
                            if (RowCount > 0)
                            {

                                // Map this to our output variables.
                                KPIAllyScriptsOutBuffer.AddRow();

                                KPIAllyScriptsOutBuffer.FileRowID = FileRowID;
                                KPIAllyScriptsOutBuffer.Pharmacy = left(x[(int)col.Pharmacy].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 255);
                                KPIAllyScriptsOutBuffer.State = left(x[(int)col.State].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 255);
                                KPIAllyScriptsOutBuffer.AAPNumber = left(x[(int)col.AAPNumber].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 255);
                                KPIAllyScriptsOutBuffer.APINumber = left(x[(int)col.APINumber].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 255);
                                KPIAllyScriptsOutBuffer.Date = left(x[(int)col.Date].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 255);
                                KPIAllyScriptsOutBuffer.RXReceived = left(x[(int)col.RXReceived].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 255);
                                KPIAllyScriptsOutBuffer.RXFilled = left(x[(int)col.RXFilled].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 255);
                                KPIAllyScriptsOutBuffer.Transferred = left(x[(int)col.Transferred].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 255);
                                KPIAllyScriptsOutBuffer.FileProcessed = inpFileNameAndPath.ToString();
                                KPIAllyScriptsOutBuffer.RowCreatedDate = DateTime.Now;

                            }

                        }
                    }

                }

                catch (Exception ex)
                {

                    DateTime ErrorFileDate = DateTime.Now;

                    WriteError(ErrorFileDate, inpFileNameAndPath, FileRowID, inp, ex.ToString());
                    continue;


                }
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class KPIAllyScriptsOutBuffer: ScriptBuffer

{
    public KPIAllyScriptsOutBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 FileRowID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool FileRowID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Pharmacy
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Pharmacy_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String State
    {
        set
        {
            this[2] = value;
        }
    }
    public bool State_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String AAPNumber
    {
        set
        {
            this[3] = value;
        }
    }
    public bool AAPNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String APINumber
    {
        set
        {
            this[4] = value;
        }
    }
    public bool APINumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Date
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Date_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String RXReceived
    {
        set
        {
            this[6] = value;
        }
    }
    public bool RXReceived_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String RXFilled
    {
        set
        {
            this[7] = value;
        }
    }
    public bool RXFilled_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Transferred
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Transferred_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FileProcessed
    {
        set
        {
            this[9] = value;
        }
    }
    public bool FileProcessed_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime RowCreatedDate
    {
        set
        {
            this[10] = value;
        }
    }
    public bool RowCreatedDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class ErrorOutBuffer: ScriptBuffer

{
    public ErrorOutBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public DateTime ErrorDateTime
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ErrorDateTime_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FQNFileName
    {
        set
        {
            this[1] = value;
        }
    }
    public bool FQNFileName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 FileErrorRowNumber
    {
        set
        {
            this[2] = value;
        }
    }
    public bool FileErrorRowNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ErrorData
    {
        set
        {
            this[3] = value;
        }
    }
    public bool ErrorData_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ErrorDescription
    {
        set
        {
            this[4] = value;
        }
    }
    public bool ErrorDescription_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime RowCreatedDate
    {
        set
        {
            this[5] = value;
        }
    }
    public bool RowCreatedDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_80462981704c4a6f979dc182270091d0.Properties.Settings.get_Default():SC_80462981704c4a6f979dc182270091d0.Properties.Sett" +
    "ings")]

namespace SC_80462981704c4a6f979dc182270091d0.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_80462981704c4a6f979dc182270091d0.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{532A383E-DAC8-486C-8A7D-B2CE1D2D92BA}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_80462981704c4a6f979dc182270091d0</RootNamespace>
    <AssemblyName>SC_80462981704c4a6f979dc182270091d0</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_80462981704c4a6f979dc182270091d0</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_80462981704c4a6f979dc182270091d0</msb:DisplayName>
		<msb:ProjectId>{CB5F2773-28B5-4F43-A768-4EA18635EF15}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_80462981704c4a6f979dc182270091d0.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_80462981704c4a6f979dc182270091d0")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_80462981704c4a6f979dc182270091d0")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_80462981704c4a6f979dc182270091d0.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_80462981704c4a6f979dc182270091d0.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_80462981704c4a6f979dc182270091d0.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_80462981704c4a6f979dc182270091d0.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_80462981704c4a6f979dc182270091d0.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_80462981704c4a6f979dc182270091d0.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
YQDIBxAAaQDIBwYAuQDIBwYA2QDIBxUA6QDIBwYAqQDaAwYAqQDlAwYA8QAUBhsA8QA1BB8A8QAj
BCMA+QDIBxAA+QAtBCkAsQAaBBsAeQDIBxAA8QANAUIA8QB1CUgACQFABE8AcQBJClQAEQGKARsA
GQH5AQYAkQDIB1kAkQAEBmMAkQDvBQEAKQHIBxAAkQBRCgYAkQBhCQYAkQBkCWkAqQDIBwYAqQBt
AHEAqQDOCHgAsQDIBwYAqQCkCH4AMQH7BYQAqQA0CosAOQEFCpEAUQFDAZgAUQGHCqEAwQDIB6cA
4QDIBwYACAAsAMEACAAwAMYACAA0AMsACAA4ANAACAA8ANUACABAANoACABEAN8ACABIAOQACABM
AOkALgALAHsBLgATAIQBLgAbAKMBLgAjAKwBLgArANUBLgAzANUBLgA7ANUBLgBDAKwBLgBLANsB
LgBTANUBLgBbAPIBQwBjAMYAAwFrAMYAIQF7AMYAqQRzAKMByQRzAKMBLgBtAAMAAQAEABcABwAj
AAgAJQAJACcAAAB9AFsBAACMBF8BAABvCmMBAADfBV8BAAA2AmMBAABqBV8BAAAFB2MBAACsBV8B
AAD3BmMBAACXBV8BAAAYAmMBAABaBV8BAAACAWMBAAD6BF8BAADTAGMBAAC2BF8BAADgAGMBAADK
BF8BAADwAGMBAADhBF8BAAAOAmcBAABQBV8BAAB8AWcBAAAnBV8BAABsAWMBAAAQBV8BAAATB1sB
AADBBV8BAACdAGMBAAChBF8BAACSBmMBAAB7BV8BAAAOAmcBAABQBV8BAAB8ClsBAABZAWMBAACF
B2wBAADZAXEBAAB/CXYBAQAJAAMAAQAKAAUAAQALAAcAAQAMAAkAAQANAAsAAQAOAA0AAQAPAA8A
AQAQABEAAQARABMAAQASABUAAQATABcAAQAUABkAAQAVABsAAQAWAB0AAQAXAB8AAQAYACEAAQAZ
ACMAAQAaACUAAQAbACcAAQAcACkAAQAdACsAAQAeAC0AAQAjAC8AAQAkADEAAQAlADMAAQAmADUA
AQAnADcAAQAoADkAAQApADsAAQAqAD0AAQArAD8AAQAsAEEAAQAtAEMAAQAuAEUAAgA5AEcAAgA6
AEkAAgA8AEsAAgA9AE0AAQA+AE0AAgA/AE8ABIAAAAEAAAAAAAAAAAAAAAAAOgAAAAQAAAAAAAAA
AAAAAK8ApwAAAAAADQAAAAAAAAAAAAAAuAC7CQAAAAANAAAAAAAAAAAAAAC4ANgJAAAAAAQAAAAA
AAAAAAAAAK8ADQYAAAAADQAAAAAAAAAAAAAAuADHBgAAAAAAAAAAAQAAACMIAAAKAAIAAAAAAABJ
RFRTVmFyaWFibGUxMDAASURUU1ZhcmlhYmxlczEwMABJRFRTRXZhbHVhdG9yQ29udGV4dDEwMABT
Q184MDQ2Mjk4MTcwNGM0YTZmOTc5ZGMxODIyNzAwOTFkMABJbnQzMgA8TW9kdWxlPgBHZXRPdXRw
dXRJRABzZXRfRmlsZVJvd0lEAFN5c3RlbS5JTwB2YWx1ZV9fAHNldF9FcnJvckRhdGEAbXNjb3Js
aWIAcmMARXJyRGVzYwBNYXJrT3V0cHV0c0ZpbmlzaGVkAHNldF9SWEZpbGxlZABzZXRfVHJhbnNm
ZXJyZWQAc2V0X0ZpbGVQcm9jZXNzZWQAc2V0X1JYUmVjZWl2ZWQAUmVwbGFjZQBkZWZhdWx0SW5z
dGFuY2UASURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAZ2V0
X3ZhclN0YWdpbmdGaWxlAHNldF9GUU5GaWxlTmFtZQBzZXRfRXJyb3JEYXRlVGltZQBSZWFkTGlu
ZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAGdldF9DdWx0dXJlAHNldF9D
dWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBEaXNwb3NlAHNl
dF9EYXRlAHNldF9Sb3dDcmVhdGVkRGF0ZQBzZXRfU3RhdGUARWRpdG9yQnJvd3NhYmxlU3RhdGUA
Q29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBE
ZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxl
QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJp
YnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0
dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0
dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50
cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGli
aWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQB2YWx1ZQBTeXN0ZW0uUnVudGlt
ZS5WZXJzaW9uaW5nAGluU3RyaW5nAFRvU3RyaW5nAFN1YnN0cmluZwBJc01hdGNoAGdldF9MZW5n
dGgAR2V0TGVuZ3RoAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ184MDQ2Mjk4MTcwNGM0YTZmOTc5
ZGMxODIyNzAwOTFkMC5kbGwAc2V0X0ZpbGVSb3dJRF9Jc051bGwAc2V0X0Vycm9yRGF0YV9Jc051
bGwAc2V0X1JYRmlsbGVkX0lzTnVsbABzZXRfVHJhbnNmZXJyZWRfSXNOdWxsAHNldF9GaWxlUHJv
Y2Vzc2VkX0lzTnVsbABzZXRfUlhSZWNlaXZlZF9Jc051bGwAc2V0X0ZRTkZpbGVOYW1lX0lzTnVs
bABzZXRfRXJyb3JEYXRlVGltZV9Jc051bGwAc2V0X0RhdGVfSXNOdWxsAHNldF9Sb3dDcmVhdGVk
RGF0ZV9Jc051bGwAc2V0X1N0YXRlX0lzTnVsbABzZXRfRXJyb3JEZXNjcmlwdGlvbl9Jc051bGwA
c2V0X0FQSU51bWJlcl9Jc051bGwAc2V0X0FBUE51bWJlcl9Jc051bGwAc2V0X0ZpbGVFcnJvclJv
d051bWJlcl9Jc051bGwAc2V0X1BoYXJtYWN5X0lzTnVsbABTZXROdWxsAGNvbABnZXRfSXRlbQBz
ZXRfSXRlbQBTeXN0ZW0AVHJpbQBFbnVtAHJlc291cmNlTWFuAGZuAFNjcmlwdE1haW4AU3lzdGVt
LkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ASW52
YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBzZXRfRXJyb3JEZXNjcmlwdGlvbgBDdWx0dXJlSW5mbwBP
dXRwdXROYW1lTWFwAE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFw
AGlucABDaGFyAHNldF9BUElOdW1iZXIAc2V0X0FBUE51bWJlcgBzZXRfRmlsZUVycm9yUm93TnVt
YmVyAFN0cmVhbVJlYWRlcgBUZXh0UmVhZGVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBF
cnJvck91dEJ1ZmZlcgBLUElBbGx5U2NyaXB0c091dEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2Vy
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgBXcml0ZUVycm9yAC5jdG9y
AC5jY3RvcgBPdXRwdXRJRHMAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBp
bGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ184MDQ2Mjk4MTcwNGM0YTZmOTc5ZGMxODIy
NzAwOTFkMC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0Nf
ODA0NjI5ODE3MDRjNGE2Zjk3OWRjMTgyMjcwMDkxZDAuUHJvcGVydGllcwBnZXRfUmVhZE9ubHlW
YXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdzAE1h
eENvbHMAU3lzdGVtLlRleHQuUmVndWxhckV4cHJlc3Npb25zAENvbm5lY3Rpb25zAE5vblByaW50
YWJsZUNoYXJzAEJ1ZmZlcnMARmluaXNoT3V0cHV0cwBDcmVhdGVOZXdPdXRwdXRSb3dzAE9iamVj
dABkdABTZXRFbmRPZlJvd3NldABsZWZ0AFNwbGl0AGdldF9EZWZhdWx0AGluSW50AFVzZXJDb21w
b25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVy
LlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AFByaW1lT3V0cHV0AEdl
dFZhbHVlV2l0aENvbnRleHQAU2NyaXB0Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0X0V2YWx1YXRv
ckNvbnRleHQAZ2V0X05vdwBBZGRSb3cARXJyUm93AFJlZ2V4AEFycmF5AHNldF9QaGFybWFjeQBn
ZXRfdmFyRGF0ZUtleQBnZXRfQXNzZW1ibHkAAAtbAAAALQAfAF0AAQMiAAABAAUgACAAAAMgAAAH
IAAgACAAADNOAG8AdAAgAGUAbgBvAHUAZwBoACAAYwBvAGwAdQBtAG4AcwAgAGkAbgAgAHIAbwB3
AACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABz
AGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAA
dABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAI0sAUABJAEEAbABs
AHkAUwBjAHIAaQBwAHQAcwBPAHUAdAAAEUUAcgByAG8AcgBPAHUAdAAAFXYAYQByAEQAYQB0AGUA
SwBlAHkAAB12AGEAcgBTAHQAYQBnAGkAbgBnAEYAaQBsAGUAAHFTAEMAXwA4ADAANAA2ADIAOQA4
ADEANwAwADQAYwA0AGEANgBmADkANwA5AGQAYwAxADgAMgAyADcAMAAwADkAMQBkADAALgBQAHIA
bwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAULNn8ozCn0G3XuURjrIkoQAE
IAEBCAMgAAEFIAEBEREEIAEBDgUgAQERaQMgAA4DIAAIBSACDggIBCABAg4TBwsODh0OHQMICAgS
PRE5EkEROQUgAg4ODgYgAR0OHQMEIAEICAQAABE5CSADARJNHQgSUQUgAgEIHAMgAAIDBwEIBgAC
CBJRDgUgAR0ICAUgABKAmQYgARKAnRwFAAASgKEGIAEcEoClCAABEoCpEYCtBSAAEoCxByACAQ4S
gLEIt3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAABAIAAAAEAwAAAAQEAAAABAUAAAAEBgAAAAQH
AAAABAgAAAADBhIYAwYSHAMGEgwDBhIQAwYSVQMGEmEDBhJlAwYSJAIGCAMGESgFIAIODggJIAUB
ETkOCA4OBCABAQIFIAEBETkLIAQBCB0IHRJNElEFIAEBElUEAAASYQQAABJlBQABARJlBAAAEiQD
AAABAygACAMoAAIDKAAOBCgAETkECAASYQQIABJlBAgAEiQIAQAIAAAAAAAeAQABAFQCFldyYXBO
b25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDXzgwNDYyOTgxNzA0YzRhNmY5NzlkYzE4
MjI3MDA5MWQwAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTcAAEcBABouTkVURnJhbWV3b3Jr
LFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNAAA
tAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2Nvcmxp
YiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1
YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAA
AABQQURQQURQtAAAAGRDAAAAAAAAAAAAAH5DAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwQwAA
AAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAA
ABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA
7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4A
AAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEA
cgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACw
BEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0AGIA
MAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBt
AGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8A
OAAwADQANgAyADkAOAAxADcAMAA0AGMANABhADYAZgA5ADcAOQBkAGMAMQA4ADIAMgA3ADAAMAA5
ADEAZAAwAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAA
cAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwA4ADAANAA2ADIAOQA4ADEANwAw
ADQAYwA0AGEANgBmADkANwA5AGQAYwAxADgAMgAyADcAMAAwADkAMQBkADAALgBkAGwAbAAAAEgA
EgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAg
ACAAMgAwADEANwAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAA
eAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADgAMAA0ADYAMgA5
ADgAMQA3ADAANABjADQAYQA2AGYAOQA3ADkAZABjADEAOAAyADIANwAwADAAOQAxAGQAMAAuAGQA
bABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwA4ADAANAA2ADIAOQA4
ADEANwAwADQAYwA0AGEANgBmADkANwA5AGQAYwAxADgAMgAyADcAMAAwADkAMQBkADAAAAA0AAgA
AQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEAQQBz
AHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAAJAzAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_80462981704c4a6f979dc182270091d0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::varDateKey,User::varStagingFile</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">11a0a7ea8b9deec394783dc07d3a6b44</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">ab1376608429e03f9b386a027414b466108bc7aa</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[KPIAllyScriptsOut]"
                      hasSideEffects="true"
                      name="KPIAllyScriptsOut">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[KPIAllyScriptsOut].Columns[FileRowID]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[KPIAllyScriptsOut].Columns[FileRowID]"
                          name="FileRowID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[KPIAllyScriptsOut].Columns[Pharmacy]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[KPIAllyScriptsOut].Columns[Pharmacy]"
                          name="Pharmacy" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[KPIAllyScriptsOut].Columns[State]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[KPIAllyScriptsOut].Columns[State]"
                          name="State" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[KPIAllyScriptsOut].Columns[AAPNumber]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[KPIAllyScriptsOut].Columns[AAPNumber]"
                          name="AAPNumber" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[KPIAllyScriptsOut].Columns[APINumber]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[KPIAllyScriptsOut].Columns[APINumber]"
                          name="APINumber" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[KPIAllyScriptsOut].Columns[Date]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[KPIAllyScriptsOut].Columns[Date]"
                          name="Date" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[KPIAllyScriptsOut].Columns[RXReceived]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[KPIAllyScriptsOut].Columns[RXReceived]"
                          name="RXReceived" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[KPIAllyScriptsOut].Columns[RXFilled]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[KPIAllyScriptsOut].Columns[RXFilled]"
                          name="RXFilled" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[KPIAllyScriptsOut].Columns[Transferred]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[KPIAllyScriptsOut].Columns[Transferred]"
                          name="Transferred" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[KPIAllyScriptsOut].Columns[FileProcessed]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[KPIAllyScriptsOut].Columns[FileProcessed]"
                          name="FileProcessed" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[KPIAllyScriptsOut].Columns[RowCreatedDate]"
                          dataType="dbTimeStamp"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[KPIAllyScriptsOut].Columns[RowCreatedDate]"
                          name="RowCreatedDate" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut]"
                      hasSideEffects="true"
                      name="ErrorOut">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[ErrorDateTime]"
                          dataType="dbTimeStamp"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[ErrorDateTime]"
                          name="ErrorDateTime" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[FQNFileName]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[FQNFileName]"
                          name="FQNFileName" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[FileErrorRowNumber]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[FileErrorRowNumber]"
                          name="FileErrorRowNumber" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[ErrorData]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[ErrorData]"
                          name="ErrorData" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[ErrorDescription]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[ErrorDescription]"
                          name="ErrorDescription" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[RowCreatedDate]"
                          dataType="dbTimeStamp"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut].Columns[RowCreatedDate]"
                          name="RowCreatedDate" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Staging KPIAlluScripts"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Staging].[KPI_AllyScripts]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[AAPDW1.ODSIntake]"
                      connectionManagerRefId="Package.ConnectionManagers[AAPDW1.ODSIntake]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts.Inputs[OLE DB Destination Input].Columns[Pharmacy]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Pharmacy"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts.Inputs[OLE DB Destination Input].ExternalColumns[Pharmacy]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[KPIAllyScriptsOut].Columns[Pharmacy]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts.Inputs[OLE DB Destination Input].Columns[State]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="State"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts.Inputs[OLE DB Destination Input].ExternalColumns[State]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[KPIAllyScriptsOut].Columns[State]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts.Inputs[OLE DB Destination Input].Columns[AAPNumber]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="AAPNumber"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts.Inputs[OLE DB Destination Input].ExternalColumns[AAPNumber]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[KPIAllyScriptsOut].Columns[AAPNumber]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts.Inputs[OLE DB Destination Input].Columns[APINumber]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="APINumber"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts.Inputs[OLE DB Destination Input].ExternalColumns[APINumber]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[KPIAllyScriptsOut].Columns[APINumber]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts.Inputs[OLE DB Destination Input].Columns[Date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Date"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts.Inputs[OLE DB Destination Input].ExternalColumns[Date]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[KPIAllyScriptsOut].Columns[Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts.Inputs[OLE DB Destination Input].Columns[RXReceived]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="RXReceived"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts.Inputs[OLE DB Destination Input].ExternalColumns[RXReceived]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[KPIAllyScriptsOut].Columns[RXReceived]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts.Inputs[OLE DB Destination Input].Columns[RXFilled]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="RXFilled"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts.Inputs[OLE DB Destination Input].ExternalColumns[RXFilled]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[KPIAllyScriptsOut].Columns[RXFilled]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts.Inputs[OLE DB Destination Input].Columns[Transferred]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Transferred"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts.Inputs[OLE DB Destination Input].ExternalColumns[Transferred]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[KPIAllyScriptsOut].Columns[Transferred]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts.Inputs[OLE DB Destination Input].Columns[FileRowID]"
                          cachedDataType="i4"
                          cachedName="FileRowID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts.Inputs[OLE DB Destination Input].ExternalColumns[FileRowID]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[KPIAllyScriptsOut].Columns[FileRowID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts.Inputs[OLE DB Destination Input].Columns[FileProcessed]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="FileProcessed"
                          externalMetadataColumnId="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts.Inputs[OLE DB Destination Input].ExternalColumns[FileProcessed]"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[KPIAllyScriptsOut].Columns[FileProcessed]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts.Inputs[OLE DB Destination Input].ExternalColumns[RowID]"
                          dataType="i4"
                          name="RowID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts.Inputs[OLE DB Destination Input].ExternalColumns[Pharmacy]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Pharmacy" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts.Inputs[OLE DB Destination Input].ExternalColumns[State]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="State" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts.Inputs[OLE DB Destination Input].ExternalColumns[AAPNumber]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="AAPNumber" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts.Inputs[OLE DB Destination Input].ExternalColumns[APINumber]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="APINumber" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts.Inputs[OLE DB Destination Input].ExternalColumns[Date]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts.Inputs[OLE DB Destination Input].ExternalColumns[RXReceived]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="RXReceived" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts.Inputs[OLE DB Destination Input].ExternalColumns[RXFilled]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="RXFilled" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts.Inputs[OLE DB Destination Input].ExternalColumns[Transferred]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Transferred" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts.Inputs[OLE DB Destination Input].ExternalColumns[RowCreateDate]"
                          dataType="dbTimeStamp"
                          name="RowCreateDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts.Inputs[OLE DB Destination Input].ExternalColumns[FileProcessed]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="FileProcessed" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts.Inputs[OLE DB Destination Input].ExternalColumns[FileRowID]"
                          dataType="i4"
                          name="FileRowID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Load Raw File.Paths[ErrorOut]"
                  endId="Package\Foreach Loop Container\Load Raw File\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="ErrorOut"
                  startId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[ErrorOut]" />
                <path
                  refId="Package\Foreach Loop Container\Load Raw File.Paths[KPIAllyScriptsOut]"
                  endId="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts.Inputs[OLE DB Destination Input]"
                  name="KPIAllyScriptsOut"
                  startId="Package\Foreach Loop Container\Load Raw File\Script Component.Outputs[KPIAllyScriptsOut]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{DD346A80-818A-45CD-8616-BD2B1B1D1DAD}"
          DTS:From="Package\Foreach Loop Container\Copy File to Archive Folder"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Loop Container\Load Raw File" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{EF6199D9-2387-4660-932A-50DD0A8EFAB1}"
          DTS:From="Package\Foreach Loop Container\Load Raw File"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach Loop Container\Delete File" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{7BA33751-A9AA-497C-9E43-72A715EA8C2B}"
          DTS:ObjectName="{7BA33751-A9AA-497C-9E43-72A715EA8C2B}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::varStagingFile" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{17E64EBF-606E-4665-A4FB-73AB877A9ECA}"
          DTS:ObjectName="{17E64EBF-606E-4665-A4FB-73AB877A9ECA}"
          DTS:ValueIndex="1"
          DTS:VariableName="User::varFileArchive" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get File Info"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:DelayValidation="True"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{C393DC74-83E9-4E61-81D5-8A557B6E8C97}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get File Info"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Get File Info\OLE DB Source"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="OLE DB Source"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">EXEC dbo.usp_KPIDash_AllyScripts_Config

	@FileDir = ?</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping">"@FileDir:Input",{6C9956BE-671E-412C-BF0A-5BB55628F548};</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Get File Info\OLE DB Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[AAPDW1.ODSIntake]"
                  connectionManagerRefId="Package.ConnectionManagers[AAPDW1.ODSIntake]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Output].Columns[SourcePath]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SourcePath]"
                      length="1000"
                      lineageId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Output].Columns[SourcePath]"
                      name="SourcePath"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Output].Columns[ArchivePath]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ArchivePath]"
                      length="1000"
                      lineageId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Output].Columns[ArchivePath]"
                      name="ArchivePath"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SourcePath]"
                      codePage="1252"
                      dataType="str"
                      length="1000"
                      name="SourcePath" />
                    <externalMetadataColumn
                      refId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ArchivePath]"
                      codePage="1252"
                      dataType="str"
                      length="1000"
                      name="ArchivePath" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SourcePath]"
                      codePage="1252"
                      dataType="str"
                      length="1000"
                      lineageId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SourcePath]"
                      name="SourcePath" />
                    <outputColumn
                      refId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ArchivePath]"
                      codePage="1252"
                      dataType="str"
                      length="1000"
                      lineageId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ArchivePath]"
                      name="ArchivePath" />
                    <outputColumn
                      refId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get File Info\Recordset Destination"
              componentClassID="Microsoft.RecordsetDestination"
              contactInfo="Recordset Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates and populates an in-memory ADO recordset that is available outside of the data flow. Scripts and other package elements can use the recordset. For example, use a recordset to store the names of files that will be loaded into the data warehouse."
              name="Recordset Destination">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the recordset."
                  name="VariableName">User::ADORecordSet</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get File Info\Recordset Destination.Inputs[Recordset Destination Input]"
                  hasSideEffects="true"
                  name="Recordset Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get File Info\Recordset Destination.Inputs[Recordset Destination Input].Columns[SourcePath]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="1000"
                      cachedName="SourcePath"
                      lineageId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Output].Columns[SourcePath]" />
                    <inputColumn
                      refId="Package\Get File Info\Recordset Destination.Inputs[Recordset Destination Input].Columns[ArchivePath]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="1000"
                      cachedName="ArchivePath"
                      lineageId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Output].Columns[ArchivePath]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Get File Info.Paths[OLE DB Source Output]"
              endId="Package\Get File Info\Recordset Destination.Inputs[Recordset Destination Input]"
              name="OLE DB Source Output"
              startId="Package\Get File Info\OLE DB Source.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{459E2089-52DC-4015-A78E-18BA3915AFA0}"
      DTS:From="Package\Get File Info"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Foreach Loop Container" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="205,42"
          Id="Package\Foreach Loop Container\Copy File to Archive Folder"
          TopLeft="134,12" />
        <NodeLayout
          Size="128,42"
          Id="Package\Foreach Loop Container\Delete File"
          TopLeft="152,173" />
        <NodeLayout
          Size="144,42"
          Id="Package\Foreach Loop Container\Load Raw File"
          TopLeft="142,88" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="236.5,54">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-22.5,34"
              Start="0,0"
              End="-22.5,26.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13"
                    Point2="0,17"
                    Point3="-4,17" />
                  <mssgle:LineSegment
                    End="-18.5,17" />
                  <mssgle:CubicBezierSegment
                    Point1="-18.5,17"
                    Point2="-22.5,17"
                    Point3="-22.5,21" />
                  <mssgle:LineSegment
                    End="-22.5,26.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="215,130">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,43"
              Start="0,0"
              End="0,35.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="456,270"
          Size="456,313"
          Id="Package\Foreach Loop Container"
          TopLeft="432,191" />
        <NodeLayout
          Size="137,42"
          Id="Package\Get File Info"
          TopLeft="557,61" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="625.5,103">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="34.5,88"
              Start="0,0"
              End="34.5,80.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40" />
                  <mssgle:CubicBezierSegment
                    Point1="0,40"
                    Point2="0,44"
                    Point3="4,44" />
                  <mssgle:LineSegment
                    End="30.5,44" />
                  <mssgle:CubicBezierSegment
                    Point1="30.5,44"
                    Point2="34.5,44"
                    Point3="34.5,48" />
                  <mssgle:LineSegment
                    End="34.5,80.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Load Raw File">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="182,42"
          Id="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts"
          TopLeft="735,234" />
        <NodeLayout
          Size="163,42"
          Id="Package\Foreach Loop Container\Load Raw File\Script Component"
          TopLeft="600,96" />
        <NodeLayout
          Size="171,42"
          Id="Package\Foreach Loop Container\Load Raw File\OLE DB Destination"
          TopLeft="417,231" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Load Raw File.Paths[KPIAllyScriptsOut]"
          TopLeft="707.333333333333,138">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="118.666666666667,96"
              Start="0,0"
              End="118.666666666667,88.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.9599027946537" />
                  <mssgle:CubicBezierSegment
                    Point1="0,34.9599027946537"
                    Point2="0,38.9599027946537"
                    Point3="4,38.9599027946537" />
                  <mssgle:LineSegment
                    End="114.666666666667,38.9599027946537" />
                  <mssgle:CubicBezierSegment
                    Point1="114.666666666667,38.9599027946537"
                    Point2="118.666666666667,38.9599027946537"
                    Point3="118.666666666667,42.9599027946537" />
                  <mssgle:LineSegment
                    End="118.666666666667,88.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="20.6669466145833,43.9599027946537,77.3327734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Load Raw File.Paths[ErrorOut]"
          TopLeft="655.666666666667,138">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-153.166666666667,93"
              Start="0,0"
              End="-153.166666666667,85.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.7424058323208" />
                  <mssgle:CubicBezierSegment
                    Point1="0,33.7424058323208"
                    Point2="0,37.7424058323208"
                    Point3="-4,37.7424058323208" />
                  <mssgle:LineSegment
                    End="-149.166666666667,37.7424058323208" />
                  <mssgle:CubicBezierSegment
                    Point1="-149.166666666667,37.7424058323208"
                    Point2="-153.166666666667,37.7424058323208"
                    Point3="-153.166666666667,41.7424058323208" />
                  <mssgle:LineSegment
                    End="-153.166666666667,85.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-96.1297200520833,42.7424058323208,39.0927734375,9.5732421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Load Raw File\Staging KPIAlluScripts">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Load Raw File\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Get File Info">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="182,42"
          Id="Package\Get File Info\Recordset Destination"
          TopLeft="440,223" />
        <NodeLayout
          Size="150,42"
          Id="Package\Get File Info\OLE DB Source"
          TopLeft="389,114" />
        <EdgeLayout
          Id="Package\Get File Info.Paths[OLE DB Source Output]"
          TopLeft="464,156">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="67,67"
              Start="0,0"
              End="67,59.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,29.5"
                    Point2="0,33.5"
                    Point3="4,33.5" />
                  <mssgle:LineSegment
                    End="63,33.5" />
                  <mssgle:CubicBezierSegment
                    Point1="63,33.5"
                    Point2="67,33.5"
                    Point3="67,37.5" />
                  <mssgle:LineSegment
                    End="67,59.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Get File Info\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>